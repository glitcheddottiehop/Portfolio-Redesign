{
  "version": 3,
  "sources": ["../../@rehaps/rehaps-web-components/dist/esm/src/utils/document/document-utils.ts"],
  "sourcesContent": ["/**\n * Global html and document element utilities\n */\nexport class DocumentUtils {\n  /**\n   * Gets browser's default font size \\\n   * Can be used for correct rem conversion to pixels\n   */\n  static getDefaultFontSize(): number {\n    const element = document.createElement('div');\n    element.style.width = '1rem';\n    element.style.display = 'none';\n    document.body.append(element);\n    \n    const widthMatch = getComputedStyle(element)?.getPropertyValue('width')?.match(/\\d+/);\n\n    element.remove();\n\n    return Number(widthMatch && widthMatch.length > 0 ? widthMatch[0] : 16);\n  }\n\n  /**\n   * Converts the string size value to pixels.\n   */\n  static convertToPixels(value: string): number {\n    // Gets the first sequence of digits as numeric value. (32px => 32, a3rem48px => 3).\n    let numericValue = Number(value.match(/\\d*\\.?\\d*/)[0]);\n    if (value.includes('rem')) {\n      numericValue *= this.getDefaultFontSize();\n    }\n    \n    return numericValue;\n  }\n}\n"],
  "mappings": ";;;;;IAGa;;;IAAA,sBAAa;MAKxB,OAAO,qBAAkB;;AACvB,cAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,gBAAQ,MAAM,QAAQ;AACtB,gBAAQ,MAAM,UAAU;AACxB,iBAAS,KAAK,OAAO,OAAO;AAE5B,cAAM,cAAa,MAAA,KAAA,iBAAiB,OAAO,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,iBAAiB,OAAO,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,MAAM,KAAK;AAEpF,gBAAQ,OAAM;AAEd,eAAO,OAAO,cAAc,WAAW,SAAS,IAAI,WAAW,CAAC,IAAI,EAAE;;MAMxE,OAAO,gBAAgB,OAAa;AAElC,YAAI,eAAe,OAAO,MAAM,MAAM,WAAW,EAAE,CAAC,CAAC;AACrD,YAAI,MAAM,SAAS,KAAK,GAAG;AACzB,0BAAgB,KAAK,mBAAkB;;AAGzC,eAAO;;;;;",
  "names": []
}

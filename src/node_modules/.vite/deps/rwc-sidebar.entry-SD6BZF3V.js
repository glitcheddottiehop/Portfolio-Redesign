import {
  RWCActionHelper,
  init_rwcActionHelper_202b4497
} from "./chunk-6ZIXQTZL.js";
import {
  EventManager,
  init_eventManager_f421930c
} from "./chunk-OXV5FFNH.js";
import {
  Host,
  createEvent,
  getElement,
  h,
  init_index_e9508d80,
  registerInstance
} from "./chunk-6OFGPT5F.js";
import {
  __esm
} from "./chunk-CF3WPAMV.js";

// node_modules/@rehaps/rehaps-web-components/dist/esm/rwc-sidebar.entry.js
var sidebarCss, RwcSidebar;
var init_rwc_sidebar_entry = __esm({
  "node_modules/@rehaps/rehaps-web-components/dist/esm/rwc-sidebar.entry.js"() {
    init_index_e9508d80();
    init_eventManager_f421930c();
    init_rwcActionHelper_202b4497();
    sidebarCss = '@font-face{font-family:"Inter";font-style:normal;font-weight:400;font-display:swap;src:url("assets/fonts/inter/Inter-Regular.woff2?v=1.0") format("woff2"), url("assets/fonts/inter/Inter-Regular.woff?v=1.0") format("woff")}@font-face{font-family:"Inter";font-style:normal;font-weight:500;font-display:swap;src:url("assets/fonts/inter/Inter-Medium.woff2?v=1.0") format("woff2"), url("assets/fonts/inter/Inter-Medium.woff?v=1.0") format("woff")}@font-face{font-family:"Inter";font-style:normal;font-weight:600;font-display:swap;src:url("assets/fonts/inter/Inter-SemiBold.woff2?v=1.0") format("woff2"), url("assets/fonts/inter/Inter-SemiBold.woff?v=1.0") format("woff")}:host{--sidebar-inner-padding:1rem 0.5rem;--sidebar-container-box-shadow:0 25px 50px -12px rgba(0, 0, 0, 0.25);--sidebar-container-border-color:rgb(224, 224, 224);--sidebar-container-border:1px solid var(--sidebar-container-border-color);--sidebar-container-background-color:#fff;--sidebar-container-width:auto;--sidebar-container-max-width:20rem;--sidebar-container-transition:box-shadow 400ms ease-in-out;display:block;top:0;height:100%;max-width:var(--sidebar-container-max-width);position:fixed;transition:left 400ms ease-in-out, right 400ms ease-in-out;z-index:10}.container{height:100%;overflow-x:hidden;overflow-y:auto;background-color:var(--sidebar-container-background-color);box-shadow:0 0 0 0px rgba(0, 0, 0, 0);box-sizing:border-box;min-height:unset;width:var(--sidebar-container-width);padding:var(--sidebar-inner-padding);transition:var(--sidebar-container-transition)}.container.inner-scroll{height:100%;min-height:unset}.container.open{box-shadow:var(--sidebar-container-box-shadow)}.container.left{border-right:var(--sidebar-container-border)}.container.right{border-left:var(--sidebar-container-border)}';
    RwcSidebar = class {
      constructor(hostRef) {
        registerInstance(this, hostRef);
        this.openEvent = createEvent(this, "sidebarOpen", 7);
        this.closeEvent = createEvent(this, "sidebarClose", 7);
        this.eventManager = new EventManager();
        this.actions = ["open", "close", "toggle"];
        this.isOpen = false;
        this.defaultState = "closed";
        this.rwcKey = RWCActionHelper.getDefaultComponentKey("sidebar");
        this.position = "left";
        this.innerScroll = true;
      }
      onWindowResize() {
        this.updateHostOffset();
      }
      componentWillLoad() {
        this.isOpen = this.defaultState === "open";
      }
      componentDidLoad() {
        this.init();
      }
      disconnectedCallback() {
        this.eventManager.clearEventListeners();
      }
      async init() {
        this.eventManager.clearEventListeners();
        this.addToggleEventListeners();
        this.updateHostOffset();
      }
      async toggle() {
        if (this.isOpen) {
          this.close();
        } else {
          this.open();
        }
      }
      async open() {
        this.isOpen = true;
        this.updateHostOffset();
        this.openEvent.emit();
      }
      async close() {
        this.isOpen = false;
        this.updateHostOffset();
        this.closeEvent.emit();
      }
      updateHostOffset() {
        if (this.isOpen) {
          if (this.position === "left") {
            this.host.style.right = "";
            this.host.style.left = "0";
          }
          if (this.position === "right") {
            this.host.style.right = "0";
            this.host.style.left = "";
          }
        } else {
          let hostWidth = this.host.offsetWidth;
          if (typeof hostWidth === "undefined") {
            hostWidth = window.innerWidth;
          }
          if (this.position === "left") {
            this.host.style.right = "";
            this.host.style.left = `-${hostWidth}px`;
          }
          if (this.position === "right") {
            this.host.style.right = `-${hostWidth}px`;
            this.host.style.left = "";
          }
        }
      }
      addToggleEventListeners() {
        RWCActionHelper.bindRWCActions(this, this.host, this.actions, this.rwcKey);
      }
      render() {
        return h(Host, { class: {
          open: this.isOpen,
          [this.position]: true
        } }, h("div", { class: {
          container: true,
          open: this.isOpen,
          [this.position]: true,
          "inner-scroll": this.innerScroll
        } }, h("slot", null)));
      }
      get host() {
        return getElement(this);
      }
    };
    RwcSidebar.style = sidebarCss;
  }
});
init_rwc_sidebar_entry();
export {
  RwcSidebar as rwc_sidebar
};
//# sourceMappingURL=rwc-sidebar.entry-SD6BZF3V.js.map

import {
  __esm
} from "./chunk-CF3WPAMV.js";

// node_modules/@rehaps/rehaps-web-components/dist/esm/rwcActionHelper-202b4497.js
var RWCActionHelper;
var init_rwcActionHelper_202b4497 = __esm({
  "node_modules/@rehaps/rehaps-web-components/dist/esm/rwcActionHelper-202b4497.js"() {
    RWCActionHelper = class _RWCActionHelper {
      static getLastComponentId() {
        return _RWCActionHelper.lastComponentId++;
      }
      static getDefaultComponentKey(name) {
        return `${_RWCActionHelper.RWC_ACTION_PREFIX}-${name}-${_RWCActionHelper.getLastComponentId()}`;
      }
      static bindRWCActions(component, host, actions, rwcKey, eventName = "click") {
        if (actions.length > 0) {
          const querySelector = actions.map((action) => `[data-${_RWCActionHelper.RWC_ACTION_PREFIX}-${action}='${rwcKey}']`).join(", ");
          document.querySelectorAll(querySelector).forEach((element) => {
            actions.forEach((action) => {
              if (element.getAttribute(`data-${_RWCActionHelper.RWC_ACTION_PREFIX}-${action}`)) {
                const callback = this.createCallback(component, host, action);
                component.eventManager.registerEventListener(element, eventName, callback);
              }
            });
          });
        }
      }
      static createCallback(component, host, action) {
        return (event) => {
          var _a;
          if (((_a = event.detail) === null || _a === void 0 ? void 0 : _a.origin) === host) {
            return;
          }
          component[action].call(component, event);
        };
      }
    };
    RWCActionHelper.RWC_ACTION_PREFIX = "rwc";
    RWCActionHelper.lastComponentId = 1;
  }
});

export {
  RWCActionHelper,
  init_rwcActionHelper_202b4497
};
//# sourceMappingURL=chunk-6ZIXQTZL.js.map

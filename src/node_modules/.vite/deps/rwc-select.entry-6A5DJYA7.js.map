{
  "version": 3,
  "sources": ["../../@rehaps/rehaps-web-components/dist/esm/src/components/basic/forms/select/select.scss?tag=rwc-select&encapsulation=shadow", "../../@rehaps/rehaps-web-components/dist/esm/src/components/basic/forms/select/select.tsx"],
  "sourcesContent": ["@import 'global.scss';\n\n:host {\n  /**\n  * @prop --select-animation-duration: The duration of animation of the select.\n  *\n  * @prop --select-border: The border of the select.\n  * @prop --select-border-radius: The border radius of the select.\n  *\n  * @prop --select-option-hover-background-color: The color of option on hover of the select.\n  *\n  * @prop --select-font-color: The color of the text of the select.\n  *\n  * @prop --select-icon-color: The color of the icon of the select.\n  * @prop --select-icon-size: The size of the icon of the select.\n  * @prop --select-icon-transition: The icon animation of the select.\n  *\n  * @prop --select-padding: The padding of the select.\n  * @prop --select-font-size: The size of the font of the select.\n  *\n  * @prop --select-dropdown-background-color: The background color of the dropdown.\n  * @prop --select-dropdown-border: The border of the dropdown.\n  * @prop --select-dropdown-border-radius: The border radius of the dropdown.\n  * @prop --select-dropdown-box-shadow: The box shadow of the dropdown.\n  * @prop --select-dropdown-max-width: The max width of the dropdown.\n  * @prop --select-dropdown-container-padding: The container padding of the dropdown.\n  * @prop --select-dropdown-container-margin: The container margin of the dropdown.\n  *\n  * @prop display: The display mode of the host element.\n  */\n\n  --select-animation-duration: 100ms;\n\n  --select-border: 1px solid #D2D3D3;\n  --select-border-radius: #{$rwc-border-radius--md};\n\n  --select-option-hover-background-color: #{$rwc-color-grey-200};\n\n  --select-font-color: #{$rwc-color-grey-900};\n  --select-font-size: #{$rwc-font-size-body-md};\n\n  --select-icon-color: #{$rwc-color-grey-900};\n  --select-icon-size: #{$rwc-font-size-body-lg};\n  --select-icon-transition: transform var(--select-animation-duration) linear;\n\n  --select-padding: #{$rwc-spacing--xs} #{$rwc-spacing--sm};\n\n  //Dropdown styles\n  --select-dropdown-background-color:  #{$rwc-color-foundation-white};\n  --select-dropdown-border: 1px solid #{$rwc-color-border-primary};\n  --select-dropdown-border-radius: 0.5rem;\n  --select-dropdown-box-shadow: #{$rwc-box-shadow-sm};\n  --select-dropdown-max-width:  100%;\n  --select-dropdown-container-padding: #{$rwc-spacing--xs} #{$rwc-spacing--md};\n  --select-dropdown-container-margin: #{$rwc-spacing--xs} 0 0 0;\n\n  display: block;\n}\n\n.dropdown {\n  --dropdown-background-color: var(--select-dropdown-background-color);\n  --dropdown-border: var(--select-dropdown-border);\n  --dropdown-border-radius: var( --select-dropdown-border-radius);\n  --dropdown-box-shadow: var(--select-dropdown-box-shadow);\n  --dropdown-max-width: var( --select-dropdown-max-width);\n  --dropdown-container-padding: var(--select-dropdown-container-padding);\n  --dropdown-container-margin: var(--select-dropdown-container-margin);\n}\n\n.container {\n  border: var(--select-border);\n  align-items: center;\n  font-size: var(--select-font-size);\n  padding: var(--select-padding);\n  color: var(--select-font-color);\n  border-radius: var(--select-border-radius);\n}\n\n.wrapper {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.icon {\n  align-self: center;\n  flex-shrink: 0;\n  height: var(--select-icon-size);\n  width: var(--select-icon-size);\n\n  svg {\n    height: 100%;\n    width: 100%;\n  }\n\n  path {\n    fill: var(--select-icon-color);\n  }\n}\n\nimg {\n  height: var(--select-icon-size);\n  width: var(--select-icon-size);\n}\n\n.rotate {\n  transition: var(--select-icon-transition);\n}\n\n.rotate.open{\n  transform: rotate(180deg);\n}\n\n.dropdown ::slotted(option:hover) {\n  background-color: var(--select-option-hover-background-color);\n}\n\n.dropdown ::slotted(option) {\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.pointer {\n  cursor: pointer;\n}\n", "import { Component, h, Prop, Host, FunctionalComponent, Listen, State, Method } from '@stencil/core';\nimport ChevronDown from '@material-design-icons/svg/outlined/expand_more.svg';\n\n@Component({\n  tag: 'rwc-select',\n  styleUrl: 'select.scss',\n  shadow: true\n})\nexport class RwcSelect {\n  /**\n   * The reference to the slot containing options.\n   */\n  private optionsSlot: HTMLSlotElement;\n\n  /**\n   * The reference to the dropdown HTML element.\n   */\n  private dropdownElement: HTMLRwcDropdownElement;\n\n  /**\n   * Path to the icon.\n   */\n  @Prop({ reflect: true }) icon: string = '';\n\n  /**\n   * Change cursor to pointer on hover.\n   */\n  @Prop() pointer: boolean = false;\n\n  /**\n   * Value of selected field.\n   */\n  @Prop({ mutable: true }) value = '';\n\n  /**\n   * Text of selected field.\n   */\n  @Prop({ mutable: true }) text = '';\n\n  /**\n   * State of icon.\n   */\n  @State() isOpen: boolean = false;\n\n  /**\n   * Handles the click event inside the select component including children (option elements inside dropdown).\n   */\n  @Listen('click')\n  onSelectClick(event: MouseEvent): void {\n    this.optionsSlot.assignedElements().forEach((element: HTMLOptionElement) => {\n      if (event.target === element) {\n        this.setValue(element.value);\n      }\n    });\n  }\n\n  /**\n   * Handles the open event of the dropdown component.\n   */\n  @Listen('dropdownOpen')\n  onDropdownOpen(): void {\n    this.isOpen = true;\n  }\n\n  /**\n   * Handles the close event of the dropdown component.\n   */\n  @Listen('dropdownClose')\n  onDropdownClose(): void {\n    this.isOpen = false;\n  }\n\n  /**\n   * Initializes the default active element and sets component value to the value of the active element.\n   */\n  componentDidLoad(): void {\n    this.setValue(this.value);\n  }\n\n  /**\n   * Sets the value and text of the component to the value of the option element containing the passed value.\n   */\n  @Method()\n  async setValue(value: string): Promise<void> {\n    this.optionsSlot.assignedElements().forEach((element: HTMLOptionElement) => {\n      if (value === element.value) {\n        this.value = element.value;\n        this.text = element.text;\n        this.dropdownElement.setState(false);\n      }\n    });\n  }\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <div class={ {\n          container: true,\n          pointer: this.pointer,\n        } }\n        >\n          <div class=\"wrapper\">\n            <div class=\"value\">\n              { this.text }\n            </div>\n            <div \n              slot=\"right\" \n              class={ {\n                rotate: true,\n                open: this.isOpen\n              } }>\n              <slot name=\"icon-right\">\n                { this.renderIcon() }\n              </slot>\n            </div>\n          </div>\n          <rwc-dropdown\n            class=\"dropdown\"\n            open-mode=\"toggle\"\n            size=\"parent\"\n            mode='fixed'\n            ref={ (dropdown: HTMLRwcDropdownElement) => this.dropdownElement = dropdown }\n          >\n            <slot\n              name=\"option\"\n              ref={ (slot: HTMLSlotElement) => this.optionsSlot = slot } />\n          </rwc-dropdown>\n        </div>\n      </Host>\n    );\n  }\n\n  /**\n   * Renders the icon element.\n   */\n  renderIcon(): FunctionalComponent {\n    if (this.icon) {\n      return (\n        <img src={ this.icon } alt=\"icon\"></img>\n      )\n    }\n    return (\n      <div innerHTML={ ChevronDown } class=\"icon svg-icon\"></div>\n    )\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;iBAAM,WCQO;;;;;ADRb,IAAM,YAAY;ICQL,YAAS,MAAA;;;oBAcoB;uBAKb;qBAKM;oBAKD;sBAKL;;MAM3B,cAAc,OAAiB;AAC7B,aAAK,YAAY,iBAAgB,EAAG,QAAQ,CAAC,YAA0B;AACrE,cAAI,MAAM,WAAW,SAAS;AAC5B,iBAAK,SAAS,QAAQ,KAAK;;SAE9B;;MAOH,iBAAc;AACZ,aAAK,SAAS;;MAOhB,kBAAe;AACb,aAAK,SAAS;;MAMhB,mBAAgB;AACd,aAAK,SAAS,KAAK,KAAK;;MAO1B,MAAM,SAAS,OAAa;AAC1B,aAAK,YAAY,iBAAgB,EAAG,QAAQ,CAAC,YAA0B;AACrE,cAAI,UAAU,QAAQ,OAAO;AAC3B,iBAAK,QAAQ,QAAQ;AACrB,iBAAK,OAAO,QAAQ;AACpB,iBAAK,gBAAgB,SAAS,KAAK;;SAEtC;;MAMH,SAAM;AACJ,eACE,EAAC,MAAI,MACH,EAAA,OAAA,EAAK,OAAQ;UACX,WAAW;UACX,SAAS,KAAK;UACf,GAEC,EAAA,OAAA,EAAK,OAAM,UAAS,GAClB,EAAA,OAAA,EAAK,OAAM,QAAO,GACd,KAAK,IAAI,GAEb,EAAA,OAAA,EACE,MAAK,SACL,OAAQ;UACN,QAAQ;UACR,MAAM,KAAK;UACZ,GACD,EAAA,QAAA,EAAM,MAAK,aAAY,GACnB,KAAK,WAAU,CAAE,CACd,CACH,GAER,EAAA,gBAAA,EACE,OAAM,YAAU,aACN,UACV,MAAK,UACL,MAAK,SACL,KAAM,CAAC,aAAqC,KAAK,kBAAkB,SAAQ,GAE3E,EAAA,QAAA,EACE,MAAK,UACL,KAAM,CAAC,SAA0B,KAAK,cAAc,KAAI,CAAA,CAAK,CAClD,CACX;;MAQZ,aAAU;AACR,YAAI,KAAK,MAAM;AACb,iBACE,EAAA,OAAA,EAAK,KAAM,KAAK,MAAO,KAAI,OAAM,CAAA;;AAGrC,eACE,EAAA,OAAA,EAAK,WAAY,aAAc,OAAM,gBAAe,CAAA;;;;;;",
  "names": []
}

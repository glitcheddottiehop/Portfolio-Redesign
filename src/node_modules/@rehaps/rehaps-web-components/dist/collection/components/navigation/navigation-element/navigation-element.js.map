{"version":3,"file":"navigation-element.js","sourceRoot":"","sources":["../../../../../src/components/navigation/navigation-element/navigation-element.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, Fragment, FunctionalComponent, h, Host, Listen, Prop, State } from '@stencil/core';\nimport { NavigationOpenMode, NavigationType, SubNavigationPosition } from '../../../interfaces/components/basic/navigation/navigation';\nimport { LinkElementRenderParams } from '../../../interfaces/components/basic/navigation/navigation-element';\nimport ChevronRight from '@material-design-icons/svg/round/chevron_right.svg';\nimport ExpandMore from '@material-design-icons/svg/round/expand_more.svg';\n\n/**\n * @slot - Default slot for the navigation element text.\n * @slot before - Slot for content to be inserted before the navigation element text.\n * @slot after - Slot for content to be inserted after the navigation element text.\n * @slot sub-navigation - Slot for sub-navigation elements.\n */\n@Component({\n  tag: 'rwc-navigation-element',\n  styleUrl: './navigation-element.scss',\n  shadow: true\n})\nexport class RwcNavigationElement {\n  /**\n   * The default href value of the navigation elements.\n   */\n  static NO_NAVIGATION_HREF = 'javascript:void(0)';\n\n  /**\n   * Reference to the host element of the component\n   */\n  @Element() host: HTMLRwcNavigationElementElement;\n\n  /**\n   * The link to navigate to on click\n   */\n  @Prop({ reflect: true }) link: string = RwcNavigationElement.NO_NAVIGATION_HREF;\n\n  /**\n   * Determines if the sub navigation opens on hover or on toggle click\n   */\n  @Prop({ reflect: true, mutable: true }) openMode: NavigationOpenMode = 'hover';\n\n  /**\n   * The type of the sub navigation\n   */\n  @Prop({ reflect: true }) subNavigationType: NavigationType = 'vertical';\n\n  /**\n   * The position of the sub navigation in relation to the navigation element\n   */\n  @Prop({ reflect: true }) subNavigationPosition: SubNavigationPosition = 'bottom';\n\n  /**\n   * The render mode of the dividers.\n   */\n  @Prop() renderDividers: boolean = false;\n\n  /**\n   * Enables rendering of the default sub navigation indicator icon.\n   */\n  @Prop() renderIcon: boolean = true;\n\n  /**\n   * Prevents default anchor element navigation behaviour.\n   */\n  @Prop() preventNavigation: boolean = false;\n\n  /**\n   * The path to the left icon image.\n   */\n  @Prop() iconLeft: string = '';\n\n  /**\n   * The path to the right icon image.\n   */\n  @Prop() iconRight: string = '';\n\n  /**\n   * The state of the dropdown.\n   */\n  @State() dropdownOpen: boolean = false;\n\n  /**\n   * The navigation event emitter.\n   */\n  @Event() navigate: EventEmitter<string>;\n\n  /**\n   * Determines if the navigation element contains sub navigation.\n   */\n  private get hasSubNavigation(): boolean {\n    return Boolean(this.host.querySelector('[slot=\"sub-navigation\"]'));\n  }\n\n  /**\n   * Updates the dropdown open state of the navigation element based on the state of the dropdown.\n   */\n  @Listen('dropdownOpen')\n  onDropdownOpen(event: CustomEvent<void>): void {\n    if (event.target === this.host) {\n      this.dropdownOpen = true;\n    }\n  }\n\n  /**\n   * Updates the dropdown open state of the navigation element based on the state of the dropdown.\n   */\n  @Listen('dropdownClose')\n  onDropdownClose(event: CustomEvent<void>): void {\n    if (event.target === this.host) {\n      this.dropdownOpen = false;\n    }\n  }\n\n  /**\n   * StencilJS lifecycle event handler called when the component is to be first loaded.\n   */\n  componentWillLoad(): void {\n    if (this.subNavigationType === 'accordion') {\n      this.openMode = 'manual';\n    }\n  }\n\n  /**\n   * The navigation event handler.\n   */\n  private handleNavigation(event: MouseEvent): void {\n    if (this.preventNavigation) {\n      event.preventDefault();\n    }\n\n    const closestAnchor = (event.composedPath()[0] as HTMLElement).closest('a');\n    if (closestAnchor) {\n      this.navigate.emit(closestAnchor.href);\n    }\n  }\n\n  /**\n   * Gets the navigation element href for the link element based on sub navigation opening behaviour.\n   */\n  private getNavigationElementHref(): string {\n    if (\n      this.openMode === 'hover' &&\n      this.subNavigationType !== 'accordion' ||\n      !this.hasSubNavigation\n    ) {\n      return this.link\n    }\n\n    return RwcNavigationElement.NO_NAVIGATION_HREF;\n  }\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <div class={ {\n          container: true,\n          [this.openMode]: true,\n          divider: this.renderDividers,\n          [`sub-nav-type-${ this.subNavigationType }`]: true,\n          'dropdown-open': this.dropdownOpen\n        } }>\n          { this.renderNavigationElement() }\n        </div>\n      </Host>\n    );\n  }\n\n  /**\n   * Renders the navigation element based on the type of navigation.\n   */\n  private renderNavigationElement(): FunctionalComponent {\n    if (this.subNavigationType === 'accordion') {\n      return (\n        <rwc-accordion\n          class={ {\n            'sub-navigation-accordion': true,\n            'has-sub-navigation': this.hasSubNavigation\n          } }\n          renderDivider={ this.renderDividers }\n          open={ false }\n          renderIcon={ this.renderIcon && this.hasSubNavigation }\n        >\n          { this.renderLinkElement({ slot: 'heading' }) }\n        </rwc-accordion>\n      );\n    }\n\n    return this.renderLinkElement({ slot: null });\n  }\n\n  /**\n   * Renders the link element.\n   */\n  private renderLinkElement(params: LinkElementRenderParams): FunctionalComponent {\n    return (\n      <Fragment>\n        <a\n          { ...{\n            href: this.getNavigationElementHref(),\n            'slot': params.slot || ''\n          } }\n          onClick={ (event: MouseEvent) => this.handleNavigation(event) }\n        >\n          <div class=\"link\">\n            <slot name=\"before\">\n              { this.renderLeftIcon() }\n            </slot>\n            <div class=\"text\">\n              <slot />\n            </div>\n            <slot name=\"after\">\n              { this.renderRightIcon() }\n            </slot>\n          </div>\n        </a >\n        { this.renderSubNavigationContainer() }\n      </Fragment>\n    )\n  }\n\n  /**\n   * Renders sub navigation from the data prop.\n   */\n  private renderSubNavigationContainer(): FunctionalComponent {\n    if (this.hasSubNavigation) {\n      if (this.subNavigationType === 'accordion') {\n        return (\n          <rwc-navigation\n            class=\"sub-navigation\"\n            type={ this.subNavigationType }\n          >\n            <slot name=\"sub-navigation\" />\n          </rwc-navigation>\n        )\n      } else {\n        return (\n          <rwc-dropdown\n            class=\"sub-navigation-dropdown\"\n            openMode={ this.openMode }\n            mode={ 'fixed' }\n            position={ this.subNavigationPosition }\n            size=\"auto\"\n          >\n            <slot name=\"sub-navigation\" />\n          </rwc-dropdown>\n        );\n      }\n    }\n    return <Fragment></Fragment>;\n  }\n\n  /**\n   * Render the left icon for the navigation element\n   */\n  private renderLeftIcon(): FunctionalComponent {\n    if (this.iconLeft) {\n      return (\n        <img src={ this.iconLeft } alt=\"Left icon\" class=\"icon icon icon-left\"></img>\n      );\n    }\n    return <Fragment></Fragment>;\n  }\n\n  /**\n   * Renders the avatar element.\n   */\n  renderRightIcon(): FunctionalComponent {\n    if (this.iconRight) {\n      return (\n        <img\n          src={ this.iconRight }\n          alt=\"Right icon\"\n          class={ {\n            icon: true,\n            ['icon-right']: true,\n            rotate: this.subNavigationPosition === 'bottom' && this.subNavigationType !== 'accordion'\n          } }\n        />\n      );\n    } else if (this.subNavigationType === 'vertical' && this.renderIcon && this.hasSubNavigation) {\n      return (\n        <div\n          innerHTML={ this.subNavigationPosition === 'side' ? ChevronRight : ExpandMore }\n          class={ {\n            icon: true,\n            ['icon-right']: true,\n            rotate: this.subNavigationPosition === 'bottom'\n          } }\n        >\n        </div>\n      );\n    }\n  }\n}\n"]}
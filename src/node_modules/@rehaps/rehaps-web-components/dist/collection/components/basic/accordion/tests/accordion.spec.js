import { h } from "@stencil/core";
import { newSpecPage } from "@stencil/core/testing";
import { RwcAccordion } from "../accordion";
describe('rwc-accordion', () => {
  it('should render the accordion', async () => {
    const page = await newSpecPage({
      components: [RwcAccordion],
      template: () => (h("rwc-accordion", { renderIcon: true, renderDivider: true }, h("div", { slot: "heading" }, "Heading text"), h("div", { slot: "" }, "Content"))),
    });
    expect(page.root).toEqualHtml(`
      <rwc-accordion>
        <mock:shadow-root>
          <div class="container">
            <div class="heading with-icon">
              <div class="left">
                <slot name="heading"></slot>
              </div>
              <div class="right">
                <slot name="heading-icon">
                  <div class="icon rotate"></div>
                </slot>
              </div>
            </div>
            <div class="content-wrapper">
              <div class="content">
                <slot></slot>
              </div>
            </div>
            <div class="divider"></div>
          </div>
        </mock:shadow-root>
        <div slot="heading">Heading text</div>
        <div slot="">Content</div>
      </rwc-accordion>
    `);
  });
  it('should handles the header click', async () => {
    const page = await newSpecPage({
      components: [RwcAccordion],
      template: () => (h("rwc-accordion", { renderDivider: false, renderIcon: false }, h("div", { slot: "heading" }, "Heading text"), h("div", { slot: "" }, "Content"))),
    });
    const heading = document.querySelector('rwc-accordion').shadowRoot.querySelector('.heading');
    heading.click();
    await page.waitForChanges();
    await new Promise(resolve => {
      setTimeout(() => {
        resolve();
      }, 200);
    });
    expect(page.root).toEqualHtml(`
      <rwc-accordion class="open" open="">
        <mock:shadow-root>
          <div class="container open">
            <div class="heading">
              <div class="left">
                <slot name="heading"></slot>
              </div>
            </div>
            <div class="content-wrapper">
              <div class="content">
                <slot></slot>
              </div>
            </div>
          </div>
        </mock:shadow-root>
        <div slot="heading">Heading text</div>
        <div slot="">Content</div>
      </rwc-accordion>
    `);
    heading.click();
    await page.waitForChanges();
    await new Promise(resolve => {
      setTimeout(() => {
        resolve();
      }, 200);
    });
    expect(page.root).toEqualHtml(`
      <rwc-accordion>
        <mock:shadow-root>
          <div class="container">
            <div class="heading">
              <div class="left">
                <slot name="heading"></slot>
              </div>
            </div>
            <div class="content-wrapper">
              <div class="content">
                <slot></slot>
              </div>
            </div>
          </div>
        </mock:shadow-root>
        <div slot="heading">Heading text</div>
        <div slot="">Content</div>
      </rwc-accordion>
    `);
  });
});
//# sourceMappingURL=accordion.spec.js.map

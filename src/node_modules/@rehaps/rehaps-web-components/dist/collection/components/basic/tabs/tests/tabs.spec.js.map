{"version":3,"file":"tabs.spec.js","sourceRoot":"","sources":["../../../../../../src/components/basic/tabs/tests/tabs.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Fragment, h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { RwcTabs } from '../tabs';\nimport { simulateAssignedElements } from '../../../../../jest/polyfill/slot';\nimport { simulateMouseEvent } from '../../../../../jest/simulation/mouse';\nimport { simulateAllOffsets } from '../../../../../jest/polyfill/offset';\nimport { DragMove } from '../../../../utils/actions/dragMove';\n\nconst containerExpectedClassesDefault = ['container', 'mode-underline'];\nconst containerExpectedClassesSegments = ['container', 'mode-segments'];\n\ndescribe('rwc-tabs', () => {\n  simulateAssignedElements();\n  simulateAllOffsets();\n\n  it('should render the tabs', async () => {\n    const page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs></rwc-tabs>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-1\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </rwc-tabs>\n    `);\n  });\n\n  it('should render the tabs as segments', async () => {\n    const page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs mode=\"segments\">\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-2\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesSegments.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div class=\"active\" slot=\"\">Tab 1</div>\n        <div slot=\"\">Tab 2</div>\n      </rwc-tabs>\n    `);\n  });\n\n  it('should handle the resize event', async () => {\n    const page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs>\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    global.innerWidth = 500;\n    global.dispatchEvent(new Event('resize'));\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-3\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div class=\"active\" slot=\"\">Tab 1</div>\n        <div slot=\"\">Tab 2</div>\n      </rwc-tabs>\n    `);\n  });\n\n  it('should validate the default tab', async () => {\n    let page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs defaultTab={ -1 }>\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-4\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div class=\"active\" slot=\"\">Tab 1</div>\n        <div slot=\"\">Tab 2</div>\n      </rwc-tabs>\n    `);\n\n    page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs defaultTab={ 2 }>\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-5\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div class=\"active\" slot=\"\">Tab 1</div>\n        <div slot=\"\">Tab 2</div>\n      </rwc-tabs>\n    `);\n  });\n\n  it('should handle the tab click', async () => {\n    const page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs>\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    (document.querySelector('rwc-tabs > div:not(.active)') as HTMLElement).click();\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-6\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\">Tab 1</div>\n        <div slot=\"\" class=\"active\">Tab 2</div>\n      </rwc-tabs>\n    `);\n  });\n\n  it('should handle the go to method with custom event as param', async () => {\n    const page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs>\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    const host: HTMLRwcTabsElement = document.querySelector('rwc-tabs');\n    host.addEventListener('click', () => {\n      const customEventInit: CustomEventInit = {\n        detail: {\n          next: 1\n        }\n      };\n      host.goTo(new CustomEvent('click', customEventInit));\n    });\n    host.click();\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-7\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\">Tab 1</div>\n        <div slot=\"\" class=\"active\">Tab 2</div>\n      </rwc-tabs>\n    `);\n  });\n\n  it('should animate the segments', async () => {\n    const page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs mode=\"segments\">\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    const host: HTMLRwcTabsElement = document.querySelector('rwc-tabs');\n    (host.shadowRoot.querySelector('slot') as HTMLSlotElement).dispatchEvent(new Event('slotchange'));\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-8\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesSegments.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\" class=\"active\">Tab 1</div>\n        <div slot=\"\">Tab 2</div>\n      </rwc-tabs>\n    `);\n  });\n\n  it('should handle the slot change', async () => {\n    const page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs mode=\"segments\">\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    (document.querySelector('rwc-tabs > div:not(.active)') as HTMLElement).remove();\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-9\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesSegments.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\" class=\"active\">Tab 1</div>\n      </rwc-tabs>\n    `);\n  });\n\n  it('should handle the drag move', async () => {\n    await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs mode=\"segments\">\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    const host: HTMLRwcTabsElement = document.querySelector('rwc-tabs');\n    const container: HTMLElement = host.shadowRoot.querySelector('.container');\n\n    // Test drag move\n    simulateMouseEvent(container, 'mousedown', 0, 0);\n    await new Promise<void>(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, DragMove.DRAG_STATE_DELAY)\n    });\n    simulateMouseEvent(document, 'mousemove', 10, 0, [container, document]);\n    simulateMouseEvent(document, 'mouseup', 10, 0, [container, document]);\n    await new Promise<void>(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, DragMove.DRAG_STATE_DELAY)\n    });\n\n    // Test mouse down without moving\n    simulateMouseEvent(container, 'mousedown', 0, 0);\n    await new Promise<void>(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, DragMove.DRAG_STATE_DELAY)\n    });\n    simulateMouseEvent(document, 'mousemove', 0, 0, [container, document]);\n    simulateMouseEvent(document, 'mouseup', 0, 0, [container, document]);\n    (document.querySelector('rwc-tabs > div:not(.active)') as HTMLElement).click();\n    await new Promise<void>(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, DragMove.DRAG_STATE_DELAY)\n    });\n  });\n\n  it('should automatically register goTo events', async () => {\n    const page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <Fragment>\n          <rwc-tabs rwcKey=\"rwc-tabs-auto\">\n            <div slot=\"\">Tab 1</div>\n            <div slot=\"\">Tab 2</div>\n          </rwc-tabs>\n          <div data-rwc-goTo=\"rwc-tabs-auto\"></div>\n        </Fragment>\n      ),\n    });\n    \n    const autoEventDispatcher = (document.querySelector('[data-rwc-goTo=\"rwc-tabs-auto\"]') as HTMLElement);\n    const customEventInit: CustomEventInit = {\n      detail: {\n        next: 1\n      }\n    };\n    autoEventDispatcher.dispatchEvent(new CustomEvent('indexChange', customEventInit));\n    await page.waitForChanges();\n    \n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-auto\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\">Tab 1</div>\n        <div slot=\"\" class=\"active\">Tab 2</div>\n      </rwc-tabs>\n    `);\n    \n    const host: HTMLRwcTabsElement = document.querySelector('rwc-tabs');\n    // Test ignoring of events originating from self\n    const customEventInitIgnore: CustomEventInit = {\n      detail: {\n        next: 0,\n        origin: host\n      }\n    };\n    autoEventDispatcher.dispatchEvent(new CustomEvent('indexChange', customEventInitIgnore));\n    await page.waitForChanges();\n    \n    expect(page.root).toEqualHtml(`\n      <rwc-tabs\n        rwc-key=\"rwc-tabs-auto\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"tabs-wrapper\">\n              <div class=\"tabs-container\">\n                <div class=\"tabs-inner-container\">\n                  <slot></slot>\n                </div>\n                <div class=\"indicator\" style=\"width: 0px; left: 0px;\"></div>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\">Tab 1</div>\n        <div slot=\"\" class=\"active\">Tab 2</div>\n      </rwc-tabs>\n    `);\n  });\n\n  it('should handle the disconnect callback', async () => {\n    const page = await newSpecPage({\n      components: [RwcTabs],\n      template: () => (\n        <rwc-tabs>\n          <div slot=\"\">Tab 1</div>\n          <div slot=\"\">Tab 2</div>\n        </rwc-tabs>\n      ),\n    });\n\n    document.querySelector('rwc-tabs').remove();\n    await page.waitForChanges();\n  });\n})\n"]}
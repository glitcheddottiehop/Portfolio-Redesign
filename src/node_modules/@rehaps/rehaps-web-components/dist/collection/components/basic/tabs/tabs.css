@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("assets/fonts/inter/Inter-Regular.woff2?v=1.0") format("woff2"), url("assets/fonts/inter/Inter-Regular.woff?v=1.0") format("woff");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("assets/fonts/inter/Inter-Medium.woff2?v=1.0") format("woff2"), url("assets/fonts/inter/Inter-Medium.woff?v=1.0") format("woff");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url("assets/fonts/inter/Inter-SemiBold.woff2?v=1.0") format("woff2"), url("assets/fonts/inter/Inter-SemiBold.woff?v=1.0") format("woff");
}
/* #region font-sizes */
/* #endregion */
:host {
  /**
   * @prop tabs-tab-text-color: The color of the text of the tab elements.
   * @prop tabs-tab-hover-text-color: The color of the text of the tab elements on hover state.
   * @prop tabs-tab-active-text-color: The color of the text of the tab elements on active state.
   * @prop tabs-tab-padding: THe padding of the tab elements.
   * @prop tabs-tab-border-bottom: The style of the bottom border of the tab elements by default.
   * @prop tabs-tab-hover-border-bottom-color: The style of the bottom border of the tab elements on hover state.
   * @prop tabs-tab-active-border-bottom-color: The style of the bottom border of the tab elements on active state.
   * @prop tabs-tab-transition: The transition of the tab elements on state change.

   * @prop tabs-segments-wrapper-background-color: The background color of the tabs wrapper in segment mode.
   * @prop tabs-segments-wrapper-padding: The padding of the tabs wrapper in segments mode.
   * @prop tabs-segments-wrapper-border-radius: The border radius of the segments wrapper in segments mode.

   * @prop tabs-segment-text-color: The color of the text of the tab elements in segments mode.
   * @prop tabs-segment-hover-text-color: The color of the text of the tab elements on hover state in segments mode.
   * @prop tabs-segment-active-text-color: The color of the text of the tab elements on active state in segments mode.
   * @prop tabs-segment-hover-background-color: The background color of the tab elemens on hover state in segments mode.
   * @prop tabs-segment-transition-background-color: The transition of the background color of the tab elements in segments mode.
   * @prop tabs-segment-transition-color: The transition of the text color of the tab elements in segments mode.

   * @prop tabs-segment-indicator-background-color: The background color of the active tab indicator in segments mode.
   * @prop tabs-segment-indicator-transition: The transition of the indicator styles in segments mode.

   * @prop tabs-indicator-border-radius: Tge border radius of the active tab indicator in segments mode.

   * @prop tabs-animation-duration: The duration of the animation of the component.

   * @prop display: The display mode of the host element.
   * @prop position: The position of the host element.
   */
  --tabs-tab-text-color: rgb(33, 33, 33);
  --tabs-tab-hover-text-color: rgb(33, 33, 33);
  --tabs-tab-active-text-color: rgb(33, 33, 33);
  --tabs-tab-padding: 0.25rem 0.5rem;
  --tabs-tab-border-bottom: 2px solid transparent;
  --tabs-tab-hover-border-bottom-color: rgb(224, 224, 224);
  --tabs-tab-active-border-bottom-color: #111;
  --tabs-tab-transition: border-bottom-color var(--tabs-animation-duration) linear, color var(--tabs-animation-duration) linear;
  --tabs-segments-wrapper-background-color: rgb(224, 224, 224);
  --tabs-segments-wrapper-padding: 0.25rem;
  --tabs-segments-wrapper-border-radius: 100vh;
  --tabs-segment-text-color: rgb(33, 33, 33);
  --tabs-segment-hover-text-color: rgb(33, 33, 33);
  --tabs-segment-active-text-color: #fff;
  --tabs-segment-hover-background-color: rgb(238, 238, 238);
  --tabs-segment-transition-background-color: background-color var(--tabs-animation-duration) linear;
  --tabs-segment-transition-color: color var(--tabs-animation-duration) linear var(--tabs-animation-duration);
  --tabs-segment-indicator-background-color: #111;
  --tabs-segment-indicator-transition: left var(--tabs-animation-duration) ease-in-out, width var(--tabs-animation-duration) ease-in-out;
  --tabs-indicator-border-radius: 100vh;
  --tabs-animation-duration: 200ms;
  display: block;
  position: relative;
}

.container {
  overflow-x: scroll;
  position: relative;
  /* Firefox */
  scrollbar-width: none;
  /* IE and Edge */
  -ms-overflow-style: none;
}
.container::-webkit-scrollbar {
  display: none;
}

.tabs-container {
  width: fit-content;
  position: relative;
}

.tabs-inner-container {
  display: flex;
  flex-direction: row;
  position: relative;
  width: fit-content;
  user-select: none;
  z-index: 1;
}

.indicator {
  bottom: 0;
  left: 0;
  position: absolute;
}

::slotted(*) {
  cursor: pointer;
  white-space: nowrap;
  padding: var(--tabs-tab-padding);
}

.mode-underline ::slotted(*) {
  border-bottom: var(--tabs-tab-border-bottom);
  color: var(--tabs-tab-text-color);
  transition: var(--tabs-tab-transition);
}
.mode-underline ::slotted(*:hover) {
  border-bottom-color: var(--tabs-tab-hover-border-bottom-color);
  color: var(--tabs-tab-hover-text-color);
}
.mode-underline ::slotted(.active) {
  border-bottom-color: var(--tabs-tab-active-border-bottom-color);
  color: var(--tabs-tab-active-text-color);
}

.mode-segments .tabs-wrapper {
  background-color: var(--tabs-segments-wrapper-background-color);
  padding: var(--tabs-segments-wrapper-padding);
  border-radius: var(--tabs-segments-wrapper-border-radius);
  width: fit-content;
}
.mode-segments .indicator {
  background-color: var(--tabs-segment-indicator-background-color);
  border-radius: var(--tabs-indicator-border-radius);
  bottom: unset;
  height: 100%;
  top: 0;
  transition: var(--tabs-segment-indicator-transition);
}
.mode-segments ::slotted(*) {
  border-radius: 100vh;
  color: var(--tabs-segment-text-color);
  transition: var(--tabs-segment-transition-background-color), var(--tabs-segment-transition-color);
}
.mode-segments ::slotted(*:hover) {
  color: var(--tabs-segment-hover-text-color);
}
.mode-segments ::slotted(*:hover:not(.active)) {
  background-color: var(--tabs-segment-hover-background-color);
}
.mode-segments ::slotted(.active) {
  color: var(--tabs-segment-active-text-color);
  transition: var(--tabs-segment-transition-color);
}
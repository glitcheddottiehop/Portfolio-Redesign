{"version":3,"file":"slides.spec.js","sourceRoot":"","sources":["../../../../../../src/components/basic/carousel/tests/slides.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Fragment, h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { simulateAssignedElements } from '../../../../../jest/polyfill/slot';\nimport { RwcSlides } from '../slides';\nimport { simulateMouseEvent } from '../../../../../jest/simulation/mouse';\nimport { RwcTabs } from '../../tabs/tabs';\n\nconst containerExpectedClassesDefault = ['container'];\n\ndescribe('rwc-slides', () => {\n  simulateAssignedElements();\n\n  it('should render the slides', async () => {\n    const page = await newSpecPage({\n      components: [RwcSlides],\n      template: () => (\n        <rwc-slides></rwc-slides>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-slides\n        rwc-key=\"rwc-slides-1\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"slide-wrapper\">\n              <div class=\"slide-flex\">\n                <slot></slot>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </rwc-slides>\n    `);\n  });\n\n  it('should handle the slot change', async () => {\n    const page = await newSpecPage({\n      components: [RwcSlides],\n      template: () => (\n        <rwc-slides>\n          <div slot=\"\">Slide 1</div>\n          <div slot=\"\" id=\"slide-2\">Slide 2</div>\n        </rwc-slides>\n      ),\n    });\n\n    const slideComponent = document.querySelector('rwc-slides');\n    document.querySelector('#slide-2').remove();\n    slideComponent.shadowRoot.querySelector('slot').dispatchEvent(new Event('slotchange'));\n\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <rwc-slides\n        rwc-key=\"rwc-slides-2\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"slide-wrapper\">\n              <div class=\"slide-flex\">\n                <slot></slot>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\" class=\"active\">Slide 1</div>\n      </rwc-slides>\n    `);\n  });\n\n  it('should handle the auto-slide', async () => {\n    const page = await newSpecPage({\n      components: [RwcSlides],\n      template: () => (\n        <rwc-slides\n          autoSlide={ true }\n          autoSlideDelay={ 50 }\n        >\n          <div slot=\"\">Slide 1</div>\n          <div slot=\"\">Slide 2</div>\n        </rwc-slides>\n      ),\n    });\n\n    const slidesComponent = document.querySelector('rwc-slides');\n\n    await new Promise<void>(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, 51)\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-slides\n        rwc-key=\"rwc-slides-3\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"slide-wrapper\">\n              <div class=\"slide-flex\">\n                <slot></slot>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\">Slide 1</div>\n        <div slot=\"\" class=\"active\">Slide 2</div>\n      </rwc-slides>\n    `);\n\n    // Test auto slide pause on mouse enter.\n    simulateMouseEvent(slidesComponent, 'mouseenter', 0, 0);\n\n    await new Promise<void>(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, 51)\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-slides\n        rwc-key=\"rwc-slides-3\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"slide-wrapper\">\n              <div class=\"slide-flex\">\n                <slot></slot>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\">Slide 1</div>\n        <div slot=\"\" class=\"active\">Slide 2</div>\n      </rwc-slides>\n    `);\n\n    // Test auto slide resume on mouse leave.\n    simulateMouseEvent(slidesComponent, 'mouseleave', 0, 0);\n\n    await new Promise<void>(resolve => {\n      setTimeout(() => {\n        resolve();\n      }, 51)\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-slides\n        rwc-key=\"rwc-slides-3\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"slide-wrapper\">\n              <div class=\"slide-flex\">\n                <slot></slot>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\" class=\"active\">Slide 1</div>\n        <div slot=\"\">Slide 2</div>\n      </rwc-slides>\n    `);\n\n    // Disable auto slide, so interval doesn't trigger after component deletion.\n    slidesComponent.autoSlide = false;\n  });\n\n  it('should auto register goTo events', async () => {\n    const page = await newSpecPage({\n      components: [RwcSlides, RwcTabs],\n      template: () => (\n        <Fragment>\n          <rwc-slides\n            rwcKey=\"rwc-slides-auto-goTo\"\n          >\n            <div slot=\"\">Slide 1</div>\n            <div slot=\"\">Slide 2</div>\n          </rwc-slides>\n          <rwc-tabs\n            rwcKey=\"rwc-tabs-1\"\n            data-rwc-goTo=\"rwc-slides-auto-goTo\"\n          >\n            <div slot=\"\">Tab 1</div>\n            <div slot=\"\" id=\"tab-2\">Tab 2</div>\n          </rwc-tabs>\n        </Fragment>\n      ),\n    });\n\n    (document.querySelector('#tab-2') as HTMLDivElement).click();\n    await page.waitForChanges();\n\n    // Does not render anything after the rwc-slides component. But accessible in document object.\n    expect(page.root).toEqualHtml(`\n      <rwc-slides\n        rwc-key=\"rwc-slides-auto-goTo\"\n      >\n        <mock:shadow-root>\n          <div class=\"${ containerExpectedClassesDefault.join(' ') }\">\n            <div class=\"slide-wrapper\">\n              <div class=\"slide-flex\">\n                <slot></slot>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div slot=\"\">Slide 1</div>\n        <div slot=\"\" class=\"active\">Slide 2</div>\n      </rwc-slides>\n    `);\n  });\n\n  it('should handle the disconnect callback', async () => {\n    const page = await newSpecPage({\n      components: [RwcSlides],\n      template: () => (\n        <rwc-slides>\n          <div slot=\"\">Slide 1</div>\n          <div slot=\"\">Slide 2</div>\n        </rwc-slides>\n      ),\n    });\n\n    document.querySelector('rwc-slides').remove();\n    await page.waitForChanges();\n  });\n});\n"]}
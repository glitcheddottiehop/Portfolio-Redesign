import { h, Host } from "@stencil/core";
import AccountIcon from "@material-design-icons/svg/outlined/account_circle.svg";
import LocationIcon from "@material-design-icons/svg/outlined/location_on.svg";
import StarIcon from "@material-design-icons/svg/outlined/star.svg";
export class RwcUserCard {
  constructor() {
    this.avatar = '';
    this.roundedAvatar = false;
    this.renderShadow = true;
    this.renderBorder = false;
    this.animateBorder = false;
    this.locationIcon = '';
    this.ratingIcon = '';
    this.pointer = false;
  }
  get hasLocation() {
    return Boolean(this.host.querySelector('[slot="location"]'));
  }
  get hasRating() {
    return Boolean(this.host.querySelector('[slot="rating"]'));
  }
  render() {
    return (h(Host, null, h("rwc-card", { class: "card", renderShadow: this.renderShadow, renderBorder: this.renderBorder, animateBorder: this.animateBorder, pointer: this.pointer }, h("div", { class: "container" }, h("div", { class: "header" }, h("slot", { name: "header" })), h("div", { class: "avatar" }, h("slot", { name: "avatar" }, this.renderIcon('avatar'))), h("div", { class: "name content-spacing" }, h("slot", { name: "name" })), h("div", { class: "heading content-spacing" }, h("slot", { name: "heading" })), this.renderLocation(), this.renderRating(), h("div", { class: "description" }, h("slot", { name: "description" }))))));
  }
  renderLocation() {
    if (this.hasLocation) {
      return (h("div", { class: "location-icon content-spacing" }, h("span", null, this.renderIcon('location')), h("span", null, h("slot", { name: "location" }))));
    }
  }
  renderRating() {
    if (this.hasRating) {
      return (h("div", { class: "rating-icon content-spacing" }, h("span", null, this.renderIcon('rating')), h("span", null, h("slot", { name: "rating" }))));
    }
  }
  renderIcon(icon) {
    switch (icon) {
      case 'location':
        if (this.locationIcon) {
          return (h("img", { src: this.locationIcon, alt: "location-icon" }));
        }
        return (h("div", { innerHTML: LocationIcon, class: "svg-icon" }));
      case 'rating':
        if (this.ratingIcon) {
          return (h("img", { src: this.ratingIcon, alt: "rating-icon" }));
        }
        return (h("div", { innerHTML: StarIcon, class: "svg-icon" }));
      default:
        if (this.avatar) {
          return (h("img", { src: this.avatar, alt: "avatar", class: { rounded: this.roundedAvatar } }));
        }
        return (h("div", { innerHTML: AccountIcon, class: "svg-icon" }));
    }
  }
  static get is() { return "rwc-user-card"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["user-card.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["user-card.css"]
    };
  }
  static get properties() {
    return {
      "avatar": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Path to the icon."
        },
        "attribute": "avatar",
        "reflect": true,
        "defaultValue": "''"
      },
      "roundedAvatar": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Set avatar rounded."
        },
        "attribute": "rounded-avatar",
        "reflect": false,
        "defaultValue": "false"
      },
      "renderShadow": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Set rendering of box-shadow."
        },
        "attribute": "render-shadow",
        "reflect": true,
        "defaultValue": "true"
      },
      "renderBorder": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Set rendering of border."
        },
        "attribute": "render-border",
        "reflect": true,
        "defaultValue": "false"
      },
      "animateBorder": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Animate border on hover."
        },
        "attribute": "animate-border",
        "reflect": true,
        "defaultValue": "false"
      },
      "locationIcon": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Path to the icon."
        },
        "attribute": "location-icon",
        "reflect": true,
        "defaultValue": "''"
      },
      "ratingIcon": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Path to the icon."
        },
        "attribute": "rating-icon",
        "reflect": true,
        "defaultValue": "''"
      },
      "pointer": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Change cursor to pointer on hover."
        },
        "attribute": "pointer",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get elementRef() { return "host"; }
}
//# sourceMappingURL=user-card.js.map

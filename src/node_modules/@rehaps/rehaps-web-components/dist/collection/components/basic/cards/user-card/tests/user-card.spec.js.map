{"version":3,"file":"user-card.spec.js","sourceRoot":"","sources":["../../../../../../../src/components/basic/cards/user-card/tests/user-card.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAE3C,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;EAC7B,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;IAC3C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;MACzB,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,qBACE,YAAY,EAAG,IAAI,EACnB,YAAY,EAAG,IAAI,EACnB,aAAa,EAAG,IAAI,EACpB,OAAO,EAAG,IAAI,gBAGA,CACjB;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAyC7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;IACrD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;MACzB,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,qBACE,YAAY,EAAG,IAAI,EACnB,YAAY,EAAG,IAAI,EACnB,aAAa,EAAG,IAAI,EACpB,OAAO,EAAG,IAAI;;QAGd,WAAK,IAAI,EAAC,UAAU,eAAe;QACnC,WAAK,IAAI,EAAC,QAAQ,uBAAuB,CAC3B,CACjB;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA2D7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;IAC9C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;MACzB,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,qBACE,YAAY,EAAG,IAAI,EACnB,YAAY,EAAG,IAAI,EACnB,aAAa,EAAG,IAAI,EACpB,OAAO,EAAG,IAAI,EACd,MAAM,EAAC,uBAAuB,EAC9B,YAAY,EAAC,2BAA2B,EACxC,UAAU,EAAC,yBAAyB;;QAGpC,WAAK,IAAI,EAAC,UAAU,eAAe;QACnC,WAAK,IAAI,EAAC,QAAQ,uBAAuB,CAC3B,CACjB;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA2D7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAA","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { RwcUserCard } from '../user-card';\n\ndescribe('rwc-user-card', () => {\n  it('should render the post card', async () => {\n    const page = await newSpecPage({\n      components: [RwcUserCard],\n      template: () => (\n        <rwc-user-card\n          renderShadow={ true }\n          renderBorder={ true }\n          animateBorder={ true }\n          pointer={ true }\n        >\n          Card Text\n        </rwc-user-card>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-user-card\n        render-shadow=\"\"\n        render-border=\"\"\n        animate-border=\"\"\n        avatar=\"\"\n        location-icon=\"\"\n        rating-icon=\"\"\n      >\n        <mock:shadow-root>\n          <rwc-card\n            rendershadow=\"\"\n            renderborder=\"\"\n            animateborder=\"\"\n            pointer=\"\"\n            class=\"card\"\n          >\n            <div class=\"container\">\n              <div class=\"header\">\n                <slot name=\"header\"></slot>\n              </div>\n              <div class=\"avatar\">\n                <slot name=\"avatar\">\n                  <div class=\"svg-icon\"></div>\n                </slot>\n              </div>\n              <div class=\"name content-spacing\">\n                <slot name=\"name\"></slot>\n              </div>\n              <div class=\"heading content-spacing\">\n                <slot name=\"heading\"></slot>\n              </div>\n              <div class=\"description\">\n                <slot name=\"description\">\n                </slot>\n              </div>\n            </div>\n          </rwc-card>\n        </mock:shadow-root>\n        Card Text\n      </rwc-user-card>\n    `);\n  });\n  \n  it('should render the location and rating', async () => {\n    const page = await newSpecPage({\n      components: [RwcUserCard],\n      template: () => (\n        <rwc-user-card\n          renderShadow={ true }\n          renderBorder={ true }\n          animateBorder={ true }\n          pointer={ true }\n        >\n          Card Text\n          <div slot=\"location\">Location</div>\n          <div slot=\"rating\">5/7 (69 ratings)</div>\n        </rwc-user-card>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-user-card\n        render-shadow=\"\"\n        render-border=\"\"\n        animate-border=\"\"\n        avatar=\"\"\n        location-icon=\"\"\n        rating-icon=\"\"\n      >\n        <mock:shadow-root>\n          <rwc-card\n            rendershadow=\"\"\n            renderborder=\"\"\n            animateborder=\"\"\n            pointer=\"\"\n            class=\"card\"\n          >\n            <div class=\"container\">\n              <div class=\"header\">\n                <slot name=\"header\"></slot>\n              </div>\n              <div class=\"avatar\">\n                <slot name=\"avatar\">\n                  <div class=\"svg-icon\"></div>\n                </slot>\n              </div>\n              <div class=\"name content-spacing\">\n                <slot name=\"name\"></slot>\n              </div>\n              <div class=\"heading content-spacing\">\n                <slot name=\"heading\"></slot>\n              </div>\n              <div class=\"location-icon content-spacing\">\n                <span>\n                  <div class=\"svg-icon\"></div>\n                </span>\n                <span>\n                  <slot name=\"location\"></slot>\n                </span>\n              </div>\n              <div class=\"rating-icon content-spacing\">\n                <span>\n                  <div class=\"svg-icon\"></div>\n                </span>\n                <span>\n                  <slot name=\"rating\"></slot>\n                </span>\n              </div>\n              <div class=\"description\">\n                <slot name=\"description\">\n                </slot>\n              </div>\n            </div>\n          </rwc-card>\n        </mock:shadow-root>\n        Card Text\n        <div slot=\"location\">Location</div>\n        <div slot=\"rating\">5/7 (69 ratings)</div>\n      </rwc-user-card>\n    `);\n  });\n  \n  it('should render the icons by url', async () => {\n    const page = await newSpecPage({\n      components: [RwcUserCard],\n      template: () => (\n        <rwc-user-card\n          renderShadow={ true }\n          renderBorder={ true }\n          animateBorder={ true }\n          pointer={ true }\n          avatar=\"https://test-icon.png\"\n          locationIcon=\"https://location-icon.png\"\n          ratingIcon=\"https://rating-icon.png\"\n        >\n          Card Text\n          <div slot=\"location\">Location</div>\n          <div slot=\"rating\">5/7 (69 ratings)</div>\n        </rwc-user-card>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-user-card\n        render-shadow=\"\"\n        render-border=\"\"\n        animate-border=\"\"\n        avatar=\"https://test-icon.png\"\n        location-icon=\"https://location-icon.png\"\n        rating-icon=\"https://rating-icon.png\"\n      >\n        <mock:shadow-root>\n          <rwc-card\n            rendershadow=\"\"\n            renderborder=\"\"\n            animateborder=\"\"\n            pointer=\"\"\n            class=\"card\"\n          >\n            <div class=\"container\">\n              <div class=\"header\">\n                <slot name=\"header\"></slot>\n              </div>\n              <div class=\"avatar\">\n                <slot name=\"avatar\">\n                <img src=\"https://test-icon.png\" alt=\"avatar\"></img>\n                </slot>\n              </div>\n              <div class=\"name content-spacing\">\n                <slot name=\"name\"></slot>\n              </div>\n              <div class=\"heading content-spacing\">\n                <slot name=\"heading\"></slot>\n              </div>\n              <div class=\"location-icon content-spacing\">\n                <span>\n                  <img src=\"https://location-icon.png\" alt=\"location-icon\"></img>\n                </span>\n                <span>\n                  <slot name=\"location\"></slot>\n                </span>\n              </div>\n              <div class=\"rating-icon content-spacing\">\n                <span>\n                  <img src=\"https://rating-icon.png\" alt=\"rating-icon\"></img>\n                </span>\n                <span>\n                  <slot name=\"rating\"></slot>\n                </span>\n              </div>\n              <div class=\"description\">\n                <slot name=\"description\">\n                </slot>\n              </div>\n            </div>\n          </rwc-card>\n        </mock:shadow-root>\n        Card Text\n        <div slot=\"location\">Location</div>\n        <div slot=\"rating\">5/7 (69 ratings)</div>\n      </rwc-user-card>\n    `);\n  });\n})\n"]}
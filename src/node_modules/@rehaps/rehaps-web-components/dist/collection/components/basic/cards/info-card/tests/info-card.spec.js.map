{"version":3,"file":"info-card.spec.js","sourceRoot":"","sources":["../../../../../../../src/components/basic/cards/info-card/tests/info-card.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;AAE3C,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;EAC7B,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;IAC3C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;MACzB,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,qBACE,YAAY,EAAG,IAAI,EACnB,YAAY,EAAG,IAAI,EACnB,aAAa,EAAG,IAAI,EACpB,OAAO,EAAG,IAAI,gBAGA,CACjB;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6B7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;IAC7C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;MACzB,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,qBACE,YAAY,EAAG,IAAI,EACnB,YAAY,EAAG,IAAI,EACnB,aAAa,EAAG,IAAI,EACpB,OAAO,EAAG,IAAI,EACd,IAAI,EAAC,uBAAuB,EAC5B,IAAI,EAAC,UAAU,gBAGD,CACjB;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6B7B,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAA","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { RwcInfoCard } from '../info-card';\n\ndescribe('rwc-info-card', () => {\n  it('should render the info card', async () => {\n    const page = await newSpecPage({\n      components: [RwcInfoCard],\n      template: () => (\n        <rwc-info-card\n          renderShadow={ true }\n          renderBorder={ true }\n          animateBorder={ true }\n          pointer={ true }\n        >\n          Card Text\n        </rwc-info-card>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-info-card\n        render-shadow=\"\"\n        render-border=\"\"\n        animate-border=\"\"\n        icon=\"\"\n      >\n        <mock:shadow-root>\n          <rwc-card\n            rendershadow=\"\"\n            renderborder=\"\"\n            animateborder=\"\"\n            pointer=\"\"\n            class=\"card\"\n          >\n            <div class=\"container mode-horizontal\">\n              <div class=\"icon\">\n                <slot name=\"icon\">\n                  <div class=\"svg-icon\"></div>\n                </slot>\n              </div>\n              <div class=\"text\">\n                <slot></slot>\n              </div>\n            </div>\n          </rwc-card>\n        </mock:shadow-root>\n        Card Text\n      </rwc-info-card>\n    `);\n  });\n  \n  it('should render the icon by url', async () => {\n    const page = await newSpecPage({\n      components: [RwcInfoCard],\n      template: () => (\n        <rwc-info-card\n          renderShadow={ true }\n          renderBorder={ true }\n          animateBorder={ true }\n          pointer={ true }\n          icon=\"https://test-icon.png\"\n          mode=\"vertical\"\n        >\n          Card Text\n        </rwc-info-card>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-info-card\n        render-shadow=\"\"\n        render-border=\"\"\n        animate-border=\"\"\n        icon=\"https://test-icon.png\"\n      >\n        <mock:shadow-root>\n          <rwc-card\n            rendershadow=\"\"\n            renderborder=\"\"\n            animateborder=\"\"\n            pointer=\"\"\n            class=\"card\"\n          >\n            <div class=\"container mode-vertical\">\n              <div class=\"icon\">\n                <slot name=\"icon\">\n                  <img src=\"https://test-icon.png\" alt=\"icon\"></img>\n                </slot>\n              </div>\n              <div class=\"text\">\n                <slot></slot>\n              </div>\n            </div>\n          </rwc-card>\n        </mock:shadow-root>\n        Card Text\n      </rwc-info-card>\n    `);\n  });\n})\n"]}
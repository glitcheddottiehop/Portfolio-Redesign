{"version":3,"file":"tag.js","sourceRoot":"","sources":["../../../../../src/components/basic/tag/tag.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAuB,KAAK,EAAgB,MAAM,eAAe,CAAC;AACnG,OAAO,KAAK,MAAM,4CAA4C,CAAC;AAC/D,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAOrD,MAAM,OAAO,MAAM;;gBAIM,EAAE;sBAKK,KAAK;oBAKP,KAAK;qBAKJ,KAAK;;EAUlC,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,WACE,KAAK,EAAG;UACN,SAAS,EAAE,IAAI;UACf,SAAS,EAAE,IAAI,CAAC,SAAS;UACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB;QAED,WAAK,KAAK,EAAC,MAAM;UACf,eAAa,CACT;QACJ,IAAI,CAAC,iBAAiB,EAAE,CACtB,CACD,CACR,CAAC;EACJ,CAAC;EAKO,SAAS;IACf,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;EAC7B,CAAC;EAKO,iBAAiB;IACvB,IAAI,IAAI,CAAC,UAAU,EAAE;MACnB,OAAO,CACL,WAAK,KAAK,EAAC,cAAc,EACvB,OAAO,EAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE;QAEhC,YAAM,IAAI,EAAC,MAAM,IACb,IAAI,CAAC,iBAAiB,EAAE,CACrB,CACH,CACP,CAAA;KACF;EACH,CAAC;EAKO,iBAAiB;IACvB,IAAI,IAAI,CAAC,IAAI,EAAE;MACb,OAAO,CACL,WAAK,KAAK,EAAC,MAAM,EAAC,GAAG,EAAG,IAAI,CAAC,IAAI,EAAG,GAAG,EAAG,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAS,CACzF,CAAA;KACF;IACD,OAAO,CACL,WAAK,SAAS,EAAG,KAAK,EAAG,KAAK,EAAC,eAAe,GAAO,CACtD,CAAA;EACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Prop, Host, FunctionalComponent, Event, EventEmitter } from '@stencil/core';\nimport Close from '@material-design-icons/svg/round/close.svg';\nimport { FileUtils } from '../../../utils/data/file';\n\n@Component({\n  tag: 'rwc-tag',\n  styleUrl: 'tag.scss',\n  shadow: true\n})\nexport class RwcTag {\n  /**\n   * Path to the icon.\n   */\n  @Prop() icon: string = '';\n\n  /**\n   * Render icon.\n   */\n  @Prop() renderIcon: boolean = false;\n\n  /**\n   * Set tag selected.\n   */\n  @Prop() selected: boolean = false;\n\n  /**\n   * Set tag to clickable.\n   */\n  @Prop() clickable: boolean = false;\n\n  /**\n   * Event fired when the delete icon is clicked.\n   */\n  @Event({ eventName: 'deleteTag ' }) deleteTagEvent: EventEmitter<void>;\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <div\n          class={ {\n            container: true,\n            clickable: this.clickable,\n            selected: this.selected\n          } }\n        >\n          <div class=\"text\">\n            <slot></slot>\n          </div>\n          { this.renderIconWrapper() }\n        </div>\n      </Host>\n    );\n  }\n\n  /**\n   * Fires the deleteTag event.\n   */\n  private deleteTag(): void {\n    this.deleteTagEvent.emit();\n  }\n\n  /**\n   * Renders the icon wrapper.\n   */\n  private renderIconWrapper(): FunctionalComponent {\n    if (this.renderIcon) {\n      return (\n        <div class=\"icon-wrapper\"\n          onClick={ () => this.deleteTag() }\n        >\n          <slot name=\"icon\">\n            { this.renderIconElement() }\n          </slot>\n        </div>\n      )\n    }\n  }\n\n  /**\n   * Renders the icon element.\n   */\n  private renderIconElement(): FunctionalComponent {\n    if (this.icon) {\n      return (\n        <img class=\"icon\" src={ this.icon } alt={ FileUtils.getCleanFileName(this.icon) }></img>\n      )\n    }\n    return (\n      <div innerHTML={ Close } class=\"icon svg-icon\"></div>\n    )\n  }\n}\n"]}
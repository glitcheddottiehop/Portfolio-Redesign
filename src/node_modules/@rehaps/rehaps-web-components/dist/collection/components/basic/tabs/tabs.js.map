{"version":3,"file":"tabs.js","sourceRoot":"","sources":["../../../../../src/components/basic/tabs/tabs.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Element, State, Prop, Event, EventEmitter, Method, FunctionalComponent, Listen, Host } from '@stencil/core';\nimport { IPaginable } from '../../../interfaces/actions/IPaginable';\nimport { TabsRenderMode } from '../../../interfaces/components/basic/tabs/tabs';\nimport { DragMove } from '../../../utils/actions/dragMove';\nimport { EventManager } from '../../../utils/actions/eventManager';\nimport { RWCActionHelper } from '../../../utils/actions/rwcActionHelper';\n\n@Component({\n  tag: 'rwc-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true\n})\nexport class RwcTabs implements IPaginable {\n  /**\n   * The class used for the currently active tab.\n   */\n  static ACTIVE_TAB_CLASS = 'active';\n\n  /**\n   * The reference to the host element.\n   */\n  @Element() host: HTMLRwcTabsElement;\n\n  /**\n   * The reference to the tabs wrapper element.\n   */\n  private tabsWrapper: HTMLDivElement;\n\n  /**\n   * Event manager used to manage component's event subscriptions.\n   */\n  public eventManager: EventManager = new EventManager();\n\n  /**\n   * Manages the events of the tab elements.\n   */\n  private tabEventManager: EventManager = new EventManager();\n\n  /**\n   * List of the actions available for the Tabs.\n   */\n  public actions: 'goTo'[] = ['goTo'];\n\n  /**\n   * The reference to the root element.\n   */\n  private root?: HTMLDivElement;\n\n  /**\n   * The reference to the element containing tabs.\n   */\n  private tabContainer?: HTMLSlotElement;\n\n  /**\n   * The reference to the tab elements.\n   */\n  private tabs?: HTMLElement[];\n\n  /**\n   * The reference to the indicator element.\n   */\n  private indicator?: HTMLDivElement;\n\n  /**\n   * Text animation coroutine interval object.\n   */\n  private textAnimationCoroutine: NodeJS.Timeout = null;\n\n  /**\n   * Utility object providing drag move functionality.\n   */\n  private dragMove: DragMove = null;\n\n  /**\n   * Key used for initializing event listeners.\n   */\n  @Prop({ reflect: true }) rwcKey = RWCActionHelper.getDefaultComponentKey('tabs');\n\n  /**\n   * Tab indicator render mode.\n   */\n  @Prop() mode: TabsRenderMode = 'underline';\n\n  /**\n   * Active tab on component load.\n   */\n  @Prop() defaultTab: number = 0;\n\n  /**\n   * Event fired when active tab change has been completed.\n   */\n  @Event({ eventName: 'indexChange' }) changeEvent: EventEmitter<GoToEventDetail>;\n\n  /**\n   * The currently active tab.\n   */\n  @State() activeTab: number = 0;\n  \n  /**\n   * Gets the currently active tab index in valid range.\n   */\n  private validateTargetIndex(value: number): number {\n    if (value > this.tabs.length - 1 || value < 0) {\n      return 0;\n    }\n    \n    return value;\n  }\n\n  /**\n   * Gets the left padding of the tabs wrapper element.\n   */\n  private get tabsWrapperPaddingLeft(): number {\n    return Number.parseFloat(getComputedStyle(this.tabsWrapper).paddingLeft ?? '0');\n  }\n\n  /**\n   * Keeps the active tab into the viewport.\n   */\n  @Listen('resize', { target: 'window' })\n  onWindowResize(): void {\n    this.resizeHandler();\n  }\n\n  /**\n   * Initialize default values.\n   */\n  componentWillLoad(): void {\n    this.activeTab = this.defaultTab > 0 ? this.defaultTab : 0;\n  }\n\n  /**\n   * Initializes event listeners on render.\n   */\n  componentDidLoad(): void {\n    this.init();\n  }\n\n  /**\n   * Destroy component's event listeners before component is destroyed.\n   */\n  disconnectedCallback(): void {\n    this.dragMove.destroy();\n    this.eventManager.clearEventListeners();\n  }\n\n  /**\n   * Initialize component.\n   */\n  init(): void {\n    this.initTabClickEvents();\n    this.initDefaultTab();\n    this.dragMove = new DragMove(this.root);\n    this.initGoToEventListeners();\n  }\n\n  /**\n   * Initialize default tab.\n   */\n  initDefaultTab(): void {\n    this.activeTab = this.validateTargetIndex(this.activeTab);\n    \n    if (this.tabs.length > 0) {\n      this.indicator.style.width = this.tabs[this.activeTab].getBoundingClientRect().width + 'px';\n      this.indicator.style.left = this.tabs[this.activeTab].offsetLeft - this.tabsWrapperPaddingLeft + 'px';\n      this.tabs[this.activeTab].classList.add('active');\n    }\n  }\n\n  /**\n   * Initialize click events for the tabs.\n   */\n  initTabClickEvents(): void {\n    this.tabEventManager.clearEventListeners();\n    this.tabs = this.tabContainer.assignedElements() as HTMLElement[];\n    this.tabs.forEach((element, index) => {\n      this.tabEventManager.registerEventListener(element, 'click', () => {\n        if (!this.dragMove.dragging) {\n          this.goTo(index);\n        }\n      });\n    });\n  }\n\n  /**\n   * Scroll active tab into viewport on resize.\n   */\n  resizeHandler: () => void = () => {\n    if (this.tabs?.length > 0) {\n      this.tabs[this.validateTargetIndex(this.activeTab)].scrollIntoView({ behavior: 'smooth', inline: 'center' });\n    }\n  }\n\n  /**\n   * Change active tab to provided index and start indicator animation.\n   */\n  @Method()\n  async goTo(targetIndex: number | CustomEvent): Promise<void> {\n    const parsedIndex: number = this.validateTargetIndex(targetIndex instanceof CustomEvent ? Number.parseInt(targetIndex.detail.next) : targetIndex);\n\n    if (this.activeTab !== targetIndex) {\n      this.tabs.forEach(tab => {\n        tab.classList.remove(RwcTabs.ACTIVE_TAB_CLASS);\n      });\n\n      this.tabs[parsedIndex].scrollIntoView({ behavior: 'smooth', inline: 'center' });\n      this.indicator.style.left = this.tabs[parsedIndex].offsetLeft - this.tabsWrapperPaddingLeft + 'px';\n      this.indicator.style.width = this.tabs[parsedIndex].getBoundingClientRect().width + 'px';\n      \n      const originalEvent = targetIndex instanceof CustomEvent ? targetIndex : null;\n      this.setActiveTab(parsedIndex, originalEvent);\n      this.cancelTextAnimation();\n    }\n  }\n\n  /**\n   * Set html and class properties for active tab and fire change event.\n   */\n  setActiveTab(index: number, originalEvent?: CustomEvent): void {\n    this.tabs[index].classList.add(RwcTabs.ACTIVE_TAB_CLASS);\n    this.changeEvent.emit(originalEvent?.detail ?? { origin: this.host, next: index, previous: this.activeTab });\n    this.activeTab = index;\n  }\n\n  /**\n   * Clear text animation coroutine interval.\n   */\n  cancelTextAnimation(): void {\n    clearInterval(this.textAnimationCoroutine);\n  }\n\n  /**\n   * Find elements by attribute name and component's key and add event listeners on click.\n   */\n  initGoToEventListeners(): void {\n    RWCActionHelper.bindRWCActions(this, this.host, this.actions, this.rwcKey, 'indexChange');\n  }\n\n  /**\n   * Renders the footer html if footer content is set.\n   */\n  private renderIndicator(): FunctionalComponent {\n    return (\n      <div\n        class=\"indicator\"\n        ref={ (element: HTMLDivElement) => this.indicator = element }>\n      </div>\n    );\n  }\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <div\n          class={ {\n            container: true,\n            [`mode-${ this.mode }`]: true\n          } }\n          ref={ (element: HTMLDivElement) => this.root = element }\n        >\n          <div\n            class=\"tabs-wrapper\"\n            ref={ (element: HTMLDivElement) => this.tabsWrapper = element }\n          >\n            <div class=\"tabs-container\">\n              <div class=\"tabs-inner-container\">\n                <slot\n                  ref={ (element: HTMLSlotElement) => this.tabContainer = element }\n                  onSlotchange={ () => this.initTabClickEvents() }\n                />\n              </div>\n              { this.renderIndicator() }\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}
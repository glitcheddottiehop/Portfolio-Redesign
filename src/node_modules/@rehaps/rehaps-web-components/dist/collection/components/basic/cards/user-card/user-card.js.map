{"version":3,"file":"user-card.js","sourceRoot":"","sources":["../../../../../../src/components/basic/cards/user-card/user-card.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, Host, FunctionalComponent, Element } from '@stencil/core';\nimport AccountIcon from '@material-design-icons/svg/outlined/account_circle.svg';\nimport LocationIcon from '@material-design-icons/svg/outlined/location_on.svg';\nimport StarIcon from '@material-design-icons/svg/outlined/star.svg';\nimport { UserCardIconType } from '../../../../interfaces/components/basic/cards/user-card/user-card';\n\n@Component({\n  tag: 'rwc-user-card',\n  styleUrl: 'user-card.scss',\n  shadow: true\n})\nexport class RwcUserCard {\n  /**\n   * The reference to the host element.\n   */\n  @Element() host: HTMLElement;\n\n  /**\n   * Path to the icon.\n   */\n  @Prop({ reflect: true }) avatar: string = '';\n\n  /**\n   * Set avatar rounded.\n   */\n  @Prop() roundedAvatar: boolean = false;\n\n  /**\n   * Set rendering of box-shadow.\n   */\n  @Prop({ reflect: true }) renderShadow: boolean = true;\n\n  /**\n   * Set rendering of border.\n   */\n  @Prop({ reflect: true }) renderBorder: boolean = false;\n\n  /**\n   * Animate border on hover.\n   */\n  @Prop({ reflect: true }) animateBorder: boolean = false;\n\n  /**\n   * Path to the icon.\n   */\n  @Prop({ reflect: true }) locationIcon: string = '';\n\n  /**\n   * Path to the icon.\n   */\n  @Prop({ reflect: true }) ratingIcon: string = '';\n\n  /**\n   * Change cursor to pointer on hover.\n   */\n  @Prop() pointer: boolean = false;\n\n  /**\n   * Check if slot location is rendered.\n   */\n  private get hasLocation(): boolean {\n    return Boolean(this.host.querySelector('[slot=\"location\"]'));\n  }\n\n  /**\n   * Check if slot rating is rendered.\n   */\n  private get hasRating(): boolean {\n    return Boolean(this.host.querySelector('[slot=\"rating\"]'));\n  }\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <rwc-card\n          class=\"card\"\n          renderShadow={ this.renderShadow }\n          renderBorder={ this.renderBorder }\n          animateBorder={ this.animateBorder }\n          pointer={ this.pointer }\n        >\n          <div class=\"container\">\n            <div class=\"header\">\n              <slot name=\"header\"></slot>\n            </div>\n            <div class=\"avatar\">\n              <slot name=\"avatar\">\n                { this.renderIcon('avatar') }\n              </slot>\n            </div>\n            <div class=\"name content-spacing\">\n              <slot name=\"name\"></slot>\n            </div>\n            <div class=\"heading content-spacing\">\n              <slot name=\"heading\"></slot>\n            </div>\n            { this.renderLocation() }\n            { this.renderRating() }\n            <div class=\"description\">\n              <slot name=\"description\">\n              </slot>\n            </div>\n          </div>\n        </rwc-card>\n      </Host>\n    );\n  }\n\n  /**\n   * Renders location element\n   */\n  renderLocation(): FunctionalComponent {\n    if (this.hasLocation) {\n      return (\n        <div class=\"location-icon content-spacing\">\n          <span>{ this.renderIcon('location') }</span>\n          <span>\n            <slot name=\"location\"></slot>\n          </span>\n        </div>\n      )\n    }\n  }\n\n  /**\n   * Renders rating element.\n   */\n  renderRating(): FunctionalComponent {\n    if (this.hasRating) {\n      return (\n        <div class=\"rating-icon content-spacing\">\n          <span>{ this.renderIcon('rating') }</span>\n          <span>\n            <slot name=\"rating\"></slot>\n          </span>\n        </div>\n      )\n    }\n  }\n\n  /**\n   * Renders the icon element.\n   */\n  renderIcon(icon: UserCardIconType): FunctionalComponent {\n    switch (icon) {\n      case 'location':\n        if (this.locationIcon) {\n          return (\n            <img src={ this.locationIcon } alt=\"location-icon\"></img>\n          )\n        }\n        return (\n          <div innerHTML={ LocationIcon } class=\"svg-icon\"></div>\n        );\n      case 'rating':\n        if (this.ratingIcon) {\n          return (\n            <img src={ this.ratingIcon } alt=\"rating-icon\"></img>\n          )\n        }\n        return (\n          <div innerHTML={ StarIcon } class=\"svg-icon\"></div>\n        )\n      default:\n        if (this.avatar) {\n          return (\n            <img src={ this.avatar } alt=\"avatar\" class={ { rounded: this.roundedAvatar } }></img>\n          )\n        }\n        return (\n          <div innerHTML={ AccountIcon } class=\"svg-icon\"></div>\n        )\n    }\n  }\n}\n"]}
import { h, Host } from "@stencil/core";
import Close from "@material-design-icons/svg/round/close.svg";
import { FileUtils } from "../../../utils/data/file";
export class RwcTag {
  constructor() {
    this.icon = '';
    this.renderIcon = false;
    this.selected = false;
    this.clickable = false;
  }
  render() {
    return (h(Host, null, h("div", { class: {
        container: true,
        clickable: this.clickable,
        selected: this.selected
      } }, h("div", { class: "text" }, h("slot", null)), this.renderIconWrapper())));
  }
  deleteTag() {
    this.deleteTagEvent.emit();
  }
  renderIconWrapper() {
    if (this.renderIcon) {
      return (h("div", { class: "icon-wrapper", onClick: () => this.deleteTag() }, h("slot", { name: "icon" }, this.renderIconElement())));
    }
  }
  renderIconElement() {
    if (this.icon) {
      return (h("img", { class: "icon", src: this.icon, alt: FileUtils.getCleanFileName(this.icon) }));
    }
    return (h("div", { innerHTML: Close, class: "icon svg-icon" }));
  }
  static get is() { return "rwc-tag"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["tag.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["tag.css"]
    };
  }
  static get properties() {
    return {
      "icon": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Path to the icon."
        },
        "attribute": "icon",
        "reflect": false,
        "defaultValue": "''"
      },
      "renderIcon": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Render icon."
        },
        "attribute": "render-icon",
        "reflect": false,
        "defaultValue": "false"
      },
      "selected": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Set tag selected."
        },
        "attribute": "selected",
        "reflect": false,
        "defaultValue": "false"
      },
      "clickable": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Set tag to clickable."
        },
        "attribute": "clickable",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get events() {
    return [{
        "method": "deleteTagEvent",
        "name": "deleteTag",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": "Event fired when the delete icon is clicked."
        },
        "complexType": {
          "original": "void",
          "resolved": "void",
          "references": {}
        }
      }];
  }
}
//# sourceMappingURL=tag.js.map

@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("assets/fonts/inter/Inter-Regular.woff2?v=1.0") format("woff2"), url("assets/fonts/inter/Inter-Regular.woff?v=1.0") format("woff");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("assets/fonts/inter/Inter-Medium.woff2?v=1.0") format("woff2"), url("assets/fonts/inter/Inter-Medium.woff?v=1.0") format("woff");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url("assets/fonts/inter/Inter-SemiBold.woff2?v=1.0") format("woff2"), url("assets/fonts/inter/Inter-SemiBold.woff?v=1.0") format("woff");
}
/* #region font-sizes */
/* #endregion */
:host {
  /**
   * @prop --rwc-input-background-color: The background color of the input element.
   * @prop --rwc-input-disabled-background-color: The background color of the input element when disabled.
   * @prop --rwc-input-container-border-color: The border color of the input container.
   * @prop --rwc-input-container-focused-border-color: The border color of the input container when focused.
   * @prop --rwc-input-container-error-border-color: The border color of the input container when component contains errors.
   * @prop --rwc-input-container-border: The border property of the input container.
   * @prop --rwc-input-container-focused-border: The border property of the input container when focused.
   * @prop --rwc-input-container-border-radius: The border radius of the input container.
   * @prop --rwc-input-container-box-shadow: The box shadow of the input container.
   * @prop --rwc-input-container-focus-box-shadow: The box shadow of the input container when focused.
   *
   * @prop --rwc-input-color: The color of the input field text.
   * @prop --rwc-input-placeholder-color: The color of the placeholder text.
   * @prop --rwc-input-font-size: The font size of the input field text.
   * 
   * @prop --rwc-input-padding: The padding inside the input container.
   * @prop --rwc-input-label-color: The color of the input field label.
   * @prop --rwc-input-label-font-size: The font size of the input field label.
   * @prop --rwc-input-label-padding: The padding of the input field label.
   * @prop --rwc-input-error-margin-top: The top margin of the error message text.
   * @prop --rwc-input-error-font-size: The font size of the error message text.
   * @prop --rwc-input-error-color: The color of the error message text.
   *
   * @prop display: The display style of the component.
   */
  --rwc-input-background-color: #fff;
  --rwc-input-disabled-background-color: rgb(224, 224, 224);
  --rwc-input-container-border-color: rgb(224, 224, 224);
  --rwc-input-container-focused-border-color: rgb(224, 224, 224);
  --rwc-input-container-error-border-color: rgb(255, 160, 122);
  --rwc-input-container-border: 1px solid
    var(--rwc-input-container-border-color);
  --rwc-input-container-focused-border: 1px solid
    var(--rwc-input-container-focused-border-color);
  --rwc-input-container-border-radius: 0.5rem;
  --rwc-input-container-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
  --rwc-input-container-focus-box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05),
    0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
  --rwc-input-color: rgb(33, 33, 33);
  --rwc-input-placeholder-color: rgb(66, 66, 66);
  --rwc-input-font-size: 1rem;
  --rwc-input-padding: 0.25rem 0.5rem;
  --rwc-input-label-color: rgb(97, 97, 97);
  --rwc-input-label-font-size: 0.875rem;
  --rwc-input-label-padding: 0 0 0.5rem 0;
  --rwc-input-label-font-weight: 600;
  --rwc-input-error-margin-top: 0.125rem;
  --rwc-input-error-font-size: 0.875rem;
  --rwc-input-error-color: rgb(139, 0, 0);
  display: block;
}

:host(.disabled) {
  --rwc-input-background-color: var(--rwc-input-disabled-background-color);
}

.input-container {
  background-color: var(--rwc-input-background-color);
  border: var(--rwc-input-container-border);
  border-radius: var(--rwc-input-container-border-radius);
  box-shadow: var(--rwc-input-container-box-shadow);
  cursor: text;
  display: flex;
  flex-direction: row;
  padding: var(--rwc-input-padding);
  padding-top: 0;
  padding-bottom: 0;
  transition: box-shadow ease-in-out 200ms, border-color ease-in-out 200ms;
}
.input-container.focused {
  border: var(--rwc-input-container-focused-border);
  --rwc-input-container-box-shadow: var(
    --rwc-input-container-focus-box-shadow
  );
}
.input-container.error {
  border-color: var(--rwc-input-container-error-border-color);
}

.label {
  color: var(--rwc-input-label-color);
  font-size: var(--rwc-input-label-font-size);
  font-weight: var(--rwc-input-label-font-weight);
  padding: var(--rwc-input-label-padding);
}

.slot-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.slot-horizontal-flex {
  display: flex;
  flex-direction: row;
}

.input {
  background-color: var(--rwc-input-background-color);
  border: none;
  box-sizing: border-box;
  color: var(--rwc-input-color);
  font-size: var(--rwc-input-font-size);
  padding: var(--rwc-input-padding);
  padding-left: 0;
  padding-right: 0;
  width: 100%;
  vertical-align: text-top;
}
.input::placeholder {
  color: var(--rwc-input-placeholder-color);
}
.input:focus, .input:focus-visible {
  border: none;
  outline: none;
}
.input.left-slot {
  padding-left: 0.25rem;
}
.input.right-slot {
  padding-right: 0.25rem;
}
.input:-webkit-autofill, .input:-webkit-autofill:hover, .input:-webkit-autofill:focus, .input:-webkit-autofill:active, .input:-internal-autofill-previewed, .input:-internal-autofill-selected {
  background-color: var(--rwc-input-background-color);
  -webkit-text-fill-color: var(--rwc-input-color);
  -webkit-background-clip: text;
}

.error-text {
  color: var(--rwc-input-error-color);
  margin: var(--rwc-input-error-margin-top) 0 0 0;
  font-size: var(--rwc-input-error-font-size);
}
import { h, Host } from "@stencil/core";
import InfoIcon from "@material-design-icons/svg/outlined/info.svg";
export class RwcInfoCard {
  constructor() {
    this.icon = '';
    this.renderShadow = true;
    this.renderBorder = false;
    this.animateBorder = false;
    this.pointer = false;
    this.mode = 'horizontal';
  }
  render() {
    return (h(Host, null, h("rwc-card", { class: "card", renderShadow: this.renderShadow, renderBorder: this.renderBorder, animateBorder: this.animateBorder, pointer: this.pointer }, h("div", { class: {
        container: true,
        [`mode-${this.mode}`]: true
      } }, h("div", { class: "icon" }, h("slot", { name: "icon" }, this.renderIcon())), h("div", { class: "text" }, h("slot", null))))));
  }
  renderIcon() {
    if (this.icon) {
      return (h("img", { src: this.icon, alt: "icon" }));
    }
    return (h("div", { innerHTML: InfoIcon, class: "svg-icon" }));
  }
  static get is() { return "rwc-info-card"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["info-card.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["info-card.css"]
    };
  }
  static get properties() {
    return {
      "icon": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Path to the icon."
        },
        "attribute": "icon",
        "reflect": true,
        "defaultValue": "''"
      },
      "renderShadow": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Set rendering of box-shadow."
        },
        "attribute": "render-shadow",
        "reflect": true,
        "defaultValue": "true"
      },
      "renderBorder": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Set rendering of border."
        },
        "attribute": "render-border",
        "reflect": true,
        "defaultValue": "false"
      },
      "animateBorder": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Animate border on hover."
        },
        "attribute": "animate-border",
        "reflect": true,
        "defaultValue": "false"
      },
      "pointer": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Change cursor to pointer on hover."
        },
        "attribute": "pointer",
        "reflect": false,
        "defaultValue": "false"
      },
      "mode": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "InfoCardLayoutMode",
          "resolved": "\"horizontal\" | \"vertical\"",
          "references": {
            "InfoCardLayoutMode": {
              "location": "import",
              "path": "../../../../interfaces/components/basic/cards/info-card/info-card",
              "id": "src/interfaces/components/basic/cards/info-card/info-card.ts::InfoCardLayoutMode"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The layout mode of the info card."
        },
        "attribute": "mode",
        "reflect": false,
        "defaultValue": "'horizontal'"
      }
    };
  }
}
//# sourceMappingURL=info-card.js.map

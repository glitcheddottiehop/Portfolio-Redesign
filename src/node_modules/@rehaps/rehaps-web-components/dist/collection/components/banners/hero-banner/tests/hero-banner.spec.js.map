{"version":3,"file":"hero-banner.spec.js","sourceRoot":"","sources":["../../../../../../src/components/banners/hero-banner/tests/hero-banner.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAE/C,MAAM,+BAA+B,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAErE,MAAM,uCAAuC,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;AAEvF,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;EAC/B,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;IAC7C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;MAC3B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,0BAAmC,CACpC;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;qBAOZ,+BAA+B,CAAC,IAAI,CAAC,GAAG,CAAE;;;;;;;;;;;KAW3D,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;IAC1C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;MAC3B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,uBACE,cAAc,EAAG,IAAI,EACrB,2BAA2B,EAAG,GAAG,GAChB,CACpB;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;qBAOZ,+BAA+B,CAAC,IAAI,CAAC,GAAG,CAAE;;;;;;;;;;;;KAY3D,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;IAClD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;MAC3B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,uBACE,cAAc,EAAG,IAAI,EACrB,2BAA2B,EAAG,GAAG,GAChB,CACpB;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;IACxB,MAAM,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1C,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAE5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;qBAQZ,+BAA+B,CAAC,IAAI,CAAC,GAAG,CAAE;;;;;;;;;;;;KAY3D,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;IAC9C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;MAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;MAC3B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,uBACE,eAAe,EAAG,IAAI,GACL,CACpB;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;qBAOZ,uCAAuC,CAAC,IAAI,CAAC,GAAG,CAAE;;;;;;;;;KASnE,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAA","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { RwcHeroBanner } from '../hero-banner';\n\nconst containerExpectedClassesDefault = ['container', 'auto-height'];\n\nconst containerExpectedClassesCustomStructure = ['container', 'auto-height', 'custom'];\n\ndescribe('rwc-hero-banner', () => {\n  it('should render the hero-banner', async () => {\n    const page = await newSpecPage({\n      components: [RwcHeroBanner],\n      template: () => (\n        <rwc-hero-banner></rwc-hero-banner>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-hero-banner\n        src=\"/assets/images/banners/Banner_example.jpg\"\n        auto-height=\"\"\n      >\n        <mock:shadow-root>\n          <div\n            class=\"${ containerExpectedClassesDefault.join(' ') }\"\n            style=\"background-image: url(/assets/images/banners/Banner_example.jpg); background-position-x: 50%; background-position-y: 50%;\"\n          >\n            <div class=\"grid\">\n              <div class=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </rwc-hero-banner>\n    `);\n  });\n\n  it('should render the gradient', async () => {\n    const page = await newSpecPage({\n      components: [RwcHeroBanner],\n      template: () => (\n        <rwc-hero-banner\n          renderGradient={ true }\n          gradientDirectionBreakpoint={ 768 }\n        ></rwc-hero-banner>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-hero-banner\n        src=\"/assets/images/banners/Banner_example.jpg\"\n        auto-height=\"\"\n      >\n        <mock:shadow-root>\n          <div\n            class=\"${ containerExpectedClassesDefault.join(' ') }\"\n            style=\"background-image: url(/assets/images/banners/Banner_example.jpg); background-position-x: 50%; background-position-y: 50%;\"\n          >\n            <div class=\"gradient\"></div>\n            <div class=\"grid\">\n              <div class=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </rwc-hero-banner>\n    `);\n  });\n\n  it('should update the layout on resize', async () => {\n    const page = await newSpecPage({\n      components: [RwcHeroBanner],\n      template: () => (\n        <rwc-hero-banner\n          renderGradient={ true }\n          gradientDirectionBreakpoint={ 768 }\n        ></rwc-hero-banner>\n      ),\n    });\n\n    global.innerWidth = 500;\n    global.dispatchEvent(new Event('resize'));\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <rwc-hero-banner\n        class=\"vertical\"\n        src=\"/assets/images/banners/Banner_example.jpg\"\n        auto-height=\"\"\n      >\n        <mock:shadow-root>\n          <div\n            class=\"${ containerExpectedClassesDefault.join(' ') }\"\n            style=\"background-image: url(/assets/images/banners/Banner_example.jpg); background-position-x: 50%; background-position-y: 50%;\"\n          >\n            <div class=\"gradient\"></div>\n            <div class=\"grid\">\n              <div class=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </rwc-hero-banner>\n    `);\n  });\n\n  it('should render custom structure', async () => {\n    const page = await newSpecPage({\n      components: [RwcHeroBanner],\n      template: () => (\n        <rwc-hero-banner\n          customStructure={ true }\n        ></rwc-hero-banner>\n      ),\n    });\n\n    expect(page.root).toEqualHtml(`\n      <rwc-hero-banner\n        src=\"/assets/images/banners/Banner_example.jpg\"\n        auto-height=\"\"\n      >\n        <mock:shadow-root>\n          <div\n            class=\"${ containerExpectedClassesCustomStructure.join(' ') }\"\n            style=\"background-image: url(/assets/images/banners/Banner_example.jpg); background-position-x: 50%; background-position-y: 50%;\"\n          >\n            <div class=\"content\">\n              <slot />\n            </div>\n          </div>\n        </mock:shadow-root>\n      </rwc-hero-banner>\n    `);\n  });\n})\n"]}
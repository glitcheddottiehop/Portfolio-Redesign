import { Fragment, getAssetPath, h, Host } from "@stencil/core";
export class RwcHeroBanner {
  constructor() {
    this.src = getAssetPath('assets/images/banners/Banner_example.jpg');
    this.horizontalCenter = 50;
    this.verticalCenter = 50;
    this.renderGradient = false;
    this.gradientDirectionBreakpoint = 0;
    this.autoHeight = true;
    this.customStructure = false;
    this.vertical = false;
  }
  get hostWidth() {
    let hostWidth = this.host.offsetWidth;
    if (typeof hostWidth !== "number") {
      hostWidth = window.innerWidth;
    }
    return hostWidth;
  }
  componentDidLoad() {
    this.updateGradientMode();
  }
  onWindowResize() {
    this.updateGradientMode();
  }
  updateGradientMode() {
    if (this.gradientDirectionBreakpoint > 0) {
      this.vertical = (this.hostWidth >= this.gradientDirectionBreakpoint ? false : true);
    }
  }
  render() {
    return (h(Host, { class: {
        vertical: this.vertical
      } }, h("div", { class: {
        container: true,
        'custom': this.customStructure,
        'auto-height': this.autoHeight
      }, style: {
        'background-image': `url(${this.src})`,
        'background-position-x': `${this.horizontalCenter}%`,
        'background-position-y': `${this.verticalCenter}%`
      } }, this.renderGradientElement(), this.renderContent(this.customStructure))));
  }
  renderGradientElement() {
    if (this.renderGradient) {
      return (h("div", { class: "gradient" }));
    }
    return h(Fragment, null);
  }
  renderContent(customStructure) {
    if (customStructure) {
      return (h("div", { class: "content" }, h("slot", null)));
    }
    return (h("div", { class: "grid" }, h("div", { class: "content" }, h("slot", null))));
  }
  static get is() { return "rwc-hero-banner"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["./hero-banner.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["hero-banner.css"]
    };
  }
  static get assetsDirs() { return ["../../assets/images/banners"]; }
  static get properties() {
    return {
      "src": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The path to the image asset to render."
        },
        "attribute": "src",
        "reflect": true,
        "defaultValue": "getAssetPath('assets/images/banners/Banner_example.jpg')"
      },
      "horizontalCenter": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The horizontal position of the center of the image in percentage.\\\n0 - left edge, 100 - right edge, 50 - center (default)"
        },
        "attribute": "horizontal-center",
        "reflect": false,
        "defaultValue": "50"
      },
      "verticalCenter": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "The vertical position of the center of the image in percentage.\\\n0 - top edge, 100 - bottom edge, 50 - center (default)"
        },
        "attribute": "vertical-center",
        "reflect": false,
        "defaultValue": "50"
      },
      "renderGradient": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Enables the rendering of the gradient."
        },
        "attribute": "render-gradient",
        "reflect": false,
        "defaultValue": "false"
      },
      "gradientDirectionBreakpoint": {
        "type": "number",
        "mutable": false,
        "complexType": {
          "original": "number",
          "resolved": "number",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Sets the breakpoint in pixels where vertical gradient stops and horizontal starts."
        },
        "attribute": "gradient-direction-breakpoint",
        "reflect": false,
        "defaultValue": "0"
      },
      "autoHeight": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Sets the height automatically based on window inner width."
        },
        "attribute": "auto-height",
        "reflect": true,
        "defaultValue": "true"
      },
      "customStructure": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Removes the default content HTML structure."
        },
        "attribute": "custom-structure",
        "reflect": false,
        "defaultValue": "false"
      }
    };
  }
  static get states() {
    return {
      "vertical": {}
    };
  }
  static get elementRef() { return "host"; }
  static get listeners() {
    return [{
        "name": "resize",
        "method": "onWindowResize",
        "target": "window",
        "capture": false,
        "passive": true
      }];
  }
}
//# sourceMappingURL=hero-banner.js.map

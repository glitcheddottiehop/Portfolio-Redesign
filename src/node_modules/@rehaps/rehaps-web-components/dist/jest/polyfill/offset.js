import { MockElement } from "@stencil/core/mock-doc";
export function simulateAllOffsets() {
  simulateOffsets();
  simulateScrollOffsets();
  simulateOffsetSizes();
}
export function simulateOffsets() {
  Object.defineProperties(MockElement.prototype, {
    offsetLeft: {
      get: function () { return parseFloat(getComputedStyle(this).marginLeft) || 0; },
      configurable: true
    },
  });
}
export function simulateOffsetSizes(defaultValue = 0) {
  Object.defineProperties(MockElement.prototype, {
    offsetWidth: {
      get: function () { return parseFloat(getComputedStyle(this).width) || defaultValue; },
      configurable: true
    },
    offsetHeight: {
      get: function () { return parseFloat(getComputedStyle(this).height) || defaultValue; },
      configurable: true
    },
    scrollHeight: {
      get: function () { return parseFloat(getComputedStyle(this).height) || defaultValue; },
      configurable: true
    }
  });
}
export function simulateScrollOffsets() {
  Object.defineProperties(MockElement.prototype, {
    scrollLeft: {
      get: function () { var _a; return (_a = this._scrollLeft) !== null && _a !== void 0 ? _a : 0; },
      set: function (value) {
        this._scrollLeft = value;
      },
      configurable: true
    },
    scrollTop: {
      get: function () { var _a; return (_a = this._scrollTop) !== null && _a !== void 0 ? _a : 0; },
      set: function (value) {
        this._scrollTop = value;
      },
      configurable: true
    }
  });
}
//# sourceMappingURL=offset.js.map

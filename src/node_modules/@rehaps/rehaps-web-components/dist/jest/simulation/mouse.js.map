{"version":3,"file":"mouse.js","sourceRoot":"","sources":["../../../jest/simulation/mouse.ts"],"names":[],"mappings":"AAQA,MAAM,UAAU,kBAAkB,CAAC,OAA2B,EAAE,SAAyB,EAAE,CAAS,EAAE,CAAS,EAAE,eAAuC,IAAI;EAC1J,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,SAAS,EAAE;IACtC,MAAM,EAAE,MAAM;IACd,SAAS,EAAE,IAAI;IACf,YAAY,EAAE,IAAI;IAClB,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE,CAAC;GACb,CAAC,CAAC;EACF,KAAa,CAAC,YAAY,GAAG;IAC5B,OAAO,YAAY,IAAI,CAAC,OAAO,CAAC,CAAC;EACnC,CAAC,CAAA;EAED,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["/**\n * The types of the mouse events supported by the simulator.\n */\ntype MouseEventType = 'mousemove' | 'mousedown' | 'mouseup' | 'mouseenter' | 'mouseleave' | 'click';\n\n/**\n * Simulates the mouse event of given name in the given coordinates.\n */\nexport function simulateMouseEvent(element: Element | Document, eventName: MouseEventType, x: number, y: number, composedPath: (Element | Document)[] = null) {\n  const event = new MouseEvent(eventName, {\n    'view': window,\n    'bubbles': true,\n    'cancelable': true,\n    'clientX': x,\n    'clientY': y,\n    'screenX': x,\n    'screenY': y,\n  });\n  (event as any).composedPath = function() {\n    return composedPath || [element];\n  }\n  \n  element.dispatchEvent(event);\n}\n"]}
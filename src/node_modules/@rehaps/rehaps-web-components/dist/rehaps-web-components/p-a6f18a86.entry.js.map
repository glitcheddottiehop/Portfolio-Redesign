{"version":3,"names":["containerCss","Container","this","initialized","onAnimationDurationChange","newValue","setAnimationDuration","componentWillLoad","animationDuration","componentDidLoad","initIntersectionObserver","intersectionObserver","IntersectionObserver","entries","handleIntersection","threshold","visibilityThreshold","observe","host","isIntersecting","isVisible","scrollOutAnimation","removeIntersectionObserver","scrollIntoAnimation","hasScrollIntoAnimation","hasScrollOutAnimation","disconnect","duration","style","setProperty","render","h","Host","class","wrapper","visible","animateOpacity"],"sources":["src/components/layout/container/container.scss?tag=rwc-container&encapsulation=shadow","src/components/layout/container/container.tsx"],"sourcesContent":["@import 'global.scss';\n\n:host {\n  display: block;\n\n  --_animation-duration: 300ms;\n}\n\n.animate-opacity {\n  opacity: 0;\n}\n\n.wrapper {\n  overflow: hidden;\n  position: relative;\n  transition: opacity var(--_animation-duration);\n\n  &.visible {\n    opacity: 1;\n\n    .container {\n      left: 0;\n      top: 0;\n    }\n  }\n}\n\n.container {\n  position: relative;\n  animation-duration: var(--_animation-duration);\n}\n\n.scroll-in-slide {\n  &-left {\n    .container {\n      left: -100%;\n    }\n  }\n\n  &-right {\n    .container {\n      left: 100%;\n    }\n  }\n\n  &-top {\n    .container {\n      top: -100%;\n    }\n  }\n\n  &-bottom {\n    .container {\n      top: 100%;\n    }\n  }\n}\n\n.visible {\n  &.scroll-in-slide {\n    &-left {\n      .container {\n        animation-name: slide-in-left;\n      }\n    }\n\n    &-right {\n      .container {\n        animation-name: slide-in-right;\n      }\n    }\n\n    &-top {\n      .container {\n        animation-name: slide-in-top;\n      }\n    }\n\n    &-bottom {\n      .container {\n        animation-name: slide-in-bottom;\n      }\n    }\n  }\n}\n\n.scroll-out-slide {\n  &-left {\n    .container {\n      animation-name: slide-out-left;\n    }\n  }\n\n  &-right {\n    .container {\n      animation-name: slide-out-right;\n    }\n  }\n\n  &-top {\n    .container {\n      animation-name: slide-out-top;\n    }\n  }\n\n  &-bottom {\n    .container {\n      animation-name: slide-out-bottom;\n    }\n  }\n}\n\n@keyframes slide-in-left {\n  0% {\n    left: -100%;\n    top: 0;\n  }\n\n  100% {\n    left: 0;\n    top: 0;\n  }\n}\n\n@keyframes slide-in-right {\n  0% {\n    left: 100%;\n    top: 0;\n  }\n\n  100% {\n    left: 0;\n    top: 0;\n  }\n}\n\n@keyframes slide-in-top {\n  0% {\n    top: -100%;\n    left: 0;\n  }\n\n  100% {\n    top: 0;\n    left: 0;\n  }\n}\n\n@keyframes slide-in-bottom {\n  0% {\n    top: 100%;\n    left: 0;\n  }\n\n  100% {\n    top: 0;\n    left: 0;\n  }\n}\n\n@keyframes slide-out-left {\n  0% {\n    left: 0;\n    top: 0;\n  }\n  100% {\n    left: -100%;\n    top: 0;\n  }\n}\n\n@keyframes slide-out-right {\n  0% {\n    left: 0;\n    top: 0;\n  }\n  100% {\n    left: 100%;\n    top: 0;\n  }\n}\n\n@keyframes slide-out-top {\n  0% {\n    top: 0;\n    left: 0;\n  }\n  100% {\n    top: -100%;\n    left: 0;\n  }\n}\n\n@keyframes slide-out-bottom {\n  0% {\n    top: 0;\n    left: 0;\n  }\n  100% {\n    bottom: 100%;\n    left: 0;\n  }\n}\n","import { Component, Prop, h, Element, Host, FunctionalComponent, State, Watch } from '@stencil/core';\nimport { ContainerAnimation } from '../../../interfaces/components/layout/container/types';\n\n@Component({\n  tag: 'rwc-container',\n  styleUrl: 'container.scss',\n  shadow: true\n})\nexport class Container {\n  /**\n   * Reference to the host element\n   */\n  @Element() host: HTMLElement;\n\n  /**\n   * The intersection observer of the component\n   */\n  private intersectionObserver: IntersectionObserver;\n  \n  /**\n   * Has the component been completely initialized\n   */\n  private initialized: boolean = false;\n\n  /**\n   * The animation to play when the container is scrolled into viewport\n   */\n  @Prop() scrollIntoAnimation: ContainerAnimation;\n\n  /**\n   * The animation to play when the container is scrolled out of viewport\n   */\n  @Prop() scrollOutAnimation: ContainerAnimation;\n\n  /**\n   * Enable the opacity animation for the scroll animation\n   */\n  @Prop() animateOpacity: boolean = true;\n\n  /**\n   * The duration of the animation in milliseconds\n   */\n  @Prop({ reflect: true }) animationDuration: number = 300;\n  \n  /**\n   * The intersection threshold for the animation to trigger \\\n   * What percentage of the element must be in the viewport to trigger the animation\n   */\n  @Prop() visibilityThreshold: number = 0;\n\n  /**\n   * Handle the animation duration change \\\n   * Sync the animation duration with the css animations\n   */\n  @Watch('animationDuration')\n  onAnimationDurationChange(newValue: number): void {\n    this.setAnimationDuration(newValue);\n  }\n\n  /**\n   * Is the host element currently inside the viewport\n   */\n  @State() isVisible: boolean = false;\n\n  /**\n   * Called when the component is to be loaded for the first time\n   */\n  componentWillLoad(): void {\n    this.setAnimationDuration(this.animationDuration);\n  }\n\n  /**\n   * Called when the component finishes loading for the first time\n   */\n  componentDidLoad(): void {\n    this.initIntersectionObserver();\n  }\n\n  /**\n   * Initialize the intersection observer \\\n   * Detects if the host element's height percentage defined by visibilityThreshold is inside the viewport. \n   */\n  private initIntersectionObserver(): void {\n    this.intersectionObserver = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]) => this.handleIntersection(entries),\n      { threshold: this.visibilityThreshold }\n    );\n    this.intersectionObserver.observe(this.host);\n  }\n\n  /**\n   * Handle the intersection state change\n   */\n  private handleIntersection(entries: IntersectionObserverEntry[]): void {\n    if (entries[0].isIntersecting) {\n      this.isVisible = true;\n      // If no scroll out animation defined, remove the observer\n      if (this.scrollOutAnimation === 'none' || !this.scrollOutAnimation) {\n        this.removeIntersectionObserver();\n      }\n    } else {\n      this.isVisible = false;\n      // If no scroll into animation defined, remove the observer\n      if (this.scrollIntoAnimation === 'none' || !this.scrollIntoAnimation) {\n        this.removeIntersectionObserver();\n      }\n    }\n  }\n\n  /**\n   * Remove the intersection observer from the component\n   */\n  private removeIntersectionObserver(): void {\n    if (this.initialized && this.intersectionObserver || (!this.hasScrollIntoAnimation && !this.hasScrollOutAnimation && this.isVisible)) {\n      this.intersectionObserver.disconnect();\n      this.intersectionObserver = null;\n    }\n    this.initialized = true;\n  }\n\n  /**\n   * Set the animation duration on the host's root element to sync with the css\n   */\n  private setAnimationDuration(duration: number): void {\n    this.host.style.setProperty('--_animation-duration', `${ duration }ms`);\n  }\n  \n  /**\n   * Does the component has the scroll into animation set\n   */\n  private get hasScrollIntoAnimation(): boolean {\n    return this.scrollIntoAnimation && this.scrollIntoAnimation !== 'none'; \n  }\n  \n  /**\n   * Does the component has the scroll out animation set\n   */\n  private get hasScrollOutAnimation(): boolean {\n    return this.scrollOutAnimation && this.scrollOutAnimation !== 'none';\n  }\n\n  /**\n   * Render the component\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <div\n          class={ {\n            wrapper: true,\n            visible: this.isVisible,\n            'animate-opacity': this.animateOpacity,\n            [`scroll-in-${ this.scrollIntoAnimation }`]: true,\n            [`scroll-out-${ this.scrollOutAnimation }`]: true,\n          } }\n        >\n          <div class=\"container\">\n            <slot />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"yDAAA,MAAMA,EAAe,qqE,MCQRC,EAAS,M,yBAcZC,KAAAC,YAAuB,M,yFAeG,K,uBAKmB,I,yBAMf,E,eAcR,K,CAP9B,yBAAAC,CAA0BC,GACxBH,KAAKI,qBAAqBD,E,CAW5B,iBAAAE,GACEL,KAAKI,qBAAqBJ,KAAKM,kB,CAMjC,gBAAAC,GACEP,KAAKQ,0B,CAOC,wBAAAA,GACNR,KAAKS,qBAAuB,IAAIC,sBAC7BC,GAAyCX,KAAKY,mBAAmBD,IAClE,CAAEE,UAAWb,KAAKc,sBAEpBd,KAAKS,qBAAqBM,QAAQf,KAAKgB,K,CAMjC,kBAAAJ,CAAmBD,GACzB,GAAIA,EAAQ,GAAGM,eAAgB,CAC7BjB,KAAKkB,UAAY,KAEjB,GAAIlB,KAAKmB,qBAAuB,SAAWnB,KAAKmB,mBAAoB,CAClEnB,KAAKoB,4B,MAEF,CACLpB,KAAKkB,UAAY,MAEjB,GAAIlB,KAAKqB,sBAAwB,SAAWrB,KAAKqB,oBAAqB,CACpErB,KAAKoB,4B,GAQH,0BAAAA,GACN,GAAIpB,KAAKC,aAAeD,KAAKS,uBAA0BT,KAAKsB,yBAA2BtB,KAAKuB,uBAAyBvB,KAAKkB,UAAY,CACpIlB,KAAKS,qBAAqBe,aAC1BxB,KAAKS,qBAAuB,I,CAE9BT,KAAKC,YAAc,I,CAMb,oBAAAG,CAAqBqB,GAC3BzB,KAAKgB,KAAKU,MAAMC,YAAY,wBAAyB,GAAIF,M,CAM3D,0BAAYH,GACV,OAAOtB,KAAKqB,qBAAuBrB,KAAKqB,sBAAwB,M,CAMlE,yBAAYE,GACV,OAAOvB,KAAKmB,oBAAsBnB,KAAKmB,qBAAuB,M,CAMhE,MAAAS,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OACEE,MAAQ,CACNC,QAAS,KACTC,QAASjC,KAAKkB,UACd,kBAAmBlB,KAAKkC,eACxB,CAAC,aAAclC,KAAKqB,uBAAyB,KAC7C,CAAC,cAAerB,KAAKmB,sBAAwB,OAG/CU,EAAA,OAAKE,MAAM,aACTF,EAAA,e"}
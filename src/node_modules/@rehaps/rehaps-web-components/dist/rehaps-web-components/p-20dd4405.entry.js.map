{"version":3,"names":["DragState","constructor","dragging","moving","this","ScrollPosition","left","top","x","y","DragMove","state","element","position","initialCursorStyle","dragTimeout","mouseDownHandler","event","composedPath","includes","startDrag","scrollLeft","scrollTop","clientX","clientY","document","addEventListener","mouseMoveHandler","mouseUpHandler","dx","dy","removeEventListener","style","cursor","stopDrag","init","destroy","setTimeout","DRAG_STATE_DELAY","clearTimeout","tabsCss","RwcTabs","eventManager","EventManager","tabEventManager","actions","textAnimationCoroutine","dragMove","resizeHandler","_a","tabs","length","validateTargetIndex","activeTab","scrollIntoView","behavior","inline","RWCActionHelper","getDefaultComponentKey","value","tabsWrapperPaddingLeft","Number","parseFloat","getComputedStyle","tabsWrapper","paddingLeft","onWindowResize","componentWillLoad","defaultTab","componentDidLoad","disconnectedCallback","clearEventListeners","initTabClickEvents","initDefaultTab","root","initGoToEventListeners","indicator","width","getBoundingClientRect","offsetLeft","classList","add","tabContainer","assignedElements","forEach","index","registerEventListener","goTo","targetIndex","parsedIndex","CustomEvent","parseInt","detail","next","tab","remove","ACTIVE_TAB_CLASS","originalEvent","setActiveTab","cancelTextAnimation","changeEvent","emit","origin","host","previous","clearInterval","bindRWCActions","rwcKey","renderIndicator","h","class","ref","render","Host","container","mode","onSlotchange"],"sources":["src/interfaces/data/dragState.ts","src/interfaces/data/scrollPosition.ts","src/utils/actions/dragMove.ts","src/components/basic/tabs/tabs.scss?tag=rwc-tabs&encapsulation=shadow","src/components/basic/tabs/tabs.tsx"],"sourcesContent":["export class DragState {\n    public dragging: boolean;\n    public moving: boolean;\n    \n    constructor(dragging: boolean = false, moving: boolean = false) {\n        this.dragging = dragging;\n        this.moving = moving;\n    }\n}\n","export class ScrollPosition {\n    public left: number;\n    public top: number;\n    public x: number;\n    public y: number;\n    \n    constructor(left: number = 0, top: number = 0, x: number = 0, y: number = 0) {\n        this.left = left;\n        this.top = top;\n        this.x = x;\n        this.y = y;\n    }\n}\n","import { DragState } from './../../interfaces/data/dragState';\nimport { ScrollPosition } from './../../interfaces/data/scrollPosition';\nexport class DragMove {\n  static DRAG_STATE_DELAY: number = 200;\n\n  private position: ScrollPosition = new ScrollPosition();\n  private state = new DragState();\n  private element: HTMLElement | null = null;\n  private initialCursorStyle: string = '';\n  private dragTimeout: NodeJS.Timeout | null = null;\n\n  public get dragging() {\n    return this.state.dragging && this.state.moving;\n  }\n\n  constructor(element: HTMLElement) {\n    this.init(element);\n  }\n\n  /**\n   * Initialize drag move for the given element\n   */\n  init(element: HTMLElement): void {\n    this.element = element;\n    this.initialCursorStyle = element.style.cursor || '';\n    this.element.addEventListener('mousedown', this.mouseDownHandler);\n  }\n\n  /**\n   * Start drag move for the given element if cursor is inside the element\n   */\n  mouseDownHandler = (event: MouseEvent) => {\n    if (event.composedPath().includes(this.element)) {\n      this.startDrag();\n      this.position = {\n        left: this.element.scrollLeft,\n        top: this.element.scrollTop,\n        x: event.clientX,\n        y: event.clientY\n      };\n\n      document.addEventListener('mousemove', this.mouseMoveHandler);\n      document.addEventListener('mouseup', this.mouseUpHandler);\n    }\n  }\n\n  /**\n   * Handle mouse movement if mouse down was triggered inside the element\n   */\n  mouseMoveHandler = (event: MouseEvent) => {\n    // How far the mouse has been moved\n    const dx = event.clientX - this.position.x;\n    const dy = event.clientY - this.position.y;\n\n    if (dx !== 0 || dy !== 0) {\n      this.state.moving = true;\n    }\n\n    // Scroll the element\n    this.element.scrollTop = this.position.top - dy;\n    this.element.scrollLeft = this.position.left - dx;\n  }\n\n  /**\n   * Stop drag move and unregister mouse move / up listeners\n   */\n  mouseUpHandler = () => {\n    document.removeEventListener('mousemove', this.mouseMoveHandler);\n    document.removeEventListener('mouseup', this.mouseUpHandler);\n\n    this.element.style.cursor = this.initialCursorStyle;\n\n    this.stopDrag();\n  }\n\n  /**\n   * Remove drag move event listener from element\n   */\n  destroy(): void {\n    this.element.removeEventListener('mouseDown', this.mouseDownHandler);\n  }\n\n  /**\n   * Start new drag timeout for state update\n   */\n  startDrag(): void {\n    this.stopDrag();\n    this.dragTimeout = setTimeout(() => {\n      this.state.dragging = true;\n    }, DragMove.DRAG_STATE_DELAY);\n  }\n\n  /**\n   * Set drag move state to false and remove drag state timeout if set\n   */\n  stopDrag(): void {\n    if (this.dragTimeout !== null) {\n      clearTimeout(this.dragTimeout);\n      this.dragTimeout = null;\n    }\n\n    // Delay dragging state change so instant click event is not triggered on mouse up\n    if (this.state.dragging || this.state.moving) {\n      setTimeout(() => {\n        this.state.dragging = false;\n        this.state.moving = false;\n      }, 1);\n    }\n  }\n}\n","@import 'global.scss';\n\n:host {\n  /**\n   * @prop tabs-tab-text-color: The color of the text of the tab elements.\n   * @prop tabs-tab-hover-text-color: The color of the text of the tab elements on hover state.\n   * @prop tabs-tab-active-text-color: The color of the text of the tab elements on active state.\n   * @prop tabs-tab-padding: THe padding of the tab elements.\n   * @prop tabs-tab-border-bottom: The style of the bottom border of the tab elements by default.\n   * @prop tabs-tab-hover-border-bottom-color: The style of the bottom border of the tab elements on hover state.\n   * @prop tabs-tab-active-border-bottom-color: The style of the bottom border of the tab elements on active state.\n   * @prop tabs-tab-transition: The transition of the tab elements on state change.\n\n   * @prop tabs-segments-wrapper-background-color: The background color of the tabs wrapper in segment mode.\n   * @prop tabs-segments-wrapper-padding: The padding of the tabs wrapper in segments mode.\n   * @prop tabs-segments-wrapper-border-radius: The border radius of the segments wrapper in segments mode.\n\n   * @prop tabs-segment-text-color: The color of the text of the tab elements in segments mode.\n   * @prop tabs-segment-hover-text-color: The color of the text of the tab elements on hover state in segments mode.\n   * @prop tabs-segment-active-text-color: The color of the text of the tab elements on active state in segments mode.\n   * @prop tabs-segment-hover-background-color: The background color of the tab elemens on hover state in segments mode.\n   * @prop tabs-segment-transition-background-color: The transition of the background color of the tab elements in segments mode.\n   * @prop tabs-segment-transition-color: The transition of the text color of the tab elements in segments mode.\n\n   * @prop tabs-segment-indicator-background-color: The background color of the active tab indicator in segments mode.\n   * @prop tabs-segment-indicator-transition: The transition of the indicator styles in segments mode.\n\n   * @prop tabs-indicator-border-radius: Tge border radius of the active tab indicator in segments mode.\n\n   * @prop tabs-animation-duration: The duration of the animation of the component.\n\n   * @prop display: The display mode of the host element.\n   * @prop position: The position of the host element.\n   */\n  --tabs-tab-text-color: #{$rwc-color-text-primary};\n  --tabs-tab-hover-text-color: #{$rwc-color-text-primary};\n  --tabs-tab-active-text-color: #{$rwc-color-text-primary};\n  --tabs-tab-padding: #{$rwc-spacing--2xs} #{$rwc-spacing--xs};\n  --tabs-tab-border-bottom: 2px solid transparent;\n  --tabs-tab-hover-border-bottom-color: #{$rwc-color-border-primary};\n  --tabs-tab-active-border-bottom-color: #{$rwc-color-foundation-black};\n  --tabs-tab-transition: border-bottom-color var(--tabs-animation-duration) linear, color var(--tabs-animation-duration) linear;\n\n  --tabs-segments-wrapper-background-color: #{$rwc-color-grey-300};\n  --tabs-segments-wrapper-padding: #{$rwc-spacing--2xs};\n  --tabs-segments-wrapper-border-radius: 100vh;\n\n  --tabs-segment-text-color: #{$rwc-color-text-primary};\n  --tabs-segment-hover-text-color: #{$rwc-color-text-primary};\n  --tabs-segment-active-text-color: #{$rwc-color-foundation-white};\n  --tabs-segment-hover-background-color: #{$rwc-color-grey-200};\n  --tabs-segment-transition-background-color: background-color var(--tabs-animation-duration) linear;\n  --tabs-segment-transition-color: color var(--tabs-animation-duration) linear var(--tabs-animation-duration);\n\n  --tabs-segment-indicator-background-color: #{$rwc-color-foundation-black};\n  --tabs-segment-indicator-transition: left var(--tabs-animation-duration) ease-in-out, width var(--tabs-animation-duration) ease-in-out;\n\n  --tabs-indicator-border-radius: 100vh;\n\n  --tabs-animation-duration: 200ms;\n\n  display: block;\n  position: relative;\n}\n\n.container {\n  overflow-x: scroll;\n  position: relative;\n  /* Firefox */\n  scrollbar-width: none;\n  /* IE and Edge */\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n}\n\n.tabs-container {\n  width: fit-content;\n  position: relative;\n}\n\n.tabs-inner-container {\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  width: fit-content;\n  user-select: none;\n  z-index: 1;\n}\n\n.indicator {\n  bottom: 0;\n  left: 0;\n  position: absolute;\n}\n\n::slotted(*) {\n  cursor: pointer;\n  white-space: nowrap;\n  padding: var(--tabs-tab-padding);\n}\n\n.mode-underline {\n  ::slotted(*) {\n    border-bottom: var(--tabs-tab-border-bottom);\n    color: var(--tabs-tab-text-color);\n    transition: var(--tabs-tab-transition);\n  }\n\n  ::slotted(*:hover) {\n    border-bottom-color: var(--tabs-tab-hover-border-bottom-color);\n    color: var(--tabs-tab-hover-text-color);\n  }\n\n  ::slotted(.active) {\n    border-bottom-color: var(--tabs-tab-active-border-bottom-color);\n    color: var(--tabs-tab-active-text-color);\n  }\n}\n\n.mode-segments {\n  .tabs-wrapper {\n    background-color: var(--tabs-segments-wrapper-background-color);\n    padding: var(--tabs-segments-wrapper-padding);\n    border-radius: var(--tabs-segments-wrapper-border-radius);\n    width: fit-content;\n  }\n\n  .indicator {\n    background-color: var(--tabs-segment-indicator-background-color);\n    border-radius: var(--tabs-indicator-border-radius);\n    bottom: unset;\n    height: 100%;\n    top: 0;\n    transition: var(--tabs-segment-indicator-transition);\n  }\n\n  ::slotted(*) {\n    border-radius: 100vh;\n    color: var(--tabs-segment-text-color);\n    transition: var(--tabs-segment-transition-background-color), var(--tabs-segment-transition-color);\n  }\n\n  ::slotted(*:hover) {\n    color: var(--tabs-segment-hover-text-color);\n  }\n\n  ::slotted(*:hover:not(.active)) {\n    background-color: var(--tabs-segment-hover-background-color);\n  }\n\n  ::slotted(.active) {\n    color: var(--tabs-segment-active-text-color);\n    transition: var(--tabs-segment-transition-color);\n  }\n}\n","import { Component, h, Element, State, Prop, Event, EventEmitter, Method, FunctionalComponent, Listen, Host } from '@stencil/core';\nimport { IPaginable } from '../../../interfaces/actions/IPaginable';\nimport { TabsRenderMode } from '../../../interfaces/components/basic/tabs/tabs';\nimport { DragMove } from '../../../utils/actions/dragMove';\nimport { EventManager } from '../../../utils/actions/eventManager';\nimport { RWCActionHelper } from '../../../utils/actions/rwcActionHelper';\n\n@Component({\n  tag: 'rwc-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true\n})\nexport class RwcTabs implements IPaginable {\n  /**\n   * The class used for the currently active tab.\n   */\n  static ACTIVE_TAB_CLASS = 'active';\n\n  /**\n   * The reference to the host element.\n   */\n  @Element() host: HTMLRwcTabsElement;\n\n  /**\n   * The reference to the tabs wrapper element.\n   */\n  private tabsWrapper: HTMLDivElement;\n\n  /**\n   * Event manager used to manage component's event subscriptions.\n   */\n  public eventManager: EventManager = new EventManager();\n\n  /**\n   * Manages the events of the tab elements.\n   */\n  private tabEventManager: EventManager = new EventManager();\n\n  /**\n   * List of the actions available for the Tabs.\n   */\n  public actions: 'goTo'[] = ['goTo'];\n\n  /**\n   * The reference to the root element.\n   */\n  private root?: HTMLDivElement;\n\n  /**\n   * The reference to the element containing tabs.\n   */\n  private tabContainer?: HTMLSlotElement;\n\n  /**\n   * The reference to the tab elements.\n   */\n  private tabs?: HTMLElement[];\n\n  /**\n   * The reference to the indicator element.\n   */\n  private indicator?: HTMLDivElement;\n\n  /**\n   * Text animation coroutine interval object.\n   */\n  private textAnimationCoroutine: NodeJS.Timeout = null;\n\n  /**\n   * Utility object providing drag move functionality.\n   */\n  private dragMove: DragMove = null;\n\n  /**\n   * Key used for initializing event listeners.\n   */\n  @Prop({ reflect: true }) rwcKey = RWCActionHelper.getDefaultComponentKey('tabs');\n\n  /**\n   * Tab indicator render mode.\n   */\n  @Prop() mode: TabsRenderMode = 'underline';\n\n  /**\n   * Active tab on component load.\n   */\n  @Prop() defaultTab: number = 0;\n\n  /**\n   * Event fired when active tab change has been completed.\n   */\n  @Event({ eventName: 'indexChange' }) changeEvent: EventEmitter<GoToEventDetail>;\n\n  /**\n   * The currently active tab.\n   */\n  @State() activeTab: number = 0;\n  \n  /**\n   * Gets the currently active tab index in valid range.\n   */\n  private validateTargetIndex(value: number): number {\n    if (value > this.tabs.length - 1 || value < 0) {\n      return 0;\n    }\n    \n    return value;\n  }\n\n  /**\n   * Gets the left padding of the tabs wrapper element.\n   */\n  private get tabsWrapperPaddingLeft(): number {\n    return Number.parseFloat(getComputedStyle(this.tabsWrapper).paddingLeft ?? '0');\n  }\n\n  /**\n   * Keeps the active tab into the viewport.\n   */\n  @Listen('resize', { target: 'window' })\n  onWindowResize(): void {\n    this.resizeHandler();\n  }\n\n  /**\n   * Initialize default values.\n   */\n  componentWillLoad(): void {\n    this.activeTab = this.defaultTab > 0 ? this.defaultTab : 0;\n  }\n\n  /**\n   * Initializes event listeners on render.\n   */\n  componentDidLoad(): void {\n    this.init();\n  }\n\n  /**\n   * Destroy component's event listeners before component is destroyed.\n   */\n  disconnectedCallback(): void {\n    this.dragMove.destroy();\n    this.eventManager.clearEventListeners();\n  }\n\n  /**\n   * Initialize component.\n   */\n  init(): void {\n    this.initTabClickEvents();\n    this.initDefaultTab();\n    this.dragMove = new DragMove(this.root);\n    this.initGoToEventListeners();\n  }\n\n  /**\n   * Initialize default tab.\n   */\n  initDefaultTab(): void {\n    this.activeTab = this.validateTargetIndex(this.activeTab);\n    \n    if (this.tabs.length > 0) {\n      this.indicator.style.width = this.tabs[this.activeTab].getBoundingClientRect().width + 'px';\n      this.indicator.style.left = this.tabs[this.activeTab].offsetLeft - this.tabsWrapperPaddingLeft + 'px';\n      this.tabs[this.activeTab].classList.add('active');\n    }\n  }\n\n  /**\n   * Initialize click events for the tabs.\n   */\n  initTabClickEvents(): void {\n    this.tabEventManager.clearEventListeners();\n    this.tabs = this.tabContainer.assignedElements() as HTMLElement[];\n    this.tabs.forEach((element, index) => {\n      this.tabEventManager.registerEventListener(element, 'click', () => {\n        if (!this.dragMove.dragging) {\n          this.goTo(index);\n        }\n      });\n    });\n  }\n\n  /**\n   * Scroll active tab into viewport on resize.\n   */\n  resizeHandler: () => void = () => {\n    if (this.tabs?.length > 0) {\n      this.tabs[this.validateTargetIndex(this.activeTab)].scrollIntoView({ behavior: 'smooth', inline: 'center' });\n    }\n  }\n\n  /**\n   * Change active tab to provided index and start indicator animation.\n   */\n  @Method()\n  async goTo(targetIndex: number | CustomEvent): Promise<void> {\n    const parsedIndex: number = this.validateTargetIndex(targetIndex instanceof CustomEvent ? Number.parseInt(targetIndex.detail.next) : targetIndex);\n\n    if (this.activeTab !== targetIndex) {\n      this.tabs.forEach(tab => {\n        tab.classList.remove(RwcTabs.ACTIVE_TAB_CLASS);\n      });\n\n      this.tabs[parsedIndex].scrollIntoView({ behavior: 'smooth', inline: 'center' });\n      this.indicator.style.left = this.tabs[parsedIndex].offsetLeft - this.tabsWrapperPaddingLeft + 'px';\n      this.indicator.style.width = this.tabs[parsedIndex].getBoundingClientRect().width + 'px';\n      \n      const originalEvent = targetIndex instanceof CustomEvent ? targetIndex : null;\n      this.setActiveTab(parsedIndex, originalEvent);\n      this.cancelTextAnimation();\n    }\n  }\n\n  /**\n   * Set html and class properties for active tab and fire change event.\n   */\n  setActiveTab(index: number, originalEvent?: CustomEvent): void {\n    this.tabs[index].classList.add(RwcTabs.ACTIVE_TAB_CLASS);\n    this.changeEvent.emit(originalEvent?.detail ?? { origin: this.host, next: index, previous: this.activeTab });\n    this.activeTab = index;\n  }\n\n  /**\n   * Clear text animation coroutine interval.\n   */\n  cancelTextAnimation(): void {\n    clearInterval(this.textAnimationCoroutine);\n  }\n\n  /**\n   * Find elements by attribute name and component's key and add event listeners on click.\n   */\n  initGoToEventListeners(): void {\n    RWCActionHelper.bindRWCActions(this, this.host, this.actions, this.rwcKey, 'indexChange');\n  }\n\n  /**\n   * Renders the footer html if footer content is set.\n   */\n  private renderIndicator(): FunctionalComponent {\n    return (\n      <div\n        class=\"indicator\"\n        ref={ (element: HTMLDivElement) => this.indicator = element }>\n      </div>\n    );\n  }\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <div\n          class={ {\n            container: true,\n            [`mode-${ this.mode }`]: true\n          } }\n          ref={ (element: HTMLDivElement) => this.root = element }\n        >\n          <div\n            class=\"tabs-wrapper\"\n            ref={ (element: HTMLDivElement) => this.tabsWrapper = element }\n          >\n            <div class=\"tabs-container\">\n              <div class=\"tabs-inner-container\">\n                <slot\n                  ref={ (element: HTMLSlotElement) => this.tabContainer = element }\n                  onSlotchange={ () => this.initTabClickEvents() }\n                />\n              </div>\n              { this.renderIndicator() }\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}
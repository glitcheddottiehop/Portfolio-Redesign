{"version":3,"names":["userCardCss","RwcUserCard","hasLocation","Boolean","this","host","querySelector","hasRating","render","h","Host","class","renderShadow","renderBorder","animateBorder","pointer","name","renderIcon","renderLocation","renderRating","icon","locationIcon","src","alt","innerHTML","LocationIcon","ratingIcon","StarIcon","avatar","rounded","roundedAvatar","AccountIcon"],"sources":["src/components/basic/cards/user-card/user-card.scss?tag=rwc-user-card&encapsulation=shadow","src/components/basic/cards/user-card/user-card.tsx"],"sourcesContent":["@import 'global.scss';\n\n:host {\n  /**\n  * @prop --user-card-border-width: The border width of the user card.\n  * @prop --user-card-border-style: The style of the border of the user card.\n  * @prop --user-card-border-color: The color of the border of the user card.\n  * @prop --user-card-hover-border-color: The color of the border of the card on hover.\n  * @prop --user-card-border-radius: The border radius of the user card.\n  * @prop --user-card-border-transition: The transition of the border of the user card.\n  * @prop --user-card-box-shadow: The shadow of the user card.\n  * @prop --user-card-box-shadow-animated-hover: The animation of the box shadow of the user card on hover.\n  * @prop --user-card-container-transition: The transition of the container of the user card.\n  * @prop --user-card-inner-padding: The inner padding of the user card.\n  * @prop --user-card-icon-size: The size of the icon of the user card.\n  * @prop --user-card-icon-color: The color of the icon of the user card.\n  * @prop --user-card-content-spacing: The spacing between contents of the user card.\n  * @prop --user-card-icon-sm-size: The size of the small icon of the user card.\n  * @prop --user-card-icon-sm-color: The color of the small icon of the user card.\n  * @prop --user-card-font-size-header: The size of the small font of the user card.\n  * @prop --user-card-font-size-name: The size of the medium font of the user card.\n  * @prop --user-card-font-size-heading: The size of the large font of the user card.\n  * @prop --user-card-font-weight-bold: The weight of the font of the user card.\n  * @prop --user-card-font-weight-extra-bold: The weight of the font of the user card.\n  * @prop --user-card-icon-sm-margin-right: The right margin of the small icon of the user card.\n  * @prop display: The display mode of the host element.\n  */\n  --user-card-border-width: 2px;\n  --user-card-border-style: solid;\n  --user-card-border-color: #{$rwc-color-border-primary};\n  --user-card-hover-border-color: #{$rwc-color-border-active};\n  --user-card-border-radius: #{$rwc-spacing--sm};\n  --user-card-border-transition: \n    border-bottom-color 0.4s, \n    border-left-color 0.4s, \n    border-right-color 0.4s, \n    border-top-color 0.4s, \n    width 0.4s ease-in-out, \n    height 0.4s ease-in-out;\n  --user-card-box-shadow: #{$rwc-box-shadow-lg};\n  --user-card-box-shadow-animated-hover: #{$rwc-box-shadow-xl};\n  --user-card-container-transition: box-shadow 0.4s ease-in-out;\n\n  --user-card-content-spacing: #{$rwc-spacing--xs};\n  --user-card-description-margin-top: #{$rwc-spacing--md};\n\n  --user-card-font-size-header: #{$rwc-font-size-heading-sm};\n  --user-card-font-size-name: #{$rwc-font-size-body-lg};\n  --user-card-font-size-heading: #{$rwc-font-size-heading-md};\n  --user-card-font-weight-bold: 500;\n  --user-card-font-weight-extra-bold: 600;\n\n  --user-card-inner-padding: #{$rwc-spacing--md};\n\n  --user-card-icon-size: 5.625rem;\n  --user-card-icon-sm-size: 1.406rem;\n  --user-card-icon-color: #{$rwc-color-grey-600};\n  --user-card-icon-sm-color: #{$rwc-color-grey-900};\n  --user-card-icon-sm-margin-right: #{$rwc-spacing--2xs};\n\n  display: block;\n}\n\n.card {\n  --card-border-width: var(--user-card-border-width);\n  --card-border-style: var(--user-card-border-style);\n  --card-border-color: var(--user-card-border-color);\n  --card-hover-border-color: var(--user-card-hover-border-color);\n  --card-border-radius: var(--user-card-border-radius);\n  --card-border-transition: var(--user-card-border-transition);\n  --card-box-shadow-animated-hover: var(--user-card-box-shadow-animated-hover);\n  --card-container-transition: var(--user-card-container-transition);\n  --card-inner-padding: var(--user-card-inner-padding);\n  --card-box-shadow: var(--user-card-box-shadow);\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n}\n\n.header {\n  display: flex;\n  justify-content: flex-end;\n  font-size: var(--user-card-font-size-header);\n  font-weight: var(--user-card-font-weight-extra-bold);\n}\n\n.name {\n  font-size: var(--user-card-font-size-name);\n}\n\n.heading {\n  font-size: var(--user-card-font-size-heading);\n  font-weight: var(--user-card-font-weight-bold);\n}\n\n.description {\n  font-size: #{$rwc-font-size-body-sm};\n  margin-top: var(--user-card-description-margin-top);\n}\n\n.content-spacing {\n  margin-top: var(--user-card-content-spacing);\n}\n\n.avatar {\n  align-self: center;\n  flex-shrink: 0;\n  height: var(--user-card-icon-size);\n  width: var(--user-card-icon-size);\n\n  svg {\n    height: 100%;\n    width: 100%;\n  }\n\n  path {\n    fill: var(--user-card-icon-color);\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  img.rounded {\n    border-radius: 50%;\n  }\n}\n\n.location-icon, .rating-icon  {\n  display: flex;\n  justify-content: center;\n\n  svg {\n    height: 100%;\n    width: 100%;\n  }\n\n  .svg-icon {\n    margin-right: var(--user-card-icon-sm-margin-right);\n  }\n\n  path {\n    fill: var(--user-card-icon-sm-color);\n  }\n\n  img {\n    width: var(--user-card-icon-sm-size);\n    height: var(--user-card-icon-sm-size);\n  }\n}\n","import { Component, h, Prop, Host, FunctionalComponent, Element } from '@stencil/core';\nimport AccountIcon from '@material-design-icons/svg/outlined/account_circle.svg';\nimport LocationIcon from '@material-design-icons/svg/outlined/location_on.svg';\nimport StarIcon from '@material-design-icons/svg/outlined/star.svg';\nimport { UserCardIconType } from '../../../../interfaces/components/basic/cards/user-card/user-card';\n\n@Component({\n  tag: 'rwc-user-card',\n  styleUrl: 'user-card.scss',\n  shadow: true\n})\nexport class RwcUserCard {\n  /**\n   * The reference to the host element.\n   */\n  @Element() host: HTMLElement;\n\n  /**\n   * Path to the icon.\n   */\n  @Prop({ reflect: true }) avatar: string = '';\n\n  /**\n   * Set avatar rounded.\n   */\n  @Prop() roundedAvatar: boolean = false;\n\n  /**\n   * Set rendering of box-shadow.\n   */\n  @Prop({ reflect: true }) renderShadow: boolean = true;\n\n  /**\n   * Set rendering of border.\n   */\n  @Prop({ reflect: true }) renderBorder: boolean = false;\n\n  /**\n   * Animate border on hover.\n   */\n  @Prop({ reflect: true }) animateBorder: boolean = false;\n\n  /**\n   * Path to the icon.\n   */\n  @Prop({ reflect: true }) locationIcon: string = '';\n\n  /**\n   * Path to the icon.\n   */\n  @Prop({ reflect: true }) ratingIcon: string = '';\n\n  /**\n   * Change cursor to pointer on hover.\n   */\n  @Prop() pointer: boolean = false;\n\n  /**\n   * Check if slot location is rendered.\n   */\n  private get hasLocation(): boolean {\n    return Boolean(this.host.querySelector('[slot=\"location\"]'));\n  }\n\n  /**\n   * Check if slot rating is rendered.\n   */\n  private get hasRating(): boolean {\n    return Boolean(this.host.querySelector('[slot=\"rating\"]'));\n  }\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <rwc-card\n          class=\"card\"\n          renderShadow={ this.renderShadow }\n          renderBorder={ this.renderBorder }\n          animateBorder={ this.animateBorder }\n          pointer={ this.pointer }\n        >\n          <div class=\"container\">\n            <div class=\"header\">\n              <slot name=\"header\"></slot>\n            </div>\n            <div class=\"avatar\">\n              <slot name=\"avatar\">\n                { this.renderIcon('avatar') }\n              </slot>\n            </div>\n            <div class=\"name content-spacing\">\n              <slot name=\"name\"></slot>\n            </div>\n            <div class=\"heading content-spacing\">\n              <slot name=\"heading\"></slot>\n            </div>\n            { this.renderLocation() }\n            { this.renderRating() }\n            <div class=\"description\">\n              <slot name=\"description\">\n              </slot>\n            </div>\n          </div>\n        </rwc-card>\n      </Host>\n    );\n  }\n\n  /**\n   * Renders location element\n   */\n  renderLocation(): FunctionalComponent {\n    if (this.hasLocation) {\n      return (\n        <div class=\"location-icon content-spacing\">\n          <span>{ this.renderIcon('location') }</span>\n          <span>\n            <slot name=\"location\"></slot>\n          </span>\n        </div>\n      )\n    }\n  }\n\n  /**\n   * Renders rating element.\n   */\n  renderRating(): FunctionalComponent {\n    if (this.hasRating) {\n      return (\n        <div class=\"rating-icon content-spacing\">\n          <span>{ this.renderIcon('rating') }</span>\n          <span>\n            <slot name=\"rating\"></slot>\n          </span>\n        </div>\n      )\n    }\n  }\n\n  /**\n   * Renders the icon element.\n   */\n  renderIcon(icon: UserCardIconType): FunctionalComponent {\n    switch (icon) {\n      case 'location':\n        if (this.locationIcon) {\n          return (\n            <img src={ this.locationIcon } alt=\"location-icon\"></img>\n          )\n        }\n        return (\n          <div innerHTML={ LocationIcon } class=\"svg-icon\"></div>\n        );\n      case 'rating':\n        if (this.ratingIcon) {\n          return (\n            <img src={ this.ratingIcon } alt=\"rating-icon\"></img>\n          )\n        }\n        return (\n          <div innerHTML={ StarIcon } class=\"svg-icon\"></div>\n        )\n      default:\n        if (this.avatar) {\n          return (\n            <img src={ this.avatar } alt=\"avatar\" class={ { rounded: this.roundedAvatar } }></img>\n          )\n        }\n        return (\n          <div innerHTML={ AccountIcon } class=\"svg-icon\"></div>\n        )\n    }\n  }\n}\n"],"mappings":"ilBAAA,MAAMA,EAAc,k+G,MCWPC,EAAW,M,qCASoB,G,mBAKT,M,kBAKgB,K,kBAKA,M,mBAKC,M,kBAKF,G,gBAKF,G,aAKnB,K,CAK3B,eAAYC,GACV,OAAOC,QAAQC,KAAKC,KAAKC,cAAc,qB,CAMzC,aAAYC,GACV,OAAOJ,QAAQC,KAAKC,KAAKC,cAAc,mB,CAMzC,MAAAE,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,YACEE,MAAM,OACNC,aAAeR,KAAKQ,aACpBC,aAAeT,KAAKS,aACpBC,cAAgBV,KAAKU,cACrBC,QAAUX,KAAKW,SAEfN,EAAA,OAAKE,MAAM,aACTF,EAAA,OAAKE,MAAM,UACTF,EAAA,QAAMO,KAAK,YAEbP,EAAA,OAAKE,MAAM,UACTF,EAAA,QAAMO,KAAK,UACPZ,KAAKa,WAAW,YAGtBR,EAAA,OAAKE,MAAM,wBACTF,EAAA,QAAMO,KAAK,UAEbP,EAAA,OAAKE,MAAM,2BACTF,EAAA,QAAMO,KAAK,aAEXZ,KAAKc,iBACLd,KAAKe,eACPV,EAAA,OAAKE,MAAM,eACTF,EAAA,QAAMO,KAAK,mB,CAYvB,cAAAE,GACE,GAAId,KAAKF,YAAa,CACpB,OACEO,EAAA,OAAKE,MAAM,iCACTF,EAAA,YAAQL,KAAKa,WAAW,aACxBR,EAAA,YACEA,EAAA,QAAMO,KAAK,c,EAUrB,YAAAG,GACE,GAAIf,KAAKG,UAAW,CAClB,OACEE,EAAA,OAAKE,MAAM,+BACTF,EAAA,YAAQL,KAAKa,WAAW,WACxBR,EAAA,YACEA,EAAA,QAAMO,KAAK,Y,EAUrB,UAAAC,CAAWG,GACT,OAAQA,GACN,IAAK,WACH,GAAIhB,KAAKiB,aAAc,CACrB,OACEZ,EAAA,OAAKa,IAAMlB,KAAKiB,aAAeE,IAAI,iB,CAGvC,OACEd,EAAA,OAAKe,UAAYC,EAAed,MAAM,aAE1C,IAAK,SACH,GAAIP,KAAKsB,WAAY,CACnB,OACEjB,EAAA,OAAKa,IAAMlB,KAAKsB,WAAaH,IAAI,e,CAGrC,OACEd,EAAA,OAAKe,UAAYG,EAAWhB,MAAM,aAEtC,QACE,GAAIP,KAAKwB,OAAQ,CACf,OACEnB,EAAA,OAAKa,IAAMlB,KAAKwB,OAASL,IAAI,SAASZ,MAAQ,CAAEkB,QAASzB,KAAK0B,gB,CAGlE,OACErB,EAAA,OAAKe,UAAYO,EAAcpB,MAAM,a"}
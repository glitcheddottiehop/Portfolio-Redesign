{"version":3,"names":["DocumentUtils","getDefaultFontSize","element","document","createElement","style","width","display","body","append","widthMatch","_b","_a","getComputedStyle","getPropertyValue","match","remove","Number","length","convertToPixels","value","numericValue","includes","this"],"sources":["src/utils/document/document-utils.ts"],"sourcesContent":["/**\n * Global html and document element utilities\n */\nexport class DocumentUtils {\n  /**\n   * Gets browser's default font size \\\n   * Can be used for correct rem conversion to pixels\n   */\n  static getDefaultFontSize(): number {\n    const element = document.createElement('div');\n    element.style.width = '1rem';\n    element.style.display = 'none';\n    document.body.append(element);\n    \n    const widthMatch = getComputedStyle(element)?.getPropertyValue('width')?.match(/\\d+/);\n\n    element.remove();\n\n    return Number(widthMatch && widthMatch.length > 0 ? widthMatch[0] : 16);\n  }\n\n  /**\n   * Converts the string size value to pixels.\n   */\n  static convertToPixels(value: string): number {\n    // Gets the first sequence of digits as numeric value. (32px => 32, a3rem48px => 3).\n    let numericValue = Number(value.match(/\\d*\\.?\\d*/)[0]);\n    if (value.includes('rem')) {\n      numericValue *= this.getDefaultFontSize();\n    }\n    \n    return numericValue;\n  }\n}\n"],"mappings":"MAGaA,EAKX,yBAAOC,G,QACL,MAAMC,EAAUC,SAASC,cAAc,OACvCF,EAAQG,MAAMC,MAAQ,OACtBJ,EAAQG,MAAME,QAAU,OACxBJ,SAASK,KAAKC,OAAOP,GAErB,MAAMQ,GAAaC,GAAAC,EAAAC,iBAAiBX,MAAQ,MAAAU,SAAA,SAAAA,EAAEE,iBAAiB,YAAQ,MAAAH,SAAA,SAAAA,EAAEI,MAAM,OAE/Eb,EAAQc,SAER,OAAOC,OAAOP,GAAcA,EAAWQ,OAAS,EAAIR,EAAW,GAAK,G,CAMtE,sBAAOS,CAAgBC,GAErB,IAAIC,EAAeJ,OAAOG,EAAML,MAAM,aAAa,IACnD,GAAIK,EAAME,SAAS,OAAQ,CACzBD,GAAgBE,KAAKtB,oB,CAGvB,OAAOoB,C"}
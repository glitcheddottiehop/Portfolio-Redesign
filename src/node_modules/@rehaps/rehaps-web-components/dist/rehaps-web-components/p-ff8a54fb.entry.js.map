{"version":3,"names":["inputCss","RwcInput","componentWillRender","this","host","tabIndex","onFocus","disabled","focused","clearErrors","_a","inputElement","focus","onBlur","manualValidation","validate","onInput","value","setErrors","validators","forEach","validator","errors","push","getMessage","length","render","h","Host","class","htmlFor","name","style","display","label","error","ref","element","leftSlot","id","input","assignedElements","_b","rightSlot","autoComplete","type","placeholder"],"sources":["src/components/basic/forms/input/input.scss?tag=rwc-input&encapsulation=shadow","src/components/basic/forms/input/input.tsx"],"sourcesContent":["@import \"global.scss\";\n\n:host {\n  /**\n   * @prop --rwc-input-background-color: The background color of the input element.\n   * @prop --rwc-input-disabled-background-color: The background color of the input element when disabled.\n   * @prop --rwc-input-container-border-color: The border color of the input container.\n   * @prop --rwc-input-container-focused-border-color: The border color of the input container when focused.\n   * @prop --rwc-input-container-error-border-color: The border color of the input container when component contains errors.\n   * @prop --rwc-input-container-border: The border property of the input container.\n   * @prop --rwc-input-container-focused-border: The border property of the input container when focused.\n   * @prop --rwc-input-container-border-radius: The border radius of the input container.\n   * @prop --rwc-input-container-box-shadow: The box shadow of the input container.\n   * @prop --rwc-input-container-focus-box-shadow: The box shadow of the input container when focused.\n   *\n   * @prop --rwc-input-color: The color of the input field text.\n   * @prop --rwc-input-placeholder-color: The color of the placeholder text.\n   * @prop --rwc-input-font-size: The font size of the input field text.\n   * \n   * @prop --rwc-input-padding: The padding inside the input container.\n   * @prop --rwc-input-label-color: The color of the input field label.\n   * @prop --rwc-input-label-font-size: The font size of the input field label.\n   * @prop --rwc-input-label-padding: The padding of the input field label.\n   * @prop --rwc-input-error-margin-top: The top margin of the error message text.\n   * @prop --rwc-input-error-font-size: The font size of the error message text.\n   * @prop --rwc-input-error-color: The color of the error message text.\n   *\n   * @prop display: The display style of the component.\n   */\n  --rwc-input-background-color: #{$rwc-color-foundation-white};\n  --rwc-input-disabled-background-color: #{$rwc-color-grey-300};\n  --rwc-input-container-border-color: #{$rwc-color-border-primary};\n  --rwc-input-container-focused-border-color: #{$rwc-color-border-primary};\n  --rwc-input-container-error-border-color: #{$rwc-color-border-red};\n  --rwc-input-container-border: 1px solid\n    var(--rwc-input-container-border-color);\n  --rwc-input-container-focused-border: 1px solid\n    var(--rwc-input-container-focused-border-color);\n  --rwc-input-container-border-radius: 0.5rem;\n  --rwc-input-container-box-shadow: #{$rwc-box-shadow-inner};\n  --rwc-input-container-focus-box-shadow: #{$rwc-box-shadow-inner},\n    #{$rwc-box-shadow-sm};\n\n  --rwc-input-color: #{$rwc-color-text-primary};\n  --rwc-input-placeholder-color: #{$rwc-color-grey-800};\n  --rwc-input-font-size: #{$rwc-font-size-body-md};\n  --rwc-input-padding: #{$rwc-spacing--2xs} #{$rwc-spacing--xs};\n\n  --rwc-input-label-color: #{$rwc-color-text-additional};\n  --rwc-input-label-font-size: #{$rwc-font-size-label-md};\n  --rwc-input-label-padding: 0 0 #{$rwc-spacing--xs} 0;\n  --rwc-input-label-font-weight: 600;\n\n  --rwc-input-error-margin-top: #{$rwc-spacing--3xs};\n  --rwc-input-error-font-size: #{$rwc-font-size-label-md};\n  --rwc-input-error-color: #{$rwc-color-text-red};\n\n  display: block;\n}\n\n:host(.disabled) {\n  --rwc-input-background-color: var(--rwc-input-disabled-background-color);\n}\n\n.input-container {\n  background-color: var(--rwc-input-background-color);\n  border: var(--rwc-input-container-border);\n  border-radius: var(--rwc-input-container-border-radius);\n  box-shadow: var(--rwc-input-container-box-shadow);\n  cursor: text;\n  display: flex;\n  flex-direction: row;\n  padding: var(--rwc-input-padding);\n  padding-top: 0;\n  padding-bottom: 0;\n  transition: box-shadow ease-in-out #{$rwc-animation-duration--default},\n    border-color ease-in-out #{$rwc-animation-duration--default};\n\n  &.focused {\n    border: var(--rwc-input-container-focused-border);\n    --rwc-input-container-box-shadow: var(\n      --rwc-input-container-focus-box-shadow\n    );\n  }\n\n  &.error {\n    border-color: var(--rwc-input-container-error-border-color);\n  }\n}\n\n.label {\n  color: var(--rwc-input-label-color);\n  font-size: var(--rwc-input-label-font-size);\n  font-weight: var(--rwc-input-label-font-weight);\n  padding: var(--rwc-input-label-padding);\n}\n\n.slot-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.slot-horizontal-flex {\n  display: flex;\n  flex-direction: row;\n}\n\n.input {\n  background-color: var(--rwc-input-background-color);\n  border: none;\n  box-sizing: border-box;\n  color: var(--rwc-input-color);\n  font-size: var(--rwc-input-font-size);\n  padding: var(--rwc-input-padding);\n  padding-left: 0;\n  padding-right: 0;\n  width: 100%;\n  vertical-align: text-top;\n\n  &::placeholder {\n    color: var(--rwc-input-placeholder-color);\n  }\n\n  &:focus,\n  &:focus-visible {\n    border: none;\n    outline: none;\n  }\n\n  &.left-slot {\n    padding-left: #{$rwc-spacing--2xs};\n  }\n\n  &.right-slot {\n    padding-right: #{$rwc-spacing--2xs};\n  }\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active,\n  &:-internal-autofill-previewed,\n  &:-internal-autofill-selected {\n    background-color: var(--rwc-input-background-color);\n    -webkit-text-fill-color: var(--rwc-input-color);\n    -webkit-background-clip: text;\n  }\n}\n\n.error-text {\n  color: var(--rwc-input-error-color);\n  margin: var(--rwc-input-error-margin-top) 0 0 0;\n  font-size: var(--rwc-input-error-font-size);\n}\n","import {\n  Component,\n  h,\n  Element,\n  Prop,\n  Method,\n  Listen,\n  Host,\n  State,\n} from \"@stencil/core\";\nimport {\n  InputAutoComplete,\n  InputType,\n  RwcInputValidatorInterface,\n} from \"../../../../interfaces/components/basic/input/input\";\n\n/**\n * @slot left - Slot for the left side of the input field.\n * @slot right - Slot for the right side of the input field.\n */\n@Component({\n  tag: \"rwc-input\",\n  styleUrl: \"./input.scss\",\n  shadow: true,\n})\nexport class RwcInput {\n  /**\n   * Reference to the input field element.\n   */\n  private inputElement?: HTMLInputElement;\n\n  /**\n   * Reference to the left slot element of the component\n   */\n  @State() private leftSlot?: HTMLSlotElement;\n\n  /**\n   * Reference to the right slot element of the component\n   */\n  @State() private rightSlot?: HTMLSlotElement;\n\n  /**\n   * Reference to the component's host element.\n   */\n  @Element() host!: HTMLRwcInputElement;\n\n  /**\n   * The name attribute of the input field.\n   */\n  @Prop() name: string = \"\";\n\n  /**\n   * Enables the auto complete for the input field.\n   */\n  @Prop() autoComplete: InputAutoComplete = \"on\";\n\n  /**\n   * The focused state of the component.\n   */\n  @Prop({ mutable: true }) focused: boolean = false;\n\n  /**\n   * The current value of the input field.\n   */\n  @Prop({ mutable: true }) value: string = \"\";\n\n  /**\n   * The placeholder value of the input field.\n   */\n  @Prop() placeholder: string = \"\";\n\n  /**\n   * The type of the input field.\n   */\n  @Prop({ reflect: true }) type: InputType = \"text\";\n\n  /**\n   * List of validators used for validation of the input.\n   */\n  @Prop() validators: Array<RwcInputValidatorInterface> = [];\n\n  /**\n   * Determines if the validation must be only triggered manually.\n   */\n  @Prop() manualValidation: boolean = false;\n\n  /**\n   * Sets the disabled state for the input field.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * The label for the input field.\n   */\n  @Prop() label: string = \"\";\n\n  /**\n   * List of errors acquired after the validation.\n   */\n  @State() errors: Array<string> = [];\n\n  /**\n   * Called before each render call\n   */\n  componentWillRender(): void {\n    this.host.tabIndex = 0;\n  }\n\n  /**\n   * Event handler for the focus event\n   */\n  @Listen(\"focus\")\n  onFocus(): void {\n    if (!this.disabled) {\n      this.focused = true;\n      this.clearErrors();\n      this.inputElement?.focus();\n    }\n  }\n\n  /**\n   * Event handler for the blur event\n   */\n  @Listen(\"blur\")\n  onBlur(): void {\n    this.focused = false;\n    if (!this.manualValidation) {\n      this.validate();\n    }\n  }\n\n  /**\n   * Event handler for the input event\n   */\n  @Listen(\"input\")\n  onInput(): void {\n    this.value = this.inputElement.value;\n  }\n\n  /**\n   * Validates the input of the component\n   */\n  @Method()\n  async validate(): Promise<boolean> {\n    this.setErrors([]);\n    this.validators.forEach((validator: RwcInputValidatorInterface) => {\n      if (!validator.validate(this.value)) {\n        this.errors.push(validator.getMessage());\n      }\n    });\n    return this.errors.length === 0;\n  }\n\n  /**\n   * Clears the list of validation errors.\n   */\n  @Method()\n  async clearErrors(): Promise<void> {\n    this.setErrors([]);\n  }\n\n  /**\n   * Sets the components error array to passed array of strings.\n   */\n  @Method()\n  async setErrors(errors: Array<string>): Promise<void> {\n    this.errors = errors;\n  }\n\n  /**\n   * Renders the component\n   */\n  render() {\n    return (\n      <Host\n        class={{\n          disabled: this.disabled,\n        }}\n      >\n        <label\n          htmlFor={this.name}\n          class=\"label\"\n          style={{\n            display: this.name ? \"block\" : \"none\",\n          }}\n        >\n          {this.label}\n        </label>\n        <div\n          class={{\n            \"input-container\": true,\n            focused: this.focused,\n            error: this.errors.length > 0,\n          }}\n        >\n          <div class=\"slot-container\">\n            <div class=\"slot-horizontal-flex\">\n              <slot\n                name=\"left\"\n                ref={(element: HTMLSlotElement) => (this.leftSlot = element)}\n              />\n            </div>\n          </div>\n          <input\n            id={this.name}\n            class={{\n              input: true,\n              \"left-slot\": this.leftSlot?.assignedElements().length > 0,\n              \"right-slot\": this.rightSlot?.assignedElements().length > 0,\n            }}\n            name={this.name}\n            autoComplete={this.autoComplete}\n            type={this.type}\n            value={this.value}\n            placeholder={this.placeholder}\n            disabled={this.disabled ? true : null}\n            ref={(element: HTMLInputElement) => (this.inputElement = element)}\n          />\n          <div class=\"slot-container\">\n            <div class=\"slot-horizontal-flex\">\n              <slot\n                name=\"right\"\n                ref={(element: HTMLSlotElement) => (this.rightSlot = element)}\n              />\n            </div>\n          </div>\n        </div>\n        <p class=\"error-text\">{this.errors[0] || \"\"}</p>\n      </Host>\n    );\n  }\n}\n"],"mappings":"oDAAA,MAAMA,EAAW,0pH,MCyBJC,EAAQ,M,oFAwBI,G,kBAKmB,K,aAKE,M,WAKH,G,iBAKX,G,UAKa,O,gBAKa,G,sBAKpB,M,cAKR,M,WAKJ,G,YAKS,E,CAKjC,mBAAAC,GACEC,KAAKC,KAAKC,SAAW,C,CAOvB,OAAAC,G,MACE,IAAKH,KAAKI,SAAU,CAClBJ,KAAKK,QAAU,KACfL,KAAKM,eACLC,EAAAP,KAAKQ,gBAAY,MAAAD,SAAA,SAAAA,EAAEE,O,EAQvB,MAAAC,GACEV,KAAKK,QAAU,MACf,IAAKL,KAAKW,iBAAkB,CAC1BX,KAAKY,U,EAQT,OAAAC,GACEb,KAAKc,MAAQd,KAAKQ,aAAaM,K,CAOjC,cAAMF,GACJZ,KAAKe,UAAU,IACff,KAAKgB,WAAWC,SAASC,IACvB,IAAKA,EAAUN,SAASZ,KAAKc,OAAQ,CACnCd,KAAKmB,OAAOC,KAAKF,EAAUG,a,KAG/B,OAAOrB,KAAKmB,OAAOG,SAAW,C,CAOhC,iBAAMhB,GACJN,KAAKe,UAAU,G,CAOjB,eAAMA,CAAUI,GACdnB,KAAKmB,OAASA,C,CAMhB,MAAAI,G,QACE,OACEC,EAACC,EAAI,CACHC,MAAO,CACLtB,SAAUJ,KAAKI,WAGjBoB,EAAA,SACEG,QAAS3B,KAAK4B,KACdF,MAAM,QACNG,MAAO,CACLC,QAAS9B,KAAK4B,KAAO,QAAU,SAGhC5B,KAAK+B,OAERP,EAAA,OACEE,MAAO,CACL,kBAAmB,KACnBrB,QAASL,KAAKK,QACd2B,MAAOhC,KAAKmB,OAAOG,OAAS,IAG9BE,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,wBACTF,EAAA,QACEI,KAAK,OACLK,IAAMC,GAA8BlC,KAAKmC,SAAWD,MAI1DV,EAAA,SACEY,GAAIpC,KAAK4B,KACTF,MAAO,CACLW,MAAO,KACP,cAAa9B,EAAAP,KAAKmC,YAAQ,MAAA5B,SAAA,SAAAA,EAAE+B,mBAAmBhB,QAAS,EACxD,eAAciB,EAAAvC,KAAKwC,aAAS,MAAAD,SAAA,SAAAA,EAAED,mBAAmBhB,QAAS,GAE5DM,KAAM5B,KAAK4B,KACXa,aAAczC,KAAKyC,aACnBC,KAAM1C,KAAK0C,KACX5B,MAAOd,KAAKc,MACZ6B,YAAa3C,KAAK2C,YAClBvC,SAAUJ,KAAKI,SAAW,KAAO,KACjC6B,IAAMC,GAA+BlC,KAAKQ,aAAe0B,IAE3DV,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,wBACTF,EAAA,QACEI,KAAK,QACLK,IAAMC,GAA8BlC,KAAKwC,UAAYN,OAK7DV,EAAA,KAAGE,MAAM,cAAc1B,KAAKmB,OAAO,IAAM,I"}
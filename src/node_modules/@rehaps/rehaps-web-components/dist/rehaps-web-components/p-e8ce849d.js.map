{"version":3,"names":["EventManager","constructor","this","subscribedEvents","registerEventListener","element","event","callback","addEventListener","push","name","clearEventListeners","forEach","removeEventListener"],"sources":["src/utils/actions/eventManager.ts"],"sourcesContent":["import { ISubscribedEvent } from '../../interfaces/actions/EventManager';\n\n/**\n * Helper class for managing event subscriptions.\n * Meant to prevent callbacks to removed components.\n */\nexport class EventManager {\n  /**\n   * List of events registered for the instance\n   */\n  private subscribedEvents: ISubscribedEvent[] = [];\n\n  /**\n   * Register a new event listener\n   */\n  public registerEventListener(element: Element, event: string, callback: (...args: any[] | any) => void) {\n    element.addEventListener(event, callback);\n    this.subscribedEvents.push({\n      element: element,\n      name: event,\n      callback: callback\n    });\n  }\n\n  /**\n   * Clear all event listeners from the instance\n   */\n  public clearEventListeners(): void {\n    this.subscribedEvents.forEach((event: ISubscribedEvent) => {\n        event.element.removeEventListener(event.name, event.callback);\n    });\n  }\n}\n"],"mappings":"MAMaA,EAAb,WAAAC,GAIUC,KAAAC,iBAAuC,E,CAKxC,qBAAAC,CAAsBC,EAAkBC,EAAeC,GAC5DF,EAAQG,iBAAiBF,EAAOC,GAChCL,KAAKC,iBAAiBM,KAAK,CACzBJ,QAASA,EACTK,KAAMJ,EACNC,SAAUA,G,CAOP,mBAAAI,GACLT,KAAKC,iBAAiBS,SAASN,IAC3BA,EAAMD,QAAQQ,oBAAoBP,EAAMI,KAAMJ,EAAMC,SAAS,G"}
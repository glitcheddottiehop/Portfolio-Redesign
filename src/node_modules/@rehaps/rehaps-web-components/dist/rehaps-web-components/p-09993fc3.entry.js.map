{"version":3,"names":["buttonCss","RwcButton","onButtonClick","event","this","ripple","createRipple","circle","document","createElement","diameter","Math","max","containerElement","clientWidth","clientHeight","radius","style","width","height","left","clientX","getBoundingClientRect","window","scrollX","top","clientY","scrollY","classList","add","querySelector","remove","appendChild","render","h","Host","ref","element","class","container","shadow","renderShadow","type","theme","renderLeftIconWrapper","renderRightIconWrapper","showIconRight","Fragment","name","renderRightIcon","showIconLeft","renderLeftIcon","iconRight","src","alt","FileUtils","getCleanFileName","innerHTML","ChevronRight","iconLeft","ChevronLeft"],"sources":["src/components/basic/button/button.scss?tag=rwc-button&encapsulation=shadow","src/components/basic/button/button.tsx"],"sourcesContent":["@import 'global.scss';\n\n:host {\n  /**\n  * @prop --button-border-width: The border width of outline button.\n  * @prop --button-border-radius: The border radius of the button.\n  * @prop --button-border-color: The color of the border of the button.\n  * @prop --button-padding: The top-bottom and left-right padding for button.\n  * @prop --button-box-shadow: The shadow of the button.\n  * @prop --button-icon-size: The size of the icon of the button.\n  * @prop --button-icon-color: The color of the icon of the button.\n  * @prop --button-width: The width of the button.\n  * @prop --button-background-color: The background color of the button.\n  * @prop --button-text-color: The color of the text of the button.\n  * @prop --button-background-color-hover: The color of the button on hover.\n  * @prop --button-outline-color: The coolor of the outline of the button.\n  * @prop --button-outline-style: The style of the outline of the button.\n  * @prop --button-background-color-type-outline-hover: The background color of the outline type button on hover.\n  * @prop --button-ripple-animation: The click animation of the button.\n  */\n  --button-border-width: 2px;\n  --button-border-radius: #{$rwc-spacing--2xs};\n  --button-border-color: #{$rwc-color-green-700};\n  --button-padding: #{$rwc-spacing--xs} #{$rwc-spacing--sm};\n  --button-box-shadow: #{$rwc-box-shadow-md};\n  --button-icon-size: 1.5rem;\n  --button-icon-color: #{$rwc-color-green-700};\n  --button-width: fit-content;\n  --button-background-color: #{$rwc-color-green-700};\n  --button-text-color: #{$rwc-color-text-primary};\n  --button-background-color-hover: #{$rwc-color-green-800};\n  --button-outline-color: #{$rwc-color-outline-default};\n  --button-outline-style: solid;\n  --button-background-color-type-outline-hover: #{$rwc-color-grey-700};\n  --button-ripple-animation: #{$rwc-color-ripple};\n\n  display: block;\n}\n\n.theme-blue {\n  --button-background-color: #{$rwc-color-blue-500};\n  --button-border-color: #{$rwc-color-blue-500};\n  --button-text-color: #{$rwc-color-grey-100};\n  --button-background-color-hover: #{$rwc-color-blue-600};\n  --button-outline-color: #{$rwc-color-outline-blue};\n  --button-red-outline-style: var(--button-outline-style);\n}\n\n.theme-dark {\n  --button-background-color: #{$rwc-color-grey-900};\n  --button-border-color: #{$rwc-color-grey-900};\n  --button-text-color: #{$rwc-color-grey-100};\n  --button-background-color-hover: #{$rwc-color-grey-800};\n  --button-outline-color: #{$rwc-color-outline-dark};\n  --button-dark-outline-style: var(--button-outline-style);\n}\n\n.theme-red {\n  --button-background-color: #{$rwc-color-red-700};\n  --button-border-color: #{$rwc-color-red-700};\n  --button-text-color: #{$rwc-color-grey-100};\n  --button-background-color-hover: #{$rwc-color-red-800};\n  --button-outline-color: #{$rwc-color-outline-red};\n  --button-red-outline-style: var(--button-outline-style);\n}\n\n.theme-orange {\n  --button-background-color: #{$rwc-color-orange-600};\n  --button-border-color: #{$rwc-color-orange-600};\n  --button-text-color: #{$rwc-color-grey-100};\n  --button-background-color-hover: #{$rwc-color-orange-700};\n  --button-outline-color: #{$rwc-color-outline-orange};\n  --button-red-outline-style: var(--button-outline-style);\n}\n\n.container {\n  position: relative;\n  overflow: hidden;\n  align-items: center;\n  border-radius: var(--button-border-radius);\n  display: flex;\n  padding: var(--button-padding);\n  transition: border-color 400ms ease, background-color 400ms ease, color 400ms ease, fill 400ms ease;\n  cursor: pointer;\n}\n\n.ripple {\n  position: absolute;\n  border-radius: 50%;\n  transform: scale(0);\n  animation: ripple 600ms linear;\n  background-color: var(--button-ripple-animation);\n}\n\n.type-filled {\n  background-color: var(--button-background-color);\n  border-color: var(--button-border-color);\n  color: var(--button-text-color);\n  transition: border-color 400ms ease, background-color 400ms ease;\n\n  &:hover {\n    background-color: var(--button-background-color-hover);\n    border-color: var(--button-background-color-hover);\n  }\n\n  &:active {\n    outline-color: var(--button-outline-color);\n    outline-style: var(--button-outline-style);\n  }\n}\n\n.type-outline {\n  border-color: var(--button-border-color);\n  color: var(--button-border-color);\n  transition: color 200ms ease, background-color 200ms ease;\n\n  .icon-wrapper {\n    svg {\n      path {\n        fill: var(--button-border-color);\n        transition: fill 200ms ease;\n      }\n    }\n  }\n\n  &:hover {\n    background-color: var(--button-background-color);\n    color: var(--button-text-color);\n\n    .icon-wrapper {\n      svg {\n        path {\n          fill: var(--button-text-color);\n        }\n      }\n    }\n  }\n\n  &:active {\n    outline-color: var(--button-outline-color);\n    outline-style: var(--button-outline-style);\n  }\n}\n\n.shadow {\n  box-shadow: var(--button-box-shadow);\n}\n\n.icon-wrapper {\n  align-self: center;\n  flex-shrink: 0;\n  display: flex;\n\n  svg {\n    height: 100%;\n    width: 100%;\n\n    path {\n      fill: var(--button-text-color);\n    }\n  }\n}\n\n.icon {\n  height: var(--button-icon-size);\n  width: var(--button-icon-size);\n}\n\n//Set border\n.type-filled,\n.type-outline {\n  border-width: var(--button-border-width);\n  border-style: solid;\n}\n\n.width-auto {\n  width: var(--button-width);\n}\n\n.width-full {\n  width: unset;\n  justify-content: space-between;\n}\n\n@keyframes ripple {\n  to {\n    transform: scale(4);\n    opacity: 0;\n  }\n}\n","import { Component, h, Prop, Host, FunctionalComponent, Fragment, Listen } from '@stencil/core';\nimport ChevronRight from '@material-design-icons/svg/outlined/chevron_right.svg';\nimport ChevronLeft from '@material-design-icons/svg/outlined/chevron_left.svg';\nimport { ButtonTheme, ButtonType, ButtonWidth } from '../../../interfaces/components/basic/button/button';\nimport { FileUtils } from '../../../utils/data/file';\n\n/**\n * @slot icon - Slot for the custom icon html.\n * @slot default - Slot for the content of the button\n */\n@Component({\n  tag: 'rwc-button',\n  styleUrl: 'button.scss',\n  shadow: true\n})\nexport class RwcButton {\n\n  /**\n   * The reference to the container element.\n   */\n  private containerElement: HTMLElement;\n\n  /**\n   * Path to the right icon.\n   */\n  @Prop() iconRight: string = '';\n\n  /**\n   * Set right icon visible.\n   */\n  @Prop() showIconRight: boolean = false;\n\n  /**\n  * Path to the left icon.\n  */\n  @Prop() iconLeft: string = '';\n\n  /**\n  * Set left icon visible.\n  */\n  @Prop() showIconLeft: boolean = false;\n\n  /**\n  * Set button type.\n  */\n  @Prop({ reflect: true }) type: ButtonType = 'filled';\n\n  /**\n  * Set button theme.\n  */\n  @Prop({ reflect: true }) theme: ButtonTheme = 'default';\n\n  /**\n  * Set button width.\n  */\n  @Prop() width: ButtonWidth = 'auto';\n\n  /**\n   * Set animation.\n   */\n  @Prop() ripple: boolean = false;\n\n  /**\n   * Set rendering of box-shadow.\n   */\n  @Prop() renderShadow: boolean = true;\n\n  /**\n   * Creates ripple animation on click.\n   */\n  @Listen('click')\n  onButtonClick(event: MouseEvent): void {\n    if (this.ripple) {\n      this.createRipple(event);\n    }\n  }\n\n  /**\n   * Renders the ripple animation.\n   */\n  private createRipple(event: MouseEvent): void {\n    const circle = document.createElement('span');\n    const diameter = Math.max(this.containerElement.clientWidth, this.containerElement.clientHeight);\n    const radius = diameter / 2;\n\n    circle.style.width = circle.style.height = `${ diameter }px`;\n    circle.style.left = `${ event.clientX - (this.containerElement.getBoundingClientRect().left + window.scrollX + radius) }px`;\n    circle.style.top = `${ event.clientY - (this.containerElement.getBoundingClientRect().top + window.scrollY + radius) }px`;\n    circle.classList.add('ripple');\n\n    const ripple = this.containerElement.querySelector('.ripple');\n\n    if (ripple) {\n      ripple.remove();\n    }\n\n    this.containerElement.appendChild(circle);\n  }\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <div\n          ref={ (element: HTMLElement) => this.containerElement = element }\n          class={ {\n            container: true,\n            shadow: this.renderShadow,\n            [`type-${ this.type }`]: true,\n            [`theme-${ this.theme }`]: true,\n            [`width-${ this.width }`]: true,\n          } }>\n          <div class=\"icon-wrapper\">\n            { this.renderLeftIconWrapper() }\n          </div>\n          <div class=\"text\">\n            <slot></slot>\n          </div>\n          <div class=\"icon-wrapper\">\n            { this.renderRightIconWrapper() }\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  /**\n   * Renders the right icon wrapper.\n   */\n  private renderRightIconWrapper(): FunctionalComponent {\n    if (this.showIconRight) {\n      return (\n        <Fragment>\n          <slot name=\"icon\">\n            { this.renderRightIcon() }\n          </slot>\n        </Fragment >\n      )\n    }\n  }\n\n  /**\n  * Renders the left icon wrapper.\n  */\n  private renderLeftIconWrapper(): FunctionalComponent {\n    if (this.showIconLeft) {\n      return (\n        <Fragment>\n          <slot name=\"icon\">\n            { this.renderLeftIcon() }\n          </slot>\n        </Fragment >\n      )\n    }\n  }\n\n  /**\n   * Renders the right icon element.\n   */\n  private renderRightIcon(): FunctionalComponent {\n    if (this.iconRight) {\n      return (\n        <Fragment>\n          <img class=\"icon\" src={ this.iconRight } alt={ FileUtils.getCleanFileName(this.iconRight) }></img>\n        </Fragment>\n      )\n    }\n    return (\n      <Fragment>\n        <div innerHTML={ ChevronRight } class=\"icon svg-icon\"></div>\n      </Fragment>\n    )\n  }\n\n  /**\n   * Renders the left icon element.\n   */\n  private renderLeftIcon(): FunctionalComponent {\n    if (this.iconLeft) {\n      return (\n        <Fragment>\n          <img class=\"icon\" src={ this.iconLeft } alt={ FileUtils.getCleanFileName(this.iconLeft) }></img>\n        </Fragment>\n      )\n    }\n    if (this.showIconLeft) {\n      return (\n        <Fragment>\n          <div innerHTML={ ChevronLeft } class=\"icon svg-icon\">\n          </div>\n        </Fragment>\n      )\n    }\n  }\n}\n"],"mappings":"saAAA,MAAMA,EAAY,+pI,MCeLC,EAAS,M,wCAUQ,G,mBAKK,M,cAKN,G,kBAKK,M,UAKY,S,WAKE,U,WAKjB,O,YAKH,M,kBAKM,I,CAMhC,aAAAC,CAAcC,GACZ,GAAIC,KAAKC,OAAQ,CACfD,KAAKE,aAAaH,E,EAOd,YAAAG,CAAaH,GACnB,MAAMI,EAASC,SAASC,cAAc,QACtC,MAAMC,EAAWC,KAAKC,IAAIR,KAAKS,iBAAiBC,YAAaV,KAAKS,iBAAiBE,cACnF,MAAMC,EAASN,EAAW,EAE1BH,EAAOU,MAAMC,MAAQX,EAAOU,MAAME,OAAS,GAAIT,MAC/CH,EAAOU,MAAMG,KAAO,GAAIjB,EAAMkB,SAAWjB,KAAKS,iBAAiBS,wBAAwBF,KAAOG,OAAOC,QAAUR,OAC/GT,EAAOU,MAAMQ,IAAM,GAAItB,EAAMuB,SAAWtB,KAAKS,iBAAiBS,wBAAwBG,IAAMF,OAAOI,QAAUX,OAC7GT,EAAOqB,UAAUC,IAAI,UAErB,MAAMxB,EAASD,KAAKS,iBAAiBiB,cAAc,WAEnD,GAAIzB,EAAQ,CACVA,EAAO0B,Q,CAGT3B,KAAKS,iBAAiBmB,YAAYzB,E,CAMpC,MAAA0B,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OACEE,IAAOC,GAAyBjC,KAAKS,iBAAmBwB,EACxDC,MAAQ,CACNC,UAAW,KACXC,OAAQpC,KAAKqC,aACb,CAAC,QAASrC,KAAKsC,QAAU,KACzB,CAAC,SAAUtC,KAAKuC,SAAW,KAC3B,CAAC,SAAUvC,KAAKc,SAAW,OAE7BgB,EAAA,OAAKI,MAAM,gBACPlC,KAAKwC,yBAETV,EAAA,OAAKI,MAAM,QACTJ,EAAA,cAEFA,EAAA,OAAKI,MAAM,gBACPlC,KAAKyC,2B,CAUT,sBAAAA,GACN,GAAIzC,KAAK0C,cAAe,CACtB,OACEZ,EAACa,EAAQ,KACPb,EAAA,QAAMc,KAAK,QACP5C,KAAK6C,mB,EAUT,qBAAAL,GACN,GAAIxC,KAAK8C,aAAc,CACrB,OACEhB,EAACa,EAAQ,KACPb,EAAA,QAAMc,KAAK,QACP5C,KAAK+C,kB,EAUT,eAAAF,GACN,GAAI7C,KAAKgD,UAAW,CAClB,OACElB,EAACa,EAAQ,KACPb,EAAA,OAAKI,MAAM,OAAOe,IAAMjD,KAAKgD,UAAYE,IAAMC,EAAUC,iBAAiBpD,KAAKgD,a,CAIrF,OACElB,EAACa,EAAQ,KACPb,EAAA,OAAKuB,UAAYC,EAAepB,MAAM,kB,CAQpC,cAAAa,GACN,GAAI/C,KAAKuD,SAAU,CACjB,OACEzB,EAACa,EAAQ,KACPb,EAAA,OAAKI,MAAM,OAAOe,IAAMjD,KAAKuD,SAAWL,IAAMC,EAAUC,iBAAiBpD,KAAKuD,Y,CAIpF,GAAIvD,KAAK8C,aAAc,CACrB,OACEhB,EAACa,EAAQ,KACPb,EAAA,OAAKuB,UAAYG,EAActB,MAAM,kB"}
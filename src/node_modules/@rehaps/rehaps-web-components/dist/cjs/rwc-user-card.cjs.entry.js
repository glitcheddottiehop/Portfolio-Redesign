'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-4ca922a8.js');
const account_circle = require('./account_circle-5f308b70.js');

const LocationIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zM7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 2.88-2.88 7.19-5 9.88C9.92 16.21 7 11.85 7 9z"/><circle cx="12" cy="9" r="2.5"/></svg>`;

const StarIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27z"/></svg>`;

const userCardCss = "@font-face{font-family:\"Inter\";font-style:normal;font-weight:400;font-display:swap;src:url(\"assets/fonts/inter/Inter-Regular.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Regular.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:500;font-display:swap;src:url(\"assets/fonts/inter/Inter-Medium.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Medium.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:600;font-display:swap;src:url(\"assets/fonts/inter/Inter-SemiBold.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-SemiBold.woff?v=1.0\") format(\"woff\")}:host{--user-card-border-width:2px;--user-card-border-style:solid;--user-card-border-color:rgb(224, 224, 224);--user-card-hover-border-color:rgb(144, 238, 144);--user-card-border-radius:0.75rem;--user-card-border-transition:border-bottom-color 0.4s,\n    border-left-color 0.4s,\n    border-right-color 0.4s,\n    border-top-color 0.4s,\n    width 0.4s ease-in-out,\n    height 0.4s ease-in-out;--user-card-box-shadow:0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);--user-card-box-shadow-animated-hover:0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1);--user-card-container-transition:box-shadow 0.4s ease-in-out;--user-card-content-spacing:0.5rem;--user-card-description-margin-top:1rem;--user-card-font-size-header:1.25rem;--user-card-font-size-name:1.25rem;--user-card-font-size-heading:1.5rem;--user-card-font-weight-bold:500;--user-card-font-weight-extra-bold:600;--user-card-inner-padding:1rem;--user-card-icon-size:5.625rem;--user-card-icon-sm-size:1.406rem;--user-card-icon-color:rgb(117, 117, 117);--user-card-icon-sm-color:rgb(33, 33, 33);--user-card-icon-sm-margin-right:0.25rem;display:block}.card{--card-border-width:var(--user-card-border-width);--card-border-style:var(--user-card-border-style);--card-border-color:var(--user-card-border-color);--card-hover-border-color:var(--user-card-hover-border-color);--card-border-radius:var(--user-card-border-radius);--card-border-transition:var(--user-card-border-transition);--card-box-shadow-animated-hover:var(--user-card-box-shadow-animated-hover);--card-container-transition:var(--user-card-container-transition);--card-inner-padding:var(--user-card-inner-padding);--card-box-shadow:var(--user-card-box-shadow)}.container{display:flex;flex-direction:column;text-align:center}.header{display:flex;justify-content:flex-end;font-size:var(--user-card-font-size-header);font-weight:var(--user-card-font-weight-extra-bold)}.name{font-size:var(--user-card-font-size-name)}.heading{font-size:var(--user-card-font-size-heading);font-weight:var(--user-card-font-weight-bold)}.description{font-size:0.875rem;margin-top:var(--user-card-description-margin-top)}.content-spacing{margin-top:var(--user-card-content-spacing)}.avatar{align-self:center;flex-shrink:0;height:var(--user-card-icon-size);width:var(--user-card-icon-size)}.avatar svg{height:100%;width:100%}.avatar path{fill:var(--user-card-icon-color)}.avatar img{width:100%;height:100%}.avatar img.rounded{border-radius:50%}.location-icon,.rating-icon{display:flex;justify-content:center}.location-icon svg,.rating-icon svg{height:100%;width:100%}.location-icon .svg-icon,.rating-icon .svg-icon{margin-right:var(--user-card-icon-sm-margin-right)}.location-icon path,.rating-icon path{fill:var(--user-card-icon-sm-color)}.location-icon img,.rating-icon img{width:var(--user-card-icon-sm-size);height:var(--user-card-icon-sm-size)}";

const RwcUserCard = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.avatar = '';
    this.roundedAvatar = false;
    this.renderShadow = true;
    this.renderBorder = false;
    this.animateBorder = false;
    this.locationIcon = '';
    this.ratingIcon = '';
    this.pointer = false;
  }
  get hasLocation() {
    return Boolean(this.host.querySelector('[slot="location"]'));
  }
  get hasRating() {
    return Boolean(this.host.querySelector('[slot="rating"]'));
  }
  render() {
    return (index.h(index.Host, null, index.h("rwc-card", { class: "card", renderShadow: this.renderShadow, renderBorder: this.renderBorder, animateBorder: this.animateBorder, pointer: this.pointer }, index.h("div", { class: "container" }, index.h("div", { class: "header" }, index.h("slot", { name: "header" })), index.h("div", { class: "avatar" }, index.h("slot", { name: "avatar" }, this.renderIcon('avatar'))), index.h("div", { class: "name content-spacing" }, index.h("slot", { name: "name" })), index.h("div", { class: "heading content-spacing" }, index.h("slot", { name: "heading" })), this.renderLocation(), this.renderRating(), index.h("div", { class: "description" }, index.h("slot", { name: "description" }))))));
  }
  renderLocation() {
    if (this.hasLocation) {
      return (index.h("div", { class: "location-icon content-spacing" }, index.h("span", null, this.renderIcon('location')), index.h("span", null, index.h("slot", { name: "location" }))));
    }
  }
  renderRating() {
    if (this.hasRating) {
      return (index.h("div", { class: "rating-icon content-spacing" }, index.h("span", null, this.renderIcon('rating')), index.h("span", null, index.h("slot", { name: "rating" }))));
    }
  }
  renderIcon(icon) {
    switch (icon) {
      case 'location':
        if (this.locationIcon) {
          return (index.h("img", { src: this.locationIcon, alt: "location-icon" }));
        }
        return (index.h("div", { innerHTML: LocationIcon, class: "svg-icon" }));
      case 'rating':
        if (this.ratingIcon) {
          return (index.h("img", { src: this.ratingIcon, alt: "rating-icon" }));
        }
        return (index.h("div", { innerHTML: StarIcon, class: "svg-icon" }));
      default:
        if (this.avatar) {
          return (index.h("img", { src: this.avatar, alt: "avatar", class: { rounded: this.roundedAvatar } }));
        }
        return (index.h("div", { innerHTML: account_circle.AccountIcon, class: "svg-icon" }));
    }
  }
  get host() { return index.getElement(this); }
};
RwcUserCard.style = userCardCss;

exports.rwc_user_card = RwcUserCard;

//# sourceMappingURL=rwc-user-card.cjs.entry.js.map
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-4ca922a8.js');
const expand_more = require('./expand_more-85d439f6.js');

const accordionCss = "@font-face{font-family:\"Inter\";font-style:normal;font-weight:400;font-display:swap;src:url(\"assets/fonts/inter/Inter-Regular.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Regular.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:500;font-display:swap;src:url(\"assets/fonts/inter/Inter-Medium.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Medium.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:600;font-display:swap;src:url(\"assets/fonts/inter/Inter-SemiBold.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-SemiBold.woff?v=1.0\") format(\"woff\")}:host{--accordion-default-font-family:Inter, system-ui, sans-serif;--accordion-heading-padding:0.5rem 0;--accordion-heading-font-family:var(--accordion-default-font-family);--accordion-heading-font-size:1.25rem;--accordion-heading-font-weight:500;--accordion-content-line-height:1.2;--accordion-content-padding:0.5rem 0 1rem 0;--accordion-content-font-family:var(--accordion-default-font-family);--accordion-content-font-size:1rem;--accordion-content-font-weight:400;--accordion-content-line-height:1.2;--accordion-divider-background-color:rgb(224, 224, 224);--accordion-divider-height:1px;--accordion-icon-color:rgb(189, 189, 189);--accordion-icon-open-transform:rotate(-180deg);--accordion-animation-duration:200ms;display:block}.heading{cursor:pointer;user-select:none;font-family:var(--accordion-heading-font-family);font-size:var(--accordion-heading-font-size);font-weight:var(--accordion-heading-font-weight);line-height:var(--accordion-content-line-height);padding:var(--accordion-heading-padding)}.heading.with-icon{display:flex;flex-direction:row;justify-content:space-between}.left,.right{display:flex;flex-direction:column;justify-content:center}.left{flex-grow:1}.right{flex-shrink:0}.icon{display:flex;flex-direction:column;justify-content:center;fill:var(--accordion-icon-color);transition:transform var(--accordion-animation-duration) ease-in-out}.content-wrapper{height:0;overflow:hidden;transition:height var(--accordion-animation-duration) ease-in-out}.content{font-family:var(--accordion-default-font-family);font-size:var(--accordion-content-font-size);font-weight:var(--accordion-content-font-weight);padding:var(--accordion-content-padding)}.divider{background-color:var(--accordion-divider-background-color);height:var(--accordion-divider-height)}.open .content-wrapper{height:auto}.open .icon.rotate{transform:var(--accordion-icon-open-transform)}";

const RwcAccordion = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.open = false;
    this.renderDivider = true;
    this.renderIcon = true;
  }
  get animationDuration() {
    return Number.parseInt(getComputedStyle(this.host).getPropertyValue('--accordion-animation-duration'));
  }
  onHeadingClick() {
    this.setState(!this.open);
  }
  async setState(value) {
    if (this.animationCallback !== null) {
      clearTimeout(this.animationCallback);
    }
    this.open = value;
    if (value) {
      this.contentWrapperElement.style.height = `${this.contentElement.offsetHeight}px`;
    }
    else {
      this.contentWrapperElement.style.height = `${this.contentElement.offsetHeight}px`;
      await new Promise(requestAnimationFrame);
      this.contentWrapperElement.style.height = `0px`;
    }
    this.animationCallback = setTimeout(() => {
      this.contentWrapperElement.style.height = '';
      this.animationCallback = null;
    }, this.animationDuration);
  }
  render() {
    return (index.h(index.Host, { class: {
        open: this.open,
      } }, index.h("div", { class: {
        container: true,
        open: this.open
      } }, index.h("div", { class: {
        heading: true,
        'with-icon': this.renderIcon
      }, onClick: () => this.onHeadingClick() }, index.h("div", { class: "left" }, index.h("slot", { name: "heading" })), this.renderHeadingIconContainer()), index.h("div", { ref: (element) => this.contentWrapperElement = element, class: "content-wrapper" }, index.h("div", { ref: (element) => this.contentElement = element, class: "content" }, index.h("slot", null))), this.renderDividerElement())));
  }
  renderDividerElement() {
    if (this.renderDivider) {
      return index.h("div", { class: "divider" });
    }
    return index.h(index.Fragment, null);
  }
  renderHeadingIconContainer() {
    if (this.renderIcon) {
      return (index.h("div", { class: "right" }, index.h("slot", { name: "heading-icon" }, this.renderDefaultIcon())));
    }
    return index.h(index.Fragment, null);
  }
  renderDefaultIcon() {
    return index.h("div", { class: "icon rotate", innerHTML: expand_more.ExpandMore });
  }
  get host() { return index.getElement(this); }
};
RwcAccordion.style = accordionCss;

const navigationCss = "@font-face{font-family:\"Inter\";font-style:normal;font-weight:400;font-display:swap;src:url(\"assets/fonts/inter/Inter-Regular.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Regular.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:500;font-display:swap;src:url(\"assets/fonts/inter/Inter-Medium.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Medium.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:600;font-display:swap;src:url(\"assets/fonts/inter/Inter-SemiBold.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-SemiBold.woff?v=1.0\") format(\"woff\")}:host{--navigation-container-padding:0.5rem;--navigation-container-border:none;--navigation-container-border-radius:none;--navigation-font-family:Inter, system-ui, sans-serif;--navigation-font-size:1rem;--navigation-font-weight:500;--navigation-line-height:1.2;display:block}.container{display:flex;flex-direction:row;font-family:var(--navigation-font-family);font-size:var(--navigation-font-size);font-weight:var(--navigation-font-weight);line-height:var(--navigation-line-height);padding:var(--navigation-container-padding);border:var(--navigation-container-border);border-radius:var(--navigation-container-border-radius)}.container.vertical,.container.accordion{flex-direction:column}";

const RwcNavigation = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.type = 'horizontal';
  }
  render() {
    return (index.h(index.Host, null, index.h("div", { class: {
        container: true,
        [this.type]: true
      } }, index.h("slot", { name: "before" }), index.h("slot", null), index.h("slot", { name: "after" }))));
  }
};
RwcNavigation.style = navigationCss;

exports.rwc_accordion = RwcAccordion;
exports.rwc_navigation = RwcNavigation;

//# sourceMappingURL=rwc-accordion_2.cjs.entry.js.map
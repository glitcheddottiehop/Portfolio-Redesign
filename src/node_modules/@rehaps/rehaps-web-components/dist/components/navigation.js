import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const navigationCss = "@font-face{font-family:\"Inter\";font-style:normal;font-weight:400;font-display:swap;src:url(\"assets/fonts/inter/Inter-Regular.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Regular.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:500;font-display:swap;src:url(\"assets/fonts/inter/Inter-Medium.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Medium.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:600;font-display:swap;src:url(\"assets/fonts/inter/Inter-SemiBold.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-SemiBold.woff?v=1.0\") format(\"woff\")}:host{--navigation-container-padding:0.5rem;--navigation-container-border:none;--navigation-container-border-radius:none;--navigation-font-family:Inter, system-ui, sans-serif;--navigation-font-size:1rem;--navigation-font-weight:500;--navigation-line-height:1.2;display:block}.container{display:flex;flex-direction:row;font-family:var(--navigation-font-family);font-size:var(--navigation-font-size);font-weight:var(--navigation-font-weight);line-height:var(--navigation-line-height);padding:var(--navigation-container-padding);border:var(--navigation-container-border);border-radius:var(--navigation-container-border-radius)}.container.vertical,.container.accordion{flex-direction:column}";

const RwcNavigation = proxyCustomElement(class RwcNavigation extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.type = 'horizontal';
  }
  render() {
    return (h(Host, null, h("div", { class: {
        container: true,
        [this.type]: true
      } }, h("slot", { name: "before" }), h("slot", null), h("slot", { name: "after" }))));
  }
  static get style() { return navigationCss; }
}, [1, "rwc-navigation", {
    "type": [513]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["rwc-navigation"];
  components.forEach(tagName => { switch (tagName) {
    case "rwc-navigation":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, RwcNavigation);
      }
      break;
  } });
}

export { RwcNavigation as R, defineCustomElement as d };

//# sourceMappingURL=navigation.js.map
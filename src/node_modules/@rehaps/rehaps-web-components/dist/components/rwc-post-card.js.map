{"file":"rwc-post-card.js","mappings":";;;;AAAA,MAAM,WAAW,GAAG,wlGAAwlG;;MCQ/lGA,aAAW;;;;;kBAIoB,EAAE;yBAKX,KAAK;wBAKW,IAAI;wBAKJ,KAAK;yBAKJ,KAAK;mBAK5B,KAAK;;EAKhC,MAAM;IACJ,QACE,EAAC,IAAI,QACH,gBACE,KAAK,EAAC,MAAM,EACZ,YAAY,EAAG,IAAI,CAAC,YAAY,EAChC,YAAY,EAAG,IAAI,CAAC,YAAY,EAChC,aAAa,EAAG,IAAI,CAAC,aAAa,EAClC,OAAO,EAAG,IAAI,CAAC,OAAO,IAEtB,WAAK,KAAK,EAAC,WAAW,IACpB,WAAK,KAAK,EAAC,MAAM,IACf,WAAK,KAAK,EAAC,QAAQ,IACjB,YAAM,IAAI,EAAC,QAAQ,IACf,IAAI,CAAC,YAAY,EAAE,CAChB,CACH,EACN,WAAK,KAAK,EAAC,MAAM,IACf,YAAM,IAAI,EAAC,MAAM,GAAQ,CACrB,CACF,EACN,WAAK,KAAK,EAAC,MAAM,IACf,WAAK,KAAK,EAAC,yBAAyB,IAClC,YAAM,IAAI,EAAC,SAAS,GAAQ,CACxB,EACN,WAAK,KAAK,EAAC,6BAA6B,IACtC,YAAM,IAAI,EAAC,aAAa,GAAQ,CAC5B,EACN,WAAK,KAAK,EAAC,wBAAwB,IACjC,YAAM,IAAI,EAAC,QAAQ,GAAQ,CACvB,CACF,CACF,CACG,CACN,EACR;GACF;EAKD,YAAY;IACV,IAAI,IAAI,CAAC,MAAM,EAAE;MACf,QACE,WACE,GAAG,EAAG,IAAI,CAAC,MAAM,EACjB,GAAG,EAAC,QAAQ,EACZ,KAAK,EAAG;UACN,IAAI,EAAE,IAAI;UACV,OAAO,EAAE,IAAI,CAAC,aAAa;SAC5B,GACD,EACH;KACF;IACD,QACE,WAAK,SAAS,EAAG,WAAW,EAAG,KAAK,EAAC,UAAU,GAAO,EACvD;GACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["RwcPostCard"],"sources":["src/components/basic/cards/post-card/post-card.scss?tag=rwc-post-card&encapsulation=shadow","src/components/basic/cards/post-card/post-card.tsx"],"sourcesContent":["@import 'global.scss';\n\n:host {\n  /**\n  * @prop --post-card-border-width: The border width of the post card.\n  * @prop --post-card-border-style: The style of the border of the post card.\n  * @prop --post-card-border-color: The color of the border of the post card.\n  * @prop --post-card-hover-border-color: The color of the border of the card on hover.\n  * @prop --post-card-border-radius: The border radius of the post card.\n  * @prop --post-card-border-transition: The transition of the border of the post card.\n  * @prop --post-card-box-shadow: The shadow of the post card.\n  * @prop --post-card-box-shadow-animated-hover: The animation of the box shadow of the post card on hover.\n  * @prop --post-card-container-transition: The transition of the container of the post card.\n  * @prop --post-card-inner-padding: The inner padding of the post card.\n  * @prop --post-card-icon-size: The size of the icon of the post card.\n  * @prop --post-card-icon-margin-right: The margin size from right of the icon of the post card.\n  * @prop --post-card-icon-color: The color of the icon of the post card.\n  * @prop --post-card-content-spacing: The bottom spacing of the content of the post card. \n  * @prop --post-card-content-justify-start: The horizontal aligment of the contents of the post card.\n  * @prop --post-card-content-justify-end: The horizontal aligment of the contents of the post card.\n  * @prop --post-card-font-size-lg: The large font size of the post cards.\n  * @prop --post-card-font-size-md: The medium font size of the post card.\n  * @prop --post-card-font-size-sm: The small font size of the post card.\n  * @prop --post-card-gap: The gap between the elements of the post card.\n  * @prop display: The display mode of the host element.\n  * @prop font-family: The font family of the host element.\n  */\n  --post-card-border-width: 2px;\n  --post-card-border-style: solid;\n  --post-card-border-color: #{$rwc-color-border-primary};\n  --post-card-hover-border-color: #{$rwc-color-border-active};\n  --post-card-border-radius: #{$rwc-spacing--sm};\n  --post-card-border-transition:\n    border-bottom-color 0.4s,\n    border-left-color 0.4s,\n    border-right-color 0.4s,\n    border-top-color 0.4s,\n    width 0.4s ease-in-out,\n    height 0.4s ease-in-out;\n  --post-card-box-shadow: #{$rwc-box-shadow-lg};\n  --post-card-box-shadow-animated-hover: #{$rwc-box-shadow-xl};\n  --post-card-container-transition: box-shadow 0.4s ease-in-out;\n\n  --post-card-content-justify-start: start;\n  --post-card-content-justify-end: end;\n\n  --post-card-content-spacing: #{$rwc-spacing--xs};\n  --post-card-inner-padding: #{$rwc-spacing--md};\n\n  --post-card-font-size-lg: #{$rwc-font-size-body-lg};\n  --post-card-font-size-md: #{$rwc-font-size-body-md};\n  --post-card-font-size-sm: #{$rwc-font-size-body-sm};\n\n  --post-card-icon-size: 2.5rem;\n  --post-card-icon-margin-right: 1rem;\n  --post-card-icon-color: #{$rwc-color-grey-600};\n\n  --post-card-gap: #{$rwc-spacing--xs};\n\n  font-family: #{$rwc-font-family-default};\n\n  display: block;\n}\n\n.card {\n  --card-border-width: var(--post-card-border-width);\n  --card-border-style: var(--post-card-border-style);\n  --card-border-color: var(--post-card-border-color);\n  --card-hover-border-color: var(--post-card-hover-border-color);\n  --card-border-radius: var(--post-card-border-radius);\n  --card-border-transition: var(--post-card-border-transition);\n  --card-box-shadow-animated-hover: var(--post-card-box-shadow-animated-hover);\n  --card-container-transition: var(--post-card-container-transition);\n  --card-inner-padding: var(--post-card-inner-padding);\n  --card-box-shadow: var(--post-card-box-shadow);\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n.user {\n  display: flex;\n  align-items: center;\n  justify-content: var(--post-card-content-justify-start);\n}\n\n.name {\n  font-size: var(--post-card-font-size-lg);\n}\n\n.heading {\n  font-weight: bold;\n  font-size: var(--post-card-font-size-md);\n}\n\n.description {\n  font-size: var(--post-card-font-size-sm);\n}\n\n.footer {\n  font-size: var(--post-card-font-size-sm);\n  display: flex;\n  align-items: center;\n  justify-content: var(--post-card-content-justify-end);\n  gap: var(--post-card-gap);\n}\n\n.content-spacing {\n  margin-top: var(--post-card-content-spacing);\n}\n\n.avatar {\n  align-self: center;\n  flex-shrink: 0;\n  height: var(--post-card-icon-size);\n  width: var(--post-card-icon-size);\n  margin-right: var(--post-card-icon-margin-right);\n\n  svg {\n    height: 100%;\n    width: 100%;\n  }\n\n  path {\n    fill: var(--post-card-icon-color);\n  }\n\n  .icon {\n    width: 100%;\n    height: 100%;\n  }\n\n  .rounded {\n    border-radius: 50%;\n  }\n}\n","import { Component, h, Prop, Host, FunctionalComponent } from '@stencil/core';\nimport AccountIcon from '@material-design-icons/svg/outlined/account_circle.svg';\n\n@Component({\n  tag: 'rwc-post-card',\n  styleUrl: 'post-card.scss',\n  shadow: true\n})\nexport class RwcPostCard {\n  /**\n   * Path to the avatar.\n   */\n  @Prop({ reflect: true }) avatar: string = '';\n\n  /**\n   * Set avatar rounded.\n   */\n  @Prop() roundedAvatar: boolean = false;\n\n  /**\n   * Set rendering of box-shadow.\n   */\n  @Prop({ reflect: true }) renderShadow: boolean = true;\n\n  /**\n   * Set rendering of border.\n   */\n  @Prop({ reflect: true }) renderBorder: boolean = false;\n\n  /**\n   * Animate border on hover.\n   */\n  @Prop({ reflect: true }) animateBorder: boolean = false;\n\n  /**\n   * Change cursor to pointer on hover.\n   */\n  @Prop() pointer: boolean = false;\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <rwc-card\n          class=\"card\"\n          renderShadow={ this.renderShadow }\n          renderBorder={ this.renderBorder }\n          animateBorder={ this.animateBorder }\n          pointer={ this.pointer }\n        >\n          <div class=\"container\">\n            <div class=\"user\">\n              <div class=\"avatar\">\n                <slot name=\"avatar\">\n                  { this.renderAvatar() }\n                </slot>\n              </div>\n              <div class=\"name\">\n                <slot name=\"name\"></slot>\n              </div>\n            </div>\n            <div class=\"text\">\n              <div class=\"heading content-spacing\">\n                <slot name=\"heading\"></slot>\n              </div>\n              <div class=\"description content-spacing\">\n                <slot name=\"description\"></slot>\n              </div>\n              <div class=\"footer content-spacing\">\n                <slot name=\"footer\"></slot>\n              </div>\n            </div>\n          </div>\n        </rwc-card>\n      </Host>\n    )\n  }\n\n  /**\n   * Renders the avatar element.\n   */\n  renderAvatar(): FunctionalComponent {\n    if (this.avatar) {\n      return (\n        <img\n          src={ this.avatar }\n          alt=\"avatar\"\n          class={ {\n            icon: true,\n            rounded: this.roundedAvatar\n          } }\n        />\n      )\n    }\n    return (\n      <div innerHTML={ AccountIcon } class=\"svg-icon\"></div>\n    )\n  }\n}\n"],"version":3}
import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const autoLayoutCss = "@font-face{font-family:\"Inter\";font-style:normal;font-weight:400;font-display:swap;src:url(\"assets/fonts/inter/Inter-Regular.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Regular.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:500;font-display:swap;src:url(\"assets/fonts/inter/Inter-Medium.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Medium.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:600;font-display:swap;src:url(\"assets/fonts/inter/Inter-SemiBold.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-SemiBold.woff?v=1.0\") format(\"woff\")}:host{--auto-layout-gap:0.5rem;display:block}.container{display:flex;gap:var(--auto-layout-gap);flex-wrap:wrap}";

const RwcAutoLayout$1 = proxyCustomElement(class RwcAutoLayout extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
  }
  render() {
    return (h(Host, null, h("div", { class: "container" }, h("slot", null))));
  }
  static get style() { return autoLayoutCss; }
}, [1, "rwc-auto-layout"]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["rwc-auto-layout"];
  components.forEach(tagName => { switch (tagName) {
    case "rwc-auto-layout":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, RwcAutoLayout$1);
      }
      break;
  } });
}

const RwcAutoLayout = RwcAutoLayout$1;
const defineCustomElement = defineCustomElement$1;

export { RwcAutoLayout, defineCustomElement };

//# sourceMappingURL=rwc-auto-layout.js.map
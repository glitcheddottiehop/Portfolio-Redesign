import { r as registerInstance, h, a as Host } from './index-e9508d80.js';

const ChevronDown = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6-1.41-1.41z"/></svg>`;

const selectCss = "@font-face{font-family:\"Inter\";font-style:normal;font-weight:400;font-display:swap;src:url(\"assets/fonts/inter/Inter-Regular.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Regular.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:500;font-display:swap;src:url(\"assets/fonts/inter/Inter-Medium.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-Medium.woff?v=1.0\") format(\"woff\")}@font-face{font-family:\"Inter\";font-style:normal;font-weight:600;font-display:swap;src:url(\"assets/fonts/inter/Inter-SemiBold.woff2?v=1.0\") format(\"woff2\"), url(\"assets/fonts/inter/Inter-SemiBold.woff?v=1.0\") format(\"woff\")}:host{--select-animation-duration:100ms;--select-border:1px solid #D2D3D3;--select-border-radius:0.5rem;--select-option-hover-background-color:rgb(238, 238, 238);--select-font-color:rgb(33, 33, 33);--select-font-size:1rem;--select-icon-color:rgb(33, 33, 33);--select-icon-size:1.25rem;--select-icon-transition:transform var(--select-animation-duration) linear;--select-padding:0.5rem 0.75rem;--select-dropdown-background-color:#fff;--select-dropdown-border:1px solid rgb(224, 224, 224);--select-dropdown-border-radius:0.5rem;--select-dropdown-box-shadow:0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);--select-dropdown-max-width:100%;--select-dropdown-container-padding:0.5rem 1rem;--select-dropdown-container-margin:0.5rem 0 0 0;display:block}.dropdown{--dropdown-background-color:var(--select-dropdown-background-color);--dropdown-border:var(--select-dropdown-border);--dropdown-border-radius:var( --select-dropdown-border-radius);--dropdown-box-shadow:var(--select-dropdown-box-shadow);--dropdown-max-width:var( --select-dropdown-max-width);--dropdown-container-padding:var(--select-dropdown-container-padding);--dropdown-container-margin:var(--select-dropdown-container-margin)}.container{border:var(--select-border);align-items:center;font-size:var(--select-font-size);padding:var(--select-padding);color:var(--select-font-color);border-radius:var(--select-border-radius)}.wrapper{display:flex;justify-content:space-between;align-items:center}.icon{align-self:center;flex-shrink:0;height:var(--select-icon-size);width:var(--select-icon-size)}.icon svg{height:100%;width:100%}.icon path{fill:var(--select-icon-color)}img{height:var(--select-icon-size);width:var(--select-icon-size)}.rotate{transition:var(--select-icon-transition)}.rotate.open{transform:rotate(180deg)}.dropdown ::slotted(option:hover){background-color:var(--select-option-hover-background-color)}.dropdown ::slotted(option){text-overflow:ellipsis;overflow:hidden}.pointer{cursor:pointer}";

const RwcSelect = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.icon = '';
    this.pointer = false;
    this.value = '';
    this.text = '';
    this.isOpen = false;
  }
  onSelectClick(event) {
    this.optionsSlot.assignedElements().forEach((element) => {
      if (event.target === element) {
        this.setValue(element.value);
      }
    });
  }
  onDropdownOpen() {
    this.isOpen = true;
  }
  onDropdownClose() {
    this.isOpen = false;
  }
  componentDidLoad() {
    this.setValue(this.value);
  }
  async setValue(value) {
    this.optionsSlot.assignedElements().forEach((element) => {
      if (value === element.value) {
        this.value = element.value;
        this.text = element.text;
        this.dropdownElement.setState(false);
      }
    });
  }
  render() {
    return (h(Host, null, h("div", { class: {
        container: true,
        pointer: this.pointer,
      } }, h("div", { class: "wrapper" }, h("div", { class: "value" }, this.text), h("div", { slot: "right", class: {
        rotate: true,
        open: this.isOpen
      } }, h("slot", { name: "icon-right" }, this.renderIcon()))), h("rwc-dropdown", { class: "dropdown", "open-mode": "toggle", size: "parent", mode: 'fixed', ref: (dropdown) => this.dropdownElement = dropdown }, h("slot", { name: "option", ref: (slot) => this.optionsSlot = slot })))));
  }
  renderIcon() {
    if (this.icon) {
      return (h("img", { src: this.icon, alt: "icon" }));
    }
    return (h("div", { innerHTML: ChevronDown, class: "icon svg-icon" }));
  }
};
RwcSelect.style = selectCss;

export { RwcSelect as rwc_select };

//# sourceMappingURL=rwc-select.entry.js.map
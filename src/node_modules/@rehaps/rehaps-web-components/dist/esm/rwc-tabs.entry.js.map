{"file":"rwc-tabs.entry.js","mappings":"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","names":[],"sources":["src/interfaces/data/dragState.ts","src/interfaces/data/scrollPosition.ts","src/utils/actions/dragMove.ts","src/components/basic/tabs/tabs.scss?tag=rwc-tabs&encapsulation=shadow","src/components/basic/tabs/tabs.tsx"],"sourcesContent":["export class DragState {\n    public dragging: boolean;\n    public moving: boolean;\n    \n    constructor(dragging: boolean = false, moving: boolean = false) {\n        this.dragging = dragging;\n        this.moving = moving;\n    }\n}\n","export class ScrollPosition {\n    public left: number;\n    public top: number;\n    public x: number;\n    public y: number;\n    \n    constructor(left: number = 0, top: number = 0, x: number = 0, y: number = 0) {\n        this.left = left;\n        this.top = top;\n        this.x = x;\n        this.y = y;\n    }\n}\n","import { DragState } from './../../interfaces/data/dragState';\nimport { ScrollPosition } from './../../interfaces/data/scrollPosition';\nexport class DragMove {\n  static DRAG_STATE_DELAY: number = 200;\n\n  private position: ScrollPosition = new ScrollPosition();\n  private state = new DragState();\n  private element: HTMLElement | null = null;\n  private initialCursorStyle: string = '';\n  private dragTimeout: NodeJS.Timeout | null = null;\n\n  public get dragging() {\n    return this.state.dragging && this.state.moving;\n  }\n\n  constructor(element: HTMLElement) {\n    this.init(element);\n  }\n\n  /**\n   * Initialize drag move for the given element\n   */\n  init(element: HTMLElement): void {\n    this.element = element;\n    this.initialCursorStyle = element.style.cursor || '';\n    this.element.addEventListener('mousedown', this.mouseDownHandler);\n  }\n\n  /**\n   * Start drag move for the given element if cursor is inside the element\n   */\n  mouseDownHandler = (event: MouseEvent) => {\n    if (event.composedPath().includes(this.element)) {\n      this.startDrag();\n      this.position = {\n        left: this.element.scrollLeft,\n        top: this.element.scrollTop,\n        x: event.clientX,\n        y: event.clientY\n      };\n\n      document.addEventListener('mousemove', this.mouseMoveHandler);\n      document.addEventListener('mouseup', this.mouseUpHandler);\n    }\n  }\n\n  /**\n   * Handle mouse movement if mouse down was triggered inside the element\n   */\n  mouseMoveHandler = (event: MouseEvent) => {\n    // How far the mouse has been moved\n    const dx = event.clientX - this.position.x;\n    const dy = event.clientY - this.position.y;\n\n    if (dx !== 0 || dy !== 0) {\n      this.state.moving = true;\n    }\n\n    // Scroll the element\n    this.element.scrollTop = this.position.top - dy;\n    this.element.scrollLeft = this.position.left - dx;\n  }\n\n  /**\n   * Stop drag move and unregister mouse move / up listeners\n   */\n  mouseUpHandler = () => {\n    document.removeEventListener('mousemove', this.mouseMoveHandler);\n    document.removeEventListener('mouseup', this.mouseUpHandler);\n\n    this.element.style.cursor = this.initialCursorStyle;\n\n    this.stopDrag();\n  }\n\n  /**\n   * Remove drag move event listener from element\n   */\n  destroy(): void {\n    this.element.removeEventListener('mouseDown', this.mouseDownHandler);\n  }\n\n  /**\n   * Start new drag timeout for state update\n   */\n  startDrag(): void {\n    this.stopDrag();\n    this.dragTimeout = setTimeout(() => {\n      this.state.dragging = true;\n    }, DragMove.DRAG_STATE_DELAY);\n  }\n\n  /**\n   * Set drag move state to false and remove drag state timeout if set\n   */\n  stopDrag(): void {\n    if (this.dragTimeout !== null) {\n      clearTimeout(this.dragTimeout);\n      this.dragTimeout = null;\n    }\n\n    // Delay dragging state change so instant click event is not triggered on mouse up\n    if (this.state.dragging || this.state.moving) {\n      setTimeout(() => {\n        this.state.dragging = false;\n        this.state.moving = false;\n      }, 1);\n    }\n  }\n}\n","@import 'global.scss';\n\n:host {\n  /**\n   * @prop tabs-tab-text-color: The color of the text of the tab elements.\n   * @prop tabs-tab-hover-text-color: The color of the text of the tab elements on hover state.\n   * @prop tabs-tab-active-text-color: The color of the text of the tab elements on active state.\n   * @prop tabs-tab-padding: THe padding of the tab elements.\n   * @prop tabs-tab-border-bottom: The style of the bottom border of the tab elements by default.\n   * @prop tabs-tab-hover-border-bottom-color: The style of the bottom border of the tab elements on hover state.\n   * @prop tabs-tab-active-border-bottom-color: The style of the bottom border of the tab elements on active state.\n   * @prop tabs-tab-transition: The transition of the tab elements on state change.\n\n   * @prop tabs-segments-wrapper-background-color: The background color of the tabs wrapper in segment mode.\n   * @prop tabs-segments-wrapper-padding: The padding of the tabs wrapper in segments mode.\n   * @prop tabs-segments-wrapper-border-radius: The border radius of the segments wrapper in segments mode.\n\n   * @prop tabs-segment-text-color: The color of the text of the tab elements in segments mode.\n   * @prop tabs-segment-hover-text-color: The color of the text of the tab elements on hover state in segments mode.\n   * @prop tabs-segment-active-text-color: The color of the text of the tab elements on active state in segments mode.\n   * @prop tabs-segment-hover-background-color: The background color of the tab elemens on hover state in segments mode.\n   * @prop tabs-segment-transition-background-color: The transition of the background color of the tab elements in segments mode.\n   * @prop tabs-segment-transition-color: The transition of the text color of the tab elements in segments mode.\n\n   * @prop tabs-segment-indicator-background-color: The background color of the active tab indicator in segments mode.\n   * @prop tabs-segment-indicator-transition: The transition of the indicator styles in segments mode.\n\n   * @prop tabs-indicator-border-radius: Tge border radius of the active tab indicator in segments mode.\n\n   * @prop tabs-animation-duration: The duration of the animation of the component.\n\n   * @prop display: The display mode of the host element.\n   * @prop position: The position of the host element.\n   */\n  --tabs-tab-text-color: #{$rwc-color-text-primary};\n  --tabs-tab-hover-text-color: #{$rwc-color-text-primary};\n  --tabs-tab-active-text-color: #{$rwc-color-text-primary};\n  --tabs-tab-padding: #{$rwc-spacing--2xs} #{$rwc-spacing--xs};\n  --tabs-tab-border-bottom: 2px solid transparent;\n  --tabs-tab-hover-border-bottom-color: #{$rwc-color-border-primary};\n  --tabs-tab-active-border-bottom-color: #{$rwc-color-foundation-black};\n  --tabs-tab-transition: border-bottom-color var(--tabs-animation-duration) linear, color var(--tabs-animation-duration) linear;\n\n  --tabs-segments-wrapper-background-color: #{$rwc-color-grey-300};\n  --tabs-segments-wrapper-padding: #{$rwc-spacing--2xs};\n  --tabs-segments-wrapper-border-radius: 100vh;\n\n  --tabs-segment-text-color: #{$rwc-color-text-primary};\n  --tabs-segment-hover-text-color: #{$rwc-color-text-primary};\n  --tabs-segment-active-text-color: #{$rwc-color-foundation-white};\n  --tabs-segment-hover-background-color: #{$rwc-color-grey-200};\n  --tabs-segment-transition-background-color: background-color var(--tabs-animation-duration) linear;\n  --tabs-segment-transition-color: color var(--tabs-animation-duration) linear var(--tabs-animation-duration);\n\n  --tabs-segment-indicator-background-color: #{$rwc-color-foundation-black};\n  --tabs-segment-indicator-transition: left var(--tabs-animation-duration) ease-in-out, width var(--tabs-animation-duration) ease-in-out;\n\n  --tabs-indicator-border-radius: 100vh;\n\n  --tabs-animation-duration: 200ms;\n\n  display: block;\n  position: relative;\n}\n\n.container {\n  overflow-x: scroll;\n  position: relative;\n  /* Firefox */\n  scrollbar-width: none;\n  /* IE and Edge */\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n}\n\n.tabs-container {\n  width: fit-content;\n  position: relative;\n}\n\n.tabs-inner-container {\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  width: fit-content;\n  user-select: none;\n  z-index: 1;\n}\n\n.indicator {\n  bottom: 0;\n  left: 0;\n  position: absolute;\n}\n\n::slotted(*) {\n  cursor: pointer;\n  white-space: nowrap;\n  padding: var(--tabs-tab-padding);\n}\n\n.mode-underline {\n  ::slotted(*) {\n    border-bottom: var(--tabs-tab-border-bottom);\n    color: var(--tabs-tab-text-color);\n    transition: var(--tabs-tab-transition);\n  }\n\n  ::slotted(*:hover) {\n    border-bottom-color: var(--tabs-tab-hover-border-bottom-color);\n    color: var(--tabs-tab-hover-text-color);\n  }\n\n  ::slotted(.active) {\n    border-bottom-color: var(--tabs-tab-active-border-bottom-color);\n    color: var(--tabs-tab-active-text-color);\n  }\n}\n\n.mode-segments {\n  .tabs-wrapper {\n    background-color: var(--tabs-segments-wrapper-background-color);\n    padding: var(--tabs-segments-wrapper-padding);\n    border-radius: var(--tabs-segments-wrapper-border-radius);\n    width: fit-content;\n  }\n\n  .indicator {\n    background-color: var(--tabs-segment-indicator-background-color);\n    border-radius: var(--tabs-indicator-border-radius);\n    bottom: unset;\n    height: 100%;\n    top: 0;\n    transition: var(--tabs-segment-indicator-transition);\n  }\n\n  ::slotted(*) {\n    border-radius: 100vh;\n    color: var(--tabs-segment-text-color);\n    transition: var(--tabs-segment-transition-background-color), var(--tabs-segment-transition-color);\n  }\n\n  ::slotted(*:hover) {\n    color: var(--tabs-segment-hover-text-color);\n  }\n\n  ::slotted(*:hover:not(.active)) {\n    background-color: var(--tabs-segment-hover-background-color);\n  }\n\n  ::slotted(.active) {\n    color: var(--tabs-segment-active-text-color);\n    transition: var(--tabs-segment-transition-color);\n  }\n}\n","import { Component, h, Element, State, Prop, Event, EventEmitter, Method, FunctionalComponent, Listen, Host } from '@stencil/core';\nimport { IPaginable } from '../../../interfaces/actions/IPaginable';\nimport { TabsRenderMode } from '../../../interfaces/components/basic/tabs/tabs';\nimport { DragMove } from '../../../utils/actions/dragMove';\nimport { EventManager } from '../../../utils/actions/eventManager';\nimport { RWCActionHelper } from '../../../utils/actions/rwcActionHelper';\n\n@Component({\n  tag: 'rwc-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true\n})\nexport class RwcTabs implements IPaginable {\n  /**\n   * The class used for the currently active tab.\n   */\n  static ACTIVE_TAB_CLASS = 'active';\n\n  /**\n   * The reference to the host element.\n   */\n  @Element() host: HTMLRwcTabsElement;\n\n  /**\n   * The reference to the tabs wrapper element.\n   */\n  private tabsWrapper: HTMLDivElement;\n\n  /**\n   * Event manager used to manage component's event subscriptions.\n   */\n  public eventManager: EventManager = new EventManager();\n\n  /**\n   * Manages the events of the tab elements.\n   */\n  private tabEventManager: EventManager = new EventManager();\n\n  /**\n   * List of the actions available for the Tabs.\n   */\n  public actions: 'goTo'[] = ['goTo'];\n\n  /**\n   * The reference to the root element.\n   */\n  private root?: HTMLDivElement;\n\n  /**\n   * The reference to the element containing tabs.\n   */\n  private tabContainer?: HTMLSlotElement;\n\n  /**\n   * The reference to the tab elements.\n   */\n  private tabs?: HTMLElement[];\n\n  /**\n   * The reference to the indicator element.\n   */\n  private indicator?: HTMLDivElement;\n\n  /**\n   * Text animation coroutine interval object.\n   */\n  private textAnimationCoroutine: NodeJS.Timeout = null;\n\n  /**\n   * Utility object providing drag move functionality.\n   */\n  private dragMove: DragMove = null;\n\n  /**\n   * Key used for initializing event listeners.\n   */\n  @Prop({ reflect: true }) rwcKey = RWCActionHelper.getDefaultComponentKey('tabs');\n\n  /**\n   * Tab indicator render mode.\n   */\n  @Prop() mode: TabsRenderMode = 'underline';\n\n  /**\n   * Active tab on component load.\n   */\n  @Prop() defaultTab: number = 0;\n\n  /**\n   * Event fired when active tab change has been completed.\n   */\n  @Event({ eventName: 'indexChange' }) changeEvent: EventEmitter<GoToEventDetail>;\n\n  /**\n   * The currently active tab.\n   */\n  @State() activeTab: number = 0;\n  \n  /**\n   * Gets the currently active tab index in valid range.\n   */\n  private validateTargetIndex(value: number): number {\n    if (value > this.tabs.length - 1 || value < 0) {\n      return 0;\n    }\n    \n    return value;\n  }\n\n  /**\n   * Gets the left padding of the tabs wrapper element.\n   */\n  private get tabsWrapperPaddingLeft(): number {\n    return Number.parseFloat(getComputedStyle(this.tabsWrapper).paddingLeft ?? '0');\n  }\n\n  /**\n   * Keeps the active tab into the viewport.\n   */\n  @Listen('resize', { target: 'window' })\n  onWindowResize(): void {\n    this.resizeHandler();\n  }\n\n  /**\n   * Initialize default values.\n   */\n  componentWillLoad(): void {\n    this.activeTab = this.defaultTab > 0 ? this.defaultTab : 0;\n  }\n\n  /**\n   * Initializes event listeners on render.\n   */\n  componentDidLoad(): void {\n    this.init();\n  }\n\n  /**\n   * Destroy component's event listeners before component is destroyed.\n   */\n  disconnectedCallback(): void {\n    this.dragMove.destroy();\n    this.eventManager.clearEventListeners();\n  }\n\n  /**\n   * Initialize component.\n   */\n  init(): void {\n    this.initTabClickEvents();\n    this.initDefaultTab();\n    this.dragMove = new DragMove(this.root);\n    this.initGoToEventListeners();\n  }\n\n  /**\n   * Initialize default tab.\n   */\n  initDefaultTab(): void {\n    this.activeTab = this.validateTargetIndex(this.activeTab);\n    \n    if (this.tabs.length > 0) {\n      this.indicator.style.width = this.tabs[this.activeTab].getBoundingClientRect().width + 'px';\n      this.indicator.style.left = this.tabs[this.activeTab].offsetLeft - this.tabsWrapperPaddingLeft + 'px';\n      this.tabs[this.activeTab].classList.add('active');\n    }\n  }\n\n  /**\n   * Initialize click events for the tabs.\n   */\n  initTabClickEvents(): void {\n    this.tabEventManager.clearEventListeners();\n    this.tabs = this.tabContainer.assignedElements() as HTMLElement[];\n    this.tabs.forEach((element, index) => {\n      this.tabEventManager.registerEventListener(element, 'click', () => {\n        if (!this.dragMove.dragging) {\n          this.goTo(index);\n        }\n      });\n    });\n  }\n\n  /**\n   * Scroll active tab into viewport on resize.\n   */\n  resizeHandler: () => void = () => {\n    if (this.tabs?.length > 0) {\n      this.tabs[this.validateTargetIndex(this.activeTab)].scrollIntoView({ behavior: 'smooth', inline: 'center' });\n    }\n  }\n\n  /**\n   * Change active tab to provided index and start indicator animation.\n   */\n  @Method()\n  async goTo(targetIndex: number | CustomEvent): Promise<void> {\n    const parsedIndex: number = this.validateTargetIndex(targetIndex instanceof CustomEvent ? Number.parseInt(targetIndex.detail.next) : targetIndex);\n\n    if (this.activeTab !== targetIndex) {\n      this.tabs.forEach(tab => {\n        tab.classList.remove(RwcTabs.ACTIVE_TAB_CLASS);\n      });\n\n      this.tabs[parsedIndex].scrollIntoView({ behavior: 'smooth', inline: 'center' });\n      this.indicator.style.left = this.tabs[parsedIndex].offsetLeft - this.tabsWrapperPaddingLeft + 'px';\n      this.indicator.style.width = this.tabs[parsedIndex].getBoundingClientRect().width + 'px';\n      \n      const originalEvent = targetIndex instanceof CustomEvent ? targetIndex : null;\n      this.setActiveTab(parsedIndex, originalEvent);\n      this.cancelTextAnimation();\n    }\n  }\n\n  /**\n   * Set html and class properties for active tab and fire change event.\n   */\n  setActiveTab(index: number, originalEvent?: CustomEvent): void {\n    this.tabs[index].classList.add(RwcTabs.ACTIVE_TAB_CLASS);\n    this.changeEvent.emit(originalEvent?.detail ?? { origin: this.host, next: index, previous: this.activeTab });\n    this.activeTab = index;\n  }\n\n  /**\n   * Clear text animation coroutine interval.\n   */\n  cancelTextAnimation(): void {\n    clearInterval(this.textAnimationCoroutine);\n  }\n\n  /**\n   * Find elements by attribute name and component's key and add event listeners on click.\n   */\n  initGoToEventListeners(): void {\n    RWCActionHelper.bindRWCActions(this, this.host, this.actions, this.rwcKey, 'indexChange');\n  }\n\n  /**\n   * Renders the footer html if footer content is set.\n   */\n  private renderIndicator(): FunctionalComponent {\n    return (\n      <div\n        class=\"indicator\"\n        ref={ (element: HTMLDivElement) => this.indicator = element }>\n      </div>\n    );\n  }\n\n  /**\n   * Renders the component.\n   */\n  render(): FunctionalComponent {\n    return (\n      <Host>\n        <div\n          class={ {\n            container: true,\n            [`mode-${ this.mode }`]: true\n          } }\n          ref={ (element: HTMLDivElement) => this.root = element }\n        >\n          <div\n            class=\"tabs-wrapper\"\n            ref={ (element: HTMLDivElement) => this.tabsWrapper = element }\n          >\n            <div class=\"tabs-container\">\n              <div class=\"tabs-inner-container\">\n                <slot\n                  ref={ (element: HTMLSlotElement) => this.tabContainer = element }\n                  onSlotchange={ () => this.initTabClickEvents() }\n                />\n              </div>\n              { this.renderIndicator() }\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}